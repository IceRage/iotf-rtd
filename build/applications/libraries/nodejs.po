# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-04-19 20:40-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/applications/libraries/nodejs.rst:2
msgid "Node.js for Application Developers"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:4
msgid "See `iot-nodejs <https://github.com/ibm-messaging/iot-nodejs>`_ in GitHub"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:5
msgid "See the `samples for device <https://github.com/ibm-messaging/iot-nodejs/tree/master/samples>`_ in Github"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:6
msgid "See `ibmiotf <https://www.npmjs.com/package/ibmiotf>`_ on NPM"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:13
msgid "Application"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:15
msgid "*ApplicationClient* is application client for the Internet of Things Foundation service. This section contains information on how applications interact with devices."
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:20
msgid "Constructor"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:22
msgid "The constructor builds the application client instance. It accepts an configuration json containing the following :"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:25
msgid "org - Your organization ID"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:26
msgid "id - The unique ID of your application within your organization."
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:27
msgid "auth-key - API key"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:28
msgid "auth-token - API key token"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:29
msgid "type - use 'shared' to enable shared subscription"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:31
msgid "If you want to use quickstart, then send only the first two properties."
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:49
msgid "Using a configuration file"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:51
msgid "Instead of passing the configuration json directly, you can also use a configuration file. Use the following code snippet"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:62
msgid "The configuration file must be in the format of"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:78
msgid "Connecting to the IoT Platform"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:80
msgid "Connect to the IBM Watson Internet of Things Platform by calling the *connect*"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:94
msgid "After the successful connection to the IoT Platform service, the application client sends a *connect* event. So all the logic can be implemented inside this callback function."
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:96
msgid "The Application Client automatically tries to reconnect when it loses connection. When the reconnection is successful, the client emits *reconnect* event."
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:100
msgid "Logging"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:102
msgid "By default, all the logs of ```warn``` are logged. If you want to enable more logs, use the *log.setLevel* function. Supported log levels - *trace, debug, info, warn, error*."
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:118
msgid "Shared Subscription"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:120
msgid "Use this feature to build scalable applications which will load balance messages across multiple instances of the application. To enable this, pass 'type' as 'shared' in the configuration."
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:143
msgid "Handling errors"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:145
msgid "When the application clients encounters an error, it emits an *error* event."
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:164
msgid "Subscribing to device events"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:166
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:168
msgid "When an event is received by the IoT Platform, the credentials of the connection on which the event was received are used to determine from which device the event was sent. Using this architecture, it is impossible for a device to impersonate another device."
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:170
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:173
msgid "To subscribe to all events from all devices"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:188
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:202
msgid "To subscribe to a specific event from all devices"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:217
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:232
msgid "To subscribe to all events published by a device in json format"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:248
msgid "Handling events from devices"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:250
msgid "To process the events received by your subscriptions you need to implement a device event callback method. The ibmiotf application client emits the event *deviceEvent*. This function has the following properties:"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:252
#: ../docs/applications/libraries/nodejs.rst:337
msgid "deviceType"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:253
#: ../docs/applications/libraries/nodejs.rst:338
msgid "deviceId"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:254
msgid "eventType"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:255
msgid "format"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:256
msgid "payload - Device event payload"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:257
msgid "topic - Original topic"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:281
msgid "Subscribing to device status"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:283
msgid "By default, this will subscribe to status updates for all connected devices. Use the type and id parameters to control the scope of the subscription. A single client can support multiple subscriptions."
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:286
msgid "Subscribe to status updates for all devices"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:302
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:317
msgid "Subscribe to status updates for two different devices"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:333
msgid "Handling status updates from devices"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:335
msgid "To process the status updates received by your subscriptions you need to implement an device status callback method. The ibmiotf application client emits the event *deviceStatus*. This function has the following properties:"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:339
msgid "payload - Device status payload"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:340
msgid "topic"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:365
msgid "Publishing events from devices"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:367
msgid "Applications can publish events as if they originated from a Device. The function requires:"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:369
#: ../docs/applications/libraries/nodejs.rst:398
msgid "DeviceType"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:370
#: ../docs/applications/libraries/nodejs.rst:399
msgid "Device ID"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:371
msgid "Event Type"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:372
#: ../docs/applications/libraries/nodejs.rst:401
msgid "Format"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:373
#: ../docs/applications/libraries/nodejs.rst:402
msgid "Data"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:394
msgid "Publishing commands to devices"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:396
msgid "Applications can publish commands to connected devices. The function requires:"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:400
msgid "Command Type"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:423
msgid "Disconnect Client"
msgstr ""

#: ../docs/applications/libraries/nodejs.rst:425
msgid "Disconnects the client and releases the connections"
msgstr ""

