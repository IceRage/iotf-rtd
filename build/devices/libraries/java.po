# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-04-19 20:40-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/devices/libraries/java.rst:2
msgid "Java for Device Developers"
msgstr ""

#: ../docs/devices/libraries/java.rst:4
msgid "See `iot-java <https://github.com/ibm-messaging/iot-java>`_ in GitHub"
msgstr ""

#: ../docs/devices/libraries/java.rst:8
msgid "Constructor"
msgstr ""

#: ../docs/devices/libraries/java.rst:10
msgid "The constructor builds the client instance, and accepts a Properties object containing the following definitions:"
msgstr ""

#: ../docs/devices/libraries/java.rst:12
msgid "org - Your organization ID. (This is a required field. In case of quickstart flow, provide org as quickstart.)"
msgstr ""

#: ../docs/devices/libraries/java.rst:13
msgid "type - The type of your device. (This is a required field.)"
msgstr ""

#: ../docs/devices/libraries/java.rst:14
msgid "id - The ID of your device. (This is a required field."
msgstr ""

#: ../docs/devices/libraries/java.rst:15
msgid "auth-method - Method of authentication (This is an optional field, needed only for registered flow and the only value currently supported is \"token\")."
msgstr ""

#: ../docs/devices/libraries/java.rst:16
msgid "auth-token - API key token (This is an optional field, needed only for registered flow)."
msgstr ""

#: ../docs/devices/libraries/java.rst:17
msgid "clean-session - true or false (required only if you want to connect the application in durable subscription. By default the clean-session is set to true)."
msgstr ""

#: ../docs/devices/libraries/java.rst:19
msgid "One must set ``clean-session`` to false to connect the device in durable subscription. Refer to `Subscription Buffers and Clean Session <https://docs.internetofthings.ibmcloud.com/reference/mqtt/index.html#/subscription-buffers-and-clean-session#subscription-buffers-and-clean-session>`__ for more information about the clean session."
msgstr ""

#: ../docs/devices/libraries/java.rst:21
msgid "The Properties object creates definitions which are used to interact with the IoT Platform module."
msgstr ""

#: ../docs/devices/libraries/java.rst:23
msgid "The following code shows a device publishing events in a Quickstart mode."
msgstr ""

#: ../docs/devices/libraries/java.rst:73
msgid "The following program shows a device publishing events in a registered flow"
msgstr ""

#: ../docs/devices/libraries/java.rst:125
msgid "Using a configuration file"
msgstr ""

#: ../docs/devices/libraries/java.rst:127
msgid "Instead of including a Properties object directly, you can use a configuration file containing the name-value pairs for Properties. If you are using a configuration file containing a Properties object, use the following code format."
msgstr ""

#: ../docs/devices/libraries/java.rst:169
msgid "The content of the configuration file must be in the following format:"
msgstr ""

#: ../docs/devices/libraries/java.rst:185
msgid "Publishing events"
msgstr ""

#: ../docs/devices/libraries/java.rst:186
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""

#: ../docs/devices/libraries/java.rst:188
msgid "When an event is received by the IBM IoT Platform the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""

#: ../docs/devices/libraries/java.rst:190
msgid "Events can be published at any of the three `quality of service levels <../messaging/mqtt.html#/>` defined by the MQTT protocol.  By default events will be published as qos level 0."
msgstr ""

#: ../docs/devices/libraries/java.rst:193
msgid "Publish event using default quality of service"
msgstr ""

#: ../docs/devices/libraries/java.rst:210
msgid "Publish event using user-defined quality of service"
msgstr ""

#: ../docs/devices/libraries/java.rst:212
msgid "Events can be published at higher MQTT quality of servive levels, but these events may take slower than QoS level 0, because of the extra confirmation of receipt. Also Quickstart flow allows only Qos of 0"
msgstr ""

#: ../docs/devices/libraries/java.rst:228
msgid "Publish event using HTTP(s)"
msgstr ""

#: ../docs/devices/libraries/java.rst:229
msgid "Apart from MQTT, the devices can publish events to the IoT Platform using HTTP(s) by following 3 simple steps,"
msgstr ""

#: ../docs/devices/libraries/java.rst:231
msgid "Construct a DeviceClient instance using the properties file"
msgstr ""

#: ../docs/devices/libraries/java.rst:232
msgid "Construct an event that needs to be published"
msgstr ""

#: ../docs/devices/libraries/java.rst:233
msgid "Specify the event name and publish the event using publishEventOverHTTP() method as follows,"
msgstr ""

#: ../docs/devices/libraries/java.rst:246
msgid "The complete code can be found in the device example `HttpDeviceEventPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/device/HttpDeviceEventPublish.java>`__"
msgstr ""

#: ../docs/devices/libraries/java.rst:248
msgid "Based on the settings in the properties file, the publishEventOverHTTP() method either publishes the event in Quickstart or in Registered flow. When the Organization ID mentioned in the properties file is quickstart, publishEventOverHTTP() method publishes the event to the IoT Platform quickstart service and publishes the event in plain HTTP format. But when valid registered organization is mentioned in the properties file, this method always publishes the event in HTTPS (HTTP over SSL), so all the communication is secured."
msgstr ""

#: ../docs/devices/libraries/java.rst:250
msgid "The event in HTTP(s) is published at most once QoS, so the device needs to implement the retry logic when there is an error."
msgstr ""

#: ../docs/devices/libraries/java.rst:255
msgid "Handling commands"
msgstr ""

#: ../docs/devices/libraries/java.rst:256
msgid "When the device client connects it automatically subscribes to any commands for this device. To process specific commands you need to register a command callback method. The messages are returned as an instance of the Command class which has the following properties:"
msgstr ""

#: ../docs/devices/libraries/java.rst:259
msgid "payload - java.lang.String"
msgstr ""

#: ../docs/devices/libraries/java.rst:260
msgid "format - java.lang.String"
msgstr ""

#: ../docs/devices/libraries/java.rst:261
msgid "command - java.lang.String"
msgstr ""

#: ../docs/devices/libraries/java.rst:262
msgid "timestamp - org.joda.time.DateTime"
msgstr ""

