# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-04-19 20:40-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/devices/libraries/nodejs.rst:2
msgid "Node.js for Device Developers"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:4
msgid "See `iot-nodejs <https://github.com/ibm-messaging/iot-nodejs>`_ in GitHub"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:5
msgid "See the `samples for device <https://github.com/ibm-messaging/iot-nodejs/tree/master/samples>`_ in Github"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:6
msgid "See `ibmiotf <https://www.npmjs.com/package/ibmiotf>`_ on NPM"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:9
msgid "Constructor"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:11
msgid "The constructor builds the device client instance. It accepts a configuration json containing the following definitions:"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:13
msgid "``org`` - Your organization ID"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:14
msgid "``type`` - The type of your device"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:15
msgid "``id`` - The ID of your device"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:16
msgid "``auth-method`` - Method of authentication (the only value currently supported is ``token``)"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:17
msgid "``auth-token`` - API key token (required if auth-method is ``token``)"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:19
msgid "If you want to use Quickstart, then send only the first three properties."
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:36
msgid "Using a configuration file"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:38
msgid "Instead of passing the configuration json directly, you can also use a configuration json file. Use the following code snippet:"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:46
msgid "The configuration file `device.json` must be in the format of"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:59
msgid "Connecting to the IoT Platform"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:61
msgid "Connect to the IoT Platform by calling the *connect* function."
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:84
msgid "After the successful connection to the IoT Platform service, the device client sends a *connect* event. So all the device logic can be implemented inside this callback function."
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:86
msgid "The Device Client automatically tries to reconnect when it loses connection. When the reconnection is successful, the client emits *reconnect* event."
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:89
msgid "Logging"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:91
msgid "By default, all the logs of ``warn`` are logged. If you want to enable more logs, use the *log.setLevel* function. Supported log levels - *trace, debug, info, warn, error*."
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:107
msgid "Publishing events"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:109
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:111
msgid "When an event is received by the IoT Platform the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:113
msgid "Events can be published at any of the three quality of service levels defined by the MQTT protocol. By default events will be published as QoS level 0. Please not that if you are using the Internet of Things Quickstart service, events can only be published at QoS level 0."
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:115
msgid "Events can be published by using:"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:118
msgid "eventType - Type of event to be published e.g status, gps."
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:119
msgid "eventFormat - Format of the event e.g json."
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:120
msgid "data - Payload of the event.(Must be buffer/String)"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:121
msgid "QoS - MQTT quality of service for the publish event. Supported values : 0,1,2."
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:139
msgid "Handling commands"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:141
msgid "When the device client connects, it automatically subscribes to any command for this device. To process specific commands you need to register a command callback function. The device client sends *command* when a command is received. The callback function has the following properties."
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:143
msgid "commandName - name of the command invoked"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:144
msgid "format - e.g json, xml"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:145
msgid "payload - payload for the command"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:146
msgid "topic - actual topic where the command was received"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:171
msgid "Handling errors"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:173
msgid "When the device clients encounters an error, it emits an *error* event."
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:194
msgid "Disconnect Client"
msgstr ""

#: ../docs/devices/libraries/nodejs.rst:196
msgid "Disconnects the client and releases the connections"
msgstr ""

