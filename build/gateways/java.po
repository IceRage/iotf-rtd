# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-04-19 20:40-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/gateways/java.rst:2
msgid "Java for Gateway Developers"
msgstr ""

#: ../docs/gateways/java.rst:4
msgid "See `iot-java <https://github.com/ibm-messaging/iot-java>`_ in GitHub"
msgstr ""

#: ../docs/gateways/java.rst:7
msgid "Constructor"
msgstr ""

#: ../docs/gateways/java.rst:9
msgid "The constructor builds the Gateway client instance, and accepts a Properties object containing the following definitions:"
msgstr ""

#: ../docs/gateways/java.rst:11
msgid "org - Your organization ID."
msgstr ""

#: ../docs/gateways/java.rst:12
msgid "type - The type of your Gateway device."
msgstr ""

#: ../docs/gateways/java.rst:13
msgid "id - The ID of your Gateway."
msgstr ""

#: ../docs/gateways/java.rst:14
msgid "auth-method - Method of authentication (The only value currently supported is \"token\")."
msgstr ""

#: ../docs/gateways/java.rst:15
msgid "auth-token - API key token."
msgstr ""

#: ../docs/gateways/java.rst:17
msgid "The Properties object creates definitions which are used to interact with the Watson Internet of Things Platform module."
msgstr ""

#: ../docs/gateways/java.rst:19
msgid "The following code snippet shows how to construct the GatewayClient instance,"
msgstr ""

#: ../docs/gateways/java.rst:33
msgid "Using a configuration file"
msgstr ""

#: ../docs/gateways/java.rst:35
msgid "Instead of including a Properties object directly, you can use a configuration file containing the name-value pairs for Properties. If you are using a configuration file containing a Properties object, use the following code format."
msgstr ""

#: ../docs/gateways/java.rst:43
msgid "The Gateway device configuration file must be in the following format:"
msgstr ""

#: ../docs/gateways/java.rst:58
msgid "Connecting to the Watson Internet of Things Platform"
msgstr ""

#: ../docs/gateways/java.rst:60
msgid "Connect to the Watson Internet of Things Platform by calling the *connect* function."
msgstr ""

#: ../docs/gateways/java.rst:70
msgid "After the successful connection to the IBM Watson IoT Platform, the Gateway client can perform the following operations,"
msgstr ""

#: ../docs/gateways/java.rst:72
msgid "Publish events for itself and on behalf of devices connected behind the Gateway."
msgstr ""

#: ../docs/gateways/java.rst:73
msgid "Subscribe to commands for itself and on behalf of devices behind the Gateway."
msgstr ""

#: ../docs/gateways/java.rst:78
msgid "Register devices using the Watson IoT Platform API"
msgstr ""

#: ../docs/gateways/java.rst:79
msgid "There are different ways to register the devices behind the Gateway to IBM Watson IoT Platform,"
msgstr ""

#: ../docs/gateways/java.rst:81
msgid "**Auto registration**: The device gets added automatically in IBM Watson IoT Platform when Gateway publishes any event/subscribes to any commands for the devices connected to it."
msgstr ""

#: ../docs/gateways/java.rst:82
msgid "**API**: The Watson IoT Platform API can be used to register the devices to the Watson IoT Platform."
msgstr ""

#: ../docs/gateways/java.rst:84
msgid "The Watson IoT Platform API can be used to register the devices (that are connected to the Gateway) to the Watson IoT Platform. The APIClient simplifies the interactions with Watson IoT Platform API. Get the APIClient instance by invoking the api() method as follows,"
msgstr ""

#: ../docs/gateways/java.rst:97
msgid "Once you get the handle of APIClient, you can add the devices. Following code snippet shows how to add a device to a Gateway in Watson IoT Platform,"
msgstr ""

#: ../docs/gateways/java.rst:111
msgid "The gwDeviceId and gwDeviceType are the Gateway properties to which this device will be attached to when its registered."
msgstr ""

#: ../docs/gateways/java.rst:117
msgid "Publishing events"
msgstr ""

#: ../docs/gateways/java.rst:118
msgid "Events are the mechanism by which Gateways/devices publish data to the Watson IoT Platform. The Gateway/device controls the content of the event and assigns a name for each event it sends."
msgstr ""

#: ../docs/gateways/java.rst:120
msgid "**The Gateway can publish events from itself and on behalf of any device connected via the Gateway**."
msgstr ""

#: ../docs/gateways/java.rst:122
msgid "When an event is received by the IBM Watson IoT Platform the credentials of the connection on which the event was received are used to determine from which Gateway the event was sent. With this architecture it is impossible for a Gateway to impersonate another device."
msgstr ""

#: ../docs/gateways/java.rst:124
msgid "Events can be published at any of the three `quality of service levels <../messaging/mqtt.html#/>`__ defined by the MQTT protocol.  By default events will be published as qos level 0."
msgstr ""

#: ../docs/gateways/java.rst:127
msgid "Publish Gateway event using default quality of service"
msgstr ""

#: ../docs/gateways/java.rst:140
msgid "Publish Gateway event using user-defined quality of service"
msgstr ""

#: ../docs/gateways/java.rst:142
msgid "Events can be published at higher MQTT quality of service levels, but these events may take slower than QoS level 0, because of the extra confirmation of receipt."
msgstr ""

#: ../docs/gateways/java.rst:156
msgid "Publishing events from devices"
msgstr ""

#: ../docs/gateways/java.rst:158
msgid "The Gateway can publish events on behalf of any device connected via the Gateway by passing the appropriate typeId and deviceId based on the origin of the event:"
msgstr ""

#: ../docs/gateways/java.rst:173
msgid "One can use the overloaded publishDeviceEvent() method to publish the device event in the desired quality of service. Refer to `MQTT Connectivity for Gateways <https://docs.internetofthings.ibmcloud.com/gateways/mqtt.html>`__ documentation to know more about the topic structure used."
msgstr ""

#: ../docs/gateways/java.rst:179
msgid "Handling commands"
msgstr ""

#: ../docs/gateways/java.rst:180
msgid "The Gateway can subscribe to commands directed at the gateway itself and to any device connected via the gateway. When the Gateway client connects, it automatically subscribes to any commands for this Gateway. But to subscribe to any commands for the devices connected via the Gateway, use one of the overloaded subscribeToDeviceCommands() method, for example,"
msgstr ""

#: ../docs/gateways/java.rst:189
msgid "To process specific commands you need to register a command callback method. The messages are returned as an instance of the Command class which has the following properties:"
msgstr ""

#: ../docs/gateways/java.rst:191
msgid "deviceType - The device type for which the command is received."
msgstr ""

#: ../docs/gateways/java.rst:192
msgid "deviceId - The device id for which the command is received, Could be the Gateway or any device connected via the Gateway."
msgstr ""

#: ../docs/gateways/java.rst:193
msgid "payload - The command payload."
msgstr ""

#: ../docs/gateways/java.rst:194
msgid "format - The format of the command payload, currently only JSON format is supported in the Java Client Library."
msgstr ""

#: ../docs/gateways/java.rst:195
msgid "command - The name of the command."
msgstr ""

#: ../docs/gateways/java.rst:196
msgid "timestamp - The org.joda.time.DateTime when the command is sent."
msgstr ""

#: ../docs/gateways/java.rst:198
msgid "A sample implementation of the Command callback is shown below,"
msgstr ""

#: ../docs/gateways/java.rst:234
msgid "Once the Command callback is added to the GatewayClient, the processCommand() method is invoked whenever any command is published on the subscribed criteria, The following snippet shows how to add the command call back into GatewayClient instance,"
msgstr ""

#: ../docs/gateways/java.rst:245
msgid "Overloaded methods are available to control the command subscription."
msgstr ""

#: ../docs/gateways/java.rst:250
msgid "List Devices Connected through the Gateway"
msgstr ""

#: ../docs/gateways/java.rst:252
msgid "Invoke the method getDevicesConnectedThroughGateway() to retrieve all devices that are connected through the specified gateway(typeId, deviceId) to Watson IoT Platform:"
msgstr ""

#: ../docs/gateways/java.rst:261
msgid "Examples"
msgstr ""

#: ../docs/gateways/java.rst:262
msgid "`SampleRasPiGateway <https://github.com/ibm-messaging/iot-gateway-samples/tree/master/java/gateway-samples>`__ - This Java project contains 3 samples, which will help one to connect their own Gateway and devices behind the Gateway to IBM Watson Internet of Things Platform. All the samples use the Java Client Library for IBM Watson IoT Platform, that simplifies the Gateway interactions with the Platform."
msgstr ""

#: ../docs/gateways/java.rst:265
msgid "Recipes"
msgstr ""

#: ../docs/gateways/java.rst:267
msgid "Refer to `the recipe <https://developer.ibm.com/recipes/tutorials/connect-raspberry-pi-as-gateway-to-watson-iot-platform/>`__ that explains how to connect your Gateway and devices behind the Gateway to IBM Watson Internet of Things Platform with the sample present in this github project."
msgstr ""

#: ../docs/gateways/java.rst:269
msgid "Refer to `the recipe <https://developer.ibm.com/recipes/tutorials/raspberry-pi-as-managed-gateway-in-watson-iot-platform-part-1/>`__ that explains how to connect your Gateway as managed device in IBM Watson Internet of Things Platform and perform one or more device management operations."
msgstr ""

