# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-17 09:49-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../java/java_cli_app.rst:3
msgid "Java Client Library - Applications"
msgstr ""
"Biblioteca de cliente Java - Aplicaciones"

#: ../java/java_cli_app.rst:6
msgid "Introduction"
msgstr ""
"Introducción"

#: ../java/java_cli_app.rst:8
msgid "This client library describes how to use applications with the Java ibmiotf client library. For help with getting started with this module, see `Java Client Library - Introduction <../java/javaintro.html>`__."
msgstr ""
"Esta biblioteca de cliente describe cómo utilizar las aplicaciones con la biblioteca de cliente Java ibmiotf. Para obtener ayuda con el inicio de este módulo, consulte `Biblioteca de cliente Java - Introducción <../java/javaintro.html>`__."

#: ../java/java_cli_app.rst:10
msgid "This client library is divided into three sections, all included within the library. This section contains information on how applications can use the Java ibmiotf Client Library to interact with devices."
msgstr ""
"Esta biblioteca de cliente se divide en tres secciones, todas incluidas en la biblioteca. Esta sección contiene información sobre cómo pueden utilizar las aplicaciones la biblioteca de cliente Java ibmiotf para interactuar con los dispositivos."

#: ../java/java_cli_app.rst:12
msgid "The `Device section <../java/java_cli_devices.html>`__ contains information on how devices can publish events and handle commands using the Java ibmiotf Client Library."
msgstr ""
"La `sección Dispositivo <../java/java_cli_devices.html>`__ contiene información sobre cómo los dispositivos pueden publicar los sucesos y manejar los mandatos utilizando la biblioteca de cliente Java ibmiotf."

#: ../java/java_cli_app.rst:14
msgid "The `Managed Device section <../java/java_deviceManagement.html>`__ contains information on how devices can connect to the Internet of Things Foundation Device Management service using Java ibmiotf Client Library and perform device management operations like firmware update, location update, and diagnostics update."
msgstr ""
"La `sección Dispositivo gestionado <../java/java_deviceManagement.html>`__ contiene información sobre cómo se pueden conectar dispositivos al servicio de gestión de dispositivos de Internet of Things Foundation utilizando la biblioteca de cliente Java ibmiotf y llevar a cabo operaciones de gestión de dispositivos como la actualización de firmware, la actualización de ubicaciones y la actualización de diagnósticos."

#: ../java/java_cli_app.rst:17
msgid "Constructor"
msgstr ""
"Constructor"

#: ../java/java_cli_app.rst:19
msgid "The constructor builds the client instance, and accepts a Properties object containing the following definitions:"
msgstr ""
"El constructor crea la instancia de cliente y acepta un objeto Propiedades que contiene las definiciones siguientes:"

#: ../java/java_cli_app.rst:21
msgid "org - Your organization ID. (This is a required field. In case of quickstart flow, provide org as quickstart.)"
msgstr ""
"org - ID de organización. (Es un campo necesario. En el caso de flujo de inicio rápido, proporcione org como inicio rápido.)"

#: ../java/java_cli_app.rst:22
msgid "id - The unique ID of your application within your organization."
msgstr ""
"id - ID exclusivo de la aplicación en la organización."

#: ../java/java_cli_app.rst:23
msgid "auth-method - Method of authentication (the only value currently supported is “apikey”)."
msgstr ""
"auth-method - Método de autenticación (el único valor admitido actualmente es \“apikey\”)."

#: ../java/java_cli_app.rst:24
msgid "auth-key - API key (required if auth-method is “apikey”)."
msgstr ""
"auth-key - Clave de API (necesario si auth-method es \"apikey\")."

#: ../java/java_cli_app.rst:25
msgid "auth-token - API key token (required if auth-method is “apikey”)."
msgstr ""
"auth-token - Señal de clave de API (necesario si auth-method es \"apikey\")."

#: ../java/java_cli_app.rst:26
msgid "enable-shared-subscription - true or false (required only if shared subscription needs to be enabled)"
msgstr ""
"enable-shared-subscription - true o false (sólo es necesario si debe habilitarse la suscripción compartida)"

#: ../java/java_cli_app.rst:28
msgid "One must set **enable-shared-subscription** to true to build scalable applications which will load balance messages across multiple instances of the application. Refer to the `scalable applications section <https://docs.internetofthings.ibmcloud.com/messaging/applications.html#/scalable-applications#scalable-applications>`__ for more information about the load balancing."
msgstr ""
"Debe establecer **enable-shared-subscription** en true para generar aplicaciones escalables que cargarán mensajes de equilibrio en varias instancias de la aplicación. Consulte la `sección Aplicaciones escalables <https://docs.internetofthings.ibmcloud.com/messaging/applications.html#/scalable-applications#scalable-applications>`__ para obtener más información sobre el equilibrio de carga. "

#: ../java/java_cli_app.rst:30
msgid "The Properties object creates definitions which are used to interact with the Internet of Things Foundation module. If no options are provided or organization is provided as quickstart, the client will connect to the Internet of Things Foundation Quickstart, and default to an unregistered device."
msgstr ""
"El objeto Propiedades crea definiciones que se utilizan para interactuar con el módulo Internet of Things Foundation. Si no se proporcionan opciones o la organización se proporciona como quickstart, el cliente se conectará con el servicio Quickstart de Internet of Things Foundation y de forma predeterminada con un dispositivo sin registrar. "

#: ../java/java_cli_app.rst:32
msgid "The following code snippet shows how to construct the ApplicationClient instance in Quickstart mode,"
msgstr ""
"El siguiente fragmento de código muestra cómo construir la instancia ApplicationClient en modalidad de inicio rápido, "

#: ../java/java_cli_app.rst:44
msgid "The following code snippet shows how to construct the ApplicationClient instance in registered flow,"
msgstr ""
"El siguiente fragmento de código muestra cómo construir la instancia ApplicationClient en un flujo de registrado, "

#: ../java/java_cli_app.rst:60
msgid "Using a configuration file"
msgstr ""
"Utilización de un archivo de configuración"

#: ../java/java_cli_app.rst:62
msgid "Instead of including a Properties object directly, you can use a configuration file containing the name-value pairs for Properties. If you are using a configuration file containing a Properties object, use the following code format."
msgstr ""
"En lugar de incluir un objeto Propiedades directamente, puede utilizar un archivo de configuración que contenga los pares nombre-valor para Propiedades. Si está utilizando un archivo de configuración que contiene un objeto Propiedades, utilice el formato de código siguiente."

#: ../java/java_cli_app.rst:70
msgid "The application configuration file must be in the following format:"
msgstr ""
"El archivo de configuración de aplicación debe estar en el formato siguiente:"

#: ../java/java_cli_app.rst:85
msgid "Connecting to the Internet of Things Foundation"
msgstr ""
"Conexión a Internet of Things Foundation"

#: ../java/java_cli_app.rst:87
msgid "Connect to the Internet of Things Foundation by calling the *connect* function."
msgstr ""
"Conexión a Internet of Things Foundation llamando a la función *connect*."

#: ../java/java_cli_app.rst:97
msgid "After the successful connection to the IoTF service, the application client can perform the following operations, like subscribing to device events, subscribing to device status, publishing device events and commands."
msgstr ""
"Tras una conexión correcta al servicio IoTF, el cliente de aplicaciones puede ejecutar las siguientes operaciones como, por ejemplo, suscribirse a sucesos de dispositivo, suscribirse a estados de dispositivo o publicar sucesos de dispositivo y mandatos. "

#: ../java/java_cli_app.rst:102
msgid "Subscribing to device events"
msgstr ""
"Suscripción a sucesos de dispositivo"

#: ../java/java_cli_app.rst:103
msgid "Events are the mechanism by which devices publish data to the Internet of Things Foundation. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"Los sucesos son el mecanismo mediante el cual los dispositivos publican datos en Internet of Things Foundation. El dispositivo controla el contenido del suceso y asigna un nombre para cada suceso que envía."

#: ../java/java_cli_app.rst:105
msgid "When an event is received by the IoT Foundation the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""
"Cuando IoT Foundation recibe un suceso, las credenciales de la conexión en la que se ha recibido el suceso se utilizan para determinar desde qué dispositivo se envió el suceso. Con esta arquitectura, es imposible que un dispositivo pueda representar a otro."

#: ../java/java_cli_app.rst:107
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""
"De forma predeterminada, las aplicaciones se suscribirán a todos los sucesos de todos los dispositivos conectados. Utilice los parámetros type, id, event y msgFormat para controlar el alcance de la suscripción. Un cliente puede soportar varias suscripciones. Los ejemplos de código siguientes muestran cómo suscribirse a dispositivos dependiendo de los parámetros de dispositivo type, id, event y msgFormat."

#: ../java/java_cli_app.rst:110
msgid "To subscribe to all events from all devices"
msgstr ""
"Para suscribirse a todos los sucesos de todos los dispositivos"

#: ../java/java_cli_app.rst:118
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""
"Para suscribirse a todos los sucesos de todos los dispositivos de un tipo específico"

#: ../java/java_cli_app.rst:126
msgid "To subscribe to all events from a specific device"
msgstr ""
"Para suscribirse a todos los sucesos de un dispositivo específico"

#: ../java/java_cli_app.rst:134
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""
"Para suscribirse a un suceso específico de dos o más dispositivos diferentes"

#: ../java/java_cli_app.rst:143
msgid "To subscribe to events published by a device in json format"
msgstr ""
"Para suscribirse a los sucesos publicados por un dispositivo en formato json"

#: ../java/java_cli_app.rst:153
msgid "Handling events from devices"
msgstr ""
"Manejo de sucesos de dispositivos"

#: ../java/java_cli_app.rst:154
msgid "To process the events received by your subscriptions you need to register an event callback method. The messages are returned as an instance of the Event class which has the following properties:"
msgstr ""
"Para procesar los sucesos recibidos por las suscripciones que necesita para registrar un método de devolución de llamada de sucesos. Los mensajes se devuelven como una instancia de la clase de suceso que tiene las propiedades siguientes:"

#: ../java/java_cli_app.rst:156
msgid "event.device - string (uniquely identifies the device across all types of devices in the organization)"
msgstr ""
"event.device - serie (identifica de forma exclusiva el dispositivo entre todos los tipos de dispositivos de la organización)"

#: ../java/java_cli_app.rst:157
msgid "event.deviceType - string"
msgstr ""
"event.deviceType - serie"

#: ../java/java_cli_app.rst:158
msgid "event.deviceId - string"
msgstr ""
"event.deviceId - serie"

#: ../java/java_cli_app.rst:159
msgid "event.event - string"
msgstr ""
"event.event - serie"

#: ../java/java_cli_app.rst:160
msgid "event.format - string"
msgstr ""
"event.format - serie"

#: ../java/java_cli_app.rst:161
msgid "event.data - dict"
msgstr ""
"event.data - diccionario"

#: ../java/java_cli_app.rst:162
msgid "event.timestamp - datetime"
msgstr ""
"event.timestamp - fecha y hora"

#: ../java/java_cli_app.rst:164
msgid "A sample implementation of the Event callback,"
msgstr ""
"Una implementación de ejemplo de la devolución de llamada de suceso, "

#: ../java/java_cli_app.rst:182
msgid "Once the event callback is added to the ApplicationClient, the processEvent() method is invoked whenever any event is published on the subscribed criteria, The following snippet shows how to add the Event call back into ApplicationClient instance,"
msgstr ""
"Una vez añadida la devolución de llamada de suceso a ApplicationClient, se invoca el método processEvent() siempre que se publica un suceso sobre los criterios suscritos. El siguiente fragmento de código muestra cómo añadir la devolución de llamada de suceso a la instancia ApplicationClient,"

#: ../java/java_cli_app.rst:190
msgid "Similar to subscribing to device events, the application can subscribe to commands that are sent to the devices. Following code snippet shows how to subscribe to all commands to all the devices in the organization:"
msgstr ""
"De forma parecida a la suscripción a sucesos de dispositivo, la aplicación puede suscribirse a mandatos que se envían a los dispositivos. El siguiente fragmento de código muestra cómo suscribirse a todos los mandatos de todos los dispositivos en la organización: "

#: ../java/java_cli_app.rst:198
msgid "Overloaded methods are available to control the command subscription. The processCommand() method is called when a command is sent to the device that matches the command subscription."
msgstr ""
"Hay disponibles métodos sobrecargados para controlar la suscripción de mandatos. El método processCommand() se invoca cuando se envía un mandato al dispositivo que coincide con la suscripción de mandato. "

#: ../java/java_cli_app.rst:203
msgid "Subscribing to device status"
msgstr ""
"Suscripción al estado de dispositivo"

#: ../java/java_cli_app.rst:204
msgid "Similar to subscribing to device events, applications can subscribe to device status, like device connect and disconnect to Internet of Things Foundation. By default, this will subscribe to status updates for all connected devices. Use the Device Type and Device Id parameters to control the scope of the subscription. A single ApplicationClient can support multiple subscriptions."
msgstr ""
"De forma parecida a la suscripción a sucesos de dispositivo, las aplicaciones pueden suscribirse a estados de dispositivo como, por ejemplo, conexión y desconexión de dispositivos a Internet of Things Foundation. De forma predeterminada, la suscripción será a las actualizaciones de estado para todos los dispositivos conectados. Utilice los parámetros Tipo de dispositivo e ID de dispositivo para controlar el ámbito de la suscripción. Un ApplicationClient individual puede dar soporte a varias suscripciones. "

#: ../java/java_cli_app.rst:207
msgid "Subscribe to status updates for all devices"
msgstr ""
"Suscribirse a actualizaciones de estado para todos los dispositivos"

#: ../java/java_cli_app.rst:216
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""
"Suscribirse a actualizaciones de estado para todos los dispositivos de un tipo específico"

#: ../java/java_cli_app.rst:225
msgid "Subscribe to status updates for two different devices"
msgstr ""
"Suscribirse a actualizaciones de estado para dos dispositivos diferentes"

#: ../java/java_cli_app.rst:237
msgid "Handling status updates from devices"
msgstr ""
"Manejo de actualizaciones de estado de dispositivos"

#: ../java/java_cli_app.rst:238
msgid "To process the status updates received by your subscriptions you need to register an status event callback method. The messages are returned as an instance of the Status class which contains the below mentioned properties:"
msgstr ""
"Para procesar las actualizaciones de estado recibidas por las suscripciones que necesita para registrar un método de devolución de llamada de sucesos de estado. Los mensajes se devuelven como una instancia de la clase de estado que contiene las propiedades que se especifican a continuación:"

#: ../java/java_cli_app.rst:240
msgid "The following properties are set for both \"Connect\" and \"Disconnect\" status events:"
msgstr ""
"Se establecen las propiedades siguientes para los sucesos de estado \"Conectar\" y \"Desconectar\":"

#: ../java/java_cli_app.rst:242
msgid "status.clientAddr - string"
msgstr ""
"status.clientAddr - serie"

#: ../java/java_cli_app.rst:243
msgid "status.protocol - string"
msgstr ""
"status.protocol - serie"

#: ../java/java_cli_app.rst:244
msgid "status.clientId - string"
msgstr ""
"status.clientId - serie"

#: ../java/java_cli_app.rst:245
msgid "status.user - string"
msgstr ""
"status.user - serie"

#: ../java/java_cli_app.rst:246
msgid "status.time - java.util.Date"
msgstr ""
"status.time - java.util.Date"

#: ../java/java_cli_app.rst:247
msgid "status.action - string"
msgstr ""
"status.action - serie"

#: ../java/java_cli_app.rst:248
msgid "status.connectTime - java.util.Date"
msgstr ""
"status.connectTime - java.util.Date"

#: ../java/java_cli_app.rst:249
msgid "status.port - integer"
msgstr ""
"status.port - entero"

#: ../java/java_cli_app.rst:251
msgid "The following properties are only set when the action is \"Disconnect\":"
msgstr ""
"Las propiedades siguientes solo se establecen cuando la acción es \"Desconectar\":"

#: ../java/java_cli_app.rst:253
msgid "status.writeMsg - integer"
msgstr ""
"status.writeMsg - entero"

#: ../java/java_cli_app.rst:254
msgid "status.readMsg - integer"
msgstr ""
"status.readMsg - entero"

#: ../java/java_cli_app.rst:255
msgid "status.reason - string"
msgstr ""
"status.reason - serie"

#: ../java/java_cli_app.rst:256
msgid "status.readBytes - integer"
msgstr ""
"status.readBytes - entero"

#: ../java/java_cli_app.rst:257
msgid "status.writeBytes - integer"
msgstr ""
"status.writeBytes - entero"

#: ../java/java_cli_app.rst:259
msgid "A sample implementation of the Status callback,"
msgstr ""
"Una implementación de ejemplo de la devolución de llamada de estado, "

#: ../java/java_cli_app.rst:283
msgid "Once the status callback is added to the ApplicationClient, the processDeviceStatus() method is invoked whenever any device is connected or disconnected from Internet of Things Foundation that matches the criteria, The following snippet shows how to add the status call back instance into ApplicationClient,"
msgstr ""
"Una vez añadida la devolución de llamada de estado a ApplicationClient, se invoca el método processDeviceStatus() siempre que se conecta o desconecta un dispositivo de Internet of Things Foundation que coincide con los criterios. El siguiente fragmento de código muestra cómo añadir la devolución de llamada de estado a la instancia ApplicationClient,"

#: ../java/java_cli_app.rst:293
msgid "As similar to device status, the application can subscribe to any other application connect or disconnect status as well. Following code snippet shows how to subscribe to the application status in the organization:"
msgstr ""
"De forma parecida al estado de dispositivo, la aplicación puede suscribirse también al estado de conexión o desconexión de cualquier otra aplicación. El siguiente fragmento de código muestra cómo suscribirse al estado de aplicación en la organización: "

#: ../java/java_cli_app.rst:301
msgid "Overloaded method is available to control the status subscription to a particular application. The processApplicationStatus() method is called whenever any application is connected or disconnected from Internet of Things Foundation that matches the criteria."
msgstr ""
"Hay disponible un método sobrecargado para controlar la suscripción de estado a una determinada aplicación. Se invoca el método processApplicationStatus() siempre que se conecta o desconecta una aplicación de Internet of Things Foundation que coincide con los criterios. "

#: ../java/java_cli_app.rst:304
msgid "Publishing events from devices"
msgstr ""
"Publicación de sucesos desde dispositivos"

#: ../java/java_cli_app.rst:305
msgid "Applications can publish events as if they originated from a Device."
msgstr ""
"Las aplicaciones pueden publicar sucesos como si se originaran en un dispositivo."

#: ../java/java_cli_app.rst:322
msgid "Publish events using HTTP(s)"
msgstr ""
"Publicar sucesos utilizando HTTP(s)"

#: ../java/java_cli_app.rst:323
msgid "Apart from MQTT, the application can publish device events to IBM Internet of Things Foundation using HTTP(s) by following 3 simple steps,"
msgstr ""
"Aparte de MQTT, la aplicación puede publicar sucesos de dispositivo en IBM Internet of Things Foundation utilizando HTTP(s) siguiendo 3 pasos simples, "

#: ../java/java_cli_app.rst:325
msgid "Construct the ApplicationClient instance using the properties file"
msgstr ""
"Construir la instancia de ApplicationClient utilizando el archivo de propiedades"

#: ../java/java_cli_app.rst:326
msgid "Construct the event that needs to be published"
msgstr ""
"Construir el suceso que debe publicarse"

#: ../java/java_cli_app.rst:327
msgid "Specify the event name, Device Type, Device ID and publish the event using publishEventOverHTTP() method as follows,"
msgstr ""
"Especifique el nombre de suceso, el tipo de dispositivo, el ID de dispositivo y publique el suceso utilizando el método publishEventOverHTTP() como se describe a continuación,"

#: ../java/java_cli_app.rst:341
msgid "The complete code can be found in the application example `HttpApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/HttpApplicationDeviceEventPublish.java>`__"
msgstr ""
"El código completo se puede encontrar en el ejemplo de aplicación  `HttpApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/HttpApplicationDeviceEventPublish.java>`__"

#: ../java/java_cli_app.rst:343
msgid "Based on the settings in the properties file, the publishEventOverHTTP() method either publishes the event in Quickstart or in Registered flow. When the Organization ID mentioned in the properties file is quickstart, publishEventOverHTTP() method publishes the event to Internet of Things Foundation quickstart service and publishes the event in plain HTTP format. But when valid registered organization is mentioned in the properties file, this method always publishes the event in HTTPS (HTTP over SSL), so all the communication is secured."
msgstr ""
"Según los valores del archivo de propiedades, el método publishEventOverHTTP() publica el suceso en Quickstart o en un flujo registrado. Cuando el ID de la organización citado en el archivo de propiedades es quickstart, el método publishEventOverHTTP() publica el suceso en un servicio de inicio rápido de Internet of Things Foundation con formato HTTP simple. No obstante, cuando se cita una organización registrada válida en el archivo de propiedades, este método siempre publica el suceso en HTTPS (HTTP sobre SSL), para que toda la comunicación sea segura. "

#: ../java/java_cli_app.rst:345
msgid "The event in HTTP(s) is published at most once Quality of Service, so the application needs to implement the retry logic when there is an error."
msgstr ""
"El suceso en HTTP(s) se publica como máximo una vez (calidad de servicio), por lo que la aplicación debe implementar la lógica de reintentos cuando se produce un error. "

#: ../java/java_cli_app.rst:350
msgid "Publishing commands to devices"
msgstr ""
"Publicación de mandatos en dispositivos"

#: ../java/java_cli_app.rst:351
msgid "Applications can publish commands to connected devices."
msgstr ""
"Las aplicaciones pueden publicar mandatos en dispositivos conectados."

#: ../java/java_cli_app.rst:368
msgid "Examples"
msgstr ""
"Ejemplos"

#: ../java/java_cli_app.rst:369
msgid "`MQTTApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/MQTTApplicationDeviceEventPublish.java>`__ - A sample application that shows how to publish device events."
msgstr ""
"`MQTTApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/MQTTApplicationDeviceEventPublish.java>`__ - Una aplicación de ejemplo que muestra cómo publicar sucesos de dispositivo. "

#: ../java/java_cli_app.rst:370
msgid "`RegisteredApplicationCommandPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/RegisteredApplicationCommandPublish.java>`__ - A sample application that shows how to publish a command to a device."
msgstr ""
"`RegisteredApplicationCommandPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/RegisteredApplicationCommandPublish.java>`__ - Una aplicación de ejemplo que muestra cómo publicar un mandato en un dispositivo. "

#: ../java/java_cli_app.rst:371
msgid "`RegisteredApplicationSubscribeSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/RegisteredApplicationSubscribeSample.java>`__ - A sample application that shows how to subscribe for various events like, device events, device commands, device status and application status."
msgstr ""
"`RegisteredApplicationSubscribeSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/RegisteredApplicationSubscribeSample.java>`__ - Una aplicación de ejemplo que muestra cómo suscribirse a varios sucesos como, por ejemplo, sucesos de dispositivo, mandatos de dispositivo, estado de dispositivo y estado de aplicación. "

#: ../java/java_cli_app.rst:372
msgid "`SharedSubscriptionSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/SharedSubscriptionSample.java>`__ - A sample application that shows how to build a scalable application which will load balance messages across multiple instances of the application."
msgstr ""
"`SharedSubscriptionSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/SharedSubscriptionSample.java>`__ - Una aplicación de ejemplo que muestra cómo crear una aplicación escalable que  equilibrará la carga de los mensajes entre varias instancias de la aplicación. "

