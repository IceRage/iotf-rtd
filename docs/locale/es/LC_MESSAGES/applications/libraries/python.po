# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-16 16:10-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/applications/libraries/python.rst:2
msgid "Python for Application Developers"
msgstr ""
"Python para desarrolladores de aplicaciones"

#: ../docs/applications/libraries/python.rst:4
msgid "See `iot-python <https://github.com/ibm-messaging/iot-python>`_ in GitHub"
msgstr ""
"Consulte `iot-python <https://github.com/ibm-messaging/iot-python>`_ en GitHub"

#: ../docs/applications/libraries/python.rst:5
msgid "See `ibmiotf <https://pypi.python.org/pypi/ibmiotf>`_ on PyPi"
msgstr ""
"Consulte `ibmiotf <https://pypi.python.org/pypi/ibmiotf>`_ en PyPi"

#: ../docs/applications/libraries/python.rst:8
msgid "Constructor"
msgstr ""
"Constructor"

#: ../docs/applications/libraries/python.rst:10
msgid "The constructor builds the client instance, and accepts an options dict containing the following definitions:"
msgstr ""
"El constructor crea la instancia de cliente y acepta un diccionario de opciones que contiene las definiciones siguientes:"

#: ../docs/applications/libraries/python.rst:12
msgid "``org`` - Your organization ID."
msgstr ""
"``org`` - ID de la organización."

#: ../docs/applications/libraries/python.rst:13
msgid "``id`` - The unique ID of your application within your organization."
msgstr ""
"``id`` - ID exclusivo de la aplicación en la organización."

#: ../docs/applications/libraries/python.rst:14
msgid "``auth-method`` - Method of authentication (the only value currently supported is ``apikey``)."
msgstr ""
"``auth-method`` - Método de autenticación (el único valor soportado actualmente es ``apikey``)."

#: ../docs/applications/libraries/python.rst:15
msgid "``auth-key`` - API key (required if auth-method is ``apikey``)."
msgstr ""
"``auth-key`` - Clave de API (necesaria si auth-method es ``apikey``)."

#: ../docs/applications/libraries/python.rst:16
msgid "``auth-token`` - API key token (required if auth-method is ``apikey``)."
msgstr ""
"``auth-token`` - Señal de clave de API (necesaria si auth-method es ``apikey``)."

#: ../docs/applications/libraries/python.rst:18
msgid "If no options dict is provided, the client will connect to the IoT Platform Quickstart, and default to an unregistered device. The options dict creates definitions which are used to interact with the IoT Platform module."
msgstr ""
"Si no se proporciona ningún diccionario de opciones, el cliente se conectará a Quickstart de IoT Platform y pasará de forma predeterminada a ser un dispositivo sin registrar. El diccionario de opciones crea definiciones que se utilizan para interactuar con el módulo de IoT Platform."

#: ../docs/applications/libraries/python.rst:37
msgid "Using a configuration file"
msgstr ""
"Utilización de un archivo de configuración"

#: ../docs/applications/libraries/python.rst:39
msgid "If you are not using an options dict as shown above, you include a configuration file containing an options dict. If you are using a configuration file containing an options dict, use the following code format."
msgstr ""
"Si no está utilizando un diccionario de opciones como se muestra más arriba, incluya un archivo de configuración que contenga un diccionario de opciones. Si utiliza un archivo de configuración que contiene un diccionario de opciones, utilice el formato de código siguiente."

#: ../docs/applications/libraries/python.rst:50
msgid "The application configuration file must be in the following format:"
msgstr ""
"El archivo de configuración de aplicación debe estar en el formato siguiente:"

#: ../docs/applications/libraries/python.rst:66
msgid "API calls"
msgstr ""
"Llamadas de API"

#: ../docs/applications/libraries/python.rst:68
msgid "Each method in the APIClient responds with either a valid response (JSON or boolean) in the case of success or IoTFCReSTException in the case of failure. The IoTFCReSTException contains the following properties that application can parse to get more information about the failure."
msgstr ""
"Cada método en APIClient responde con una respuesta válida (JSON o booleana) en el caso de que la operación sea satisfactoria o IoTFCReSTException en el caso de que se produzca un error. IoTFCReSTException contiene las siguientes propiedades que la aplicación puede analizar para obtener más información sobre el error."

#: ../docs/applications/libraries/python.rst:70
msgid "httpcode - HTTP Status Code"
msgstr ""
"httpcode - Código de estado HTTP"

#: ../docs/applications/libraries/python.rst:71
msgid "message - Exception message containing the reason for the failure"
msgstr ""
"message - Mensaje de excepción que contiene la razón del error"

#: ../docs/applications/libraries/python.rst:72
msgid "response - JsonElement containing the partial response if any otherwise null"
msgstr ""
"response - JsonElement que contiene la respuesta parcial si existe; de lo contrario, es nulo"

#: ../docs/applications/libraries/python.rst:74
msgid "So in the case of failure, application needs to parse the response to see if the action is partially successful or not."
msgstr ""
"En el caso de un error, la aplicación debe analizar la respuesta para ver si la acción es parcialmente satisfactoria o no."

#: ../docs/applications/libraries/python.rst:81
msgid "Subscribing to device events"
msgstr ""
"Suscripción a sucesos de dispositivo"

#: ../docs/applications/libraries/python.rst:82
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"Los sucesos son el mecanismo mediante el cual los dispositivos publican datos en IoT Platform. El dispositivo controla el contenido del suceso y asigna un nombre a cada suceso que envía."

#: ../docs/applications/libraries/python.rst:84
msgid "When an event is received by the IoT Platform the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""
"Cuando IoT Platform recibe un suceso, se utilizan las credenciales de la conexión en la que se ha recibido dicho suceso para determinar desde qué dispositivo se ha enviado el suceso. Con esta arquitectura, es imposible que un dispositivo pueda suplantar a otro."

#: ../docs/applications/libraries/python.rst:86
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""
"De forma predeterminada, las aplicaciones se suscribirán a todos los sucesos de todos los dispositivos conectados. Utilice los parámetros type, id, event y msgFormat para controlar el alcance de la suscripción. Un cliente individual puede admitir varias suscripciones. Las muestras de código siguientes proporcionan ejemplos de cómo suscribirse a dispositivos dependientes de los parámetros type, id, event y msgFormat de dispositivo. "

#: ../docs/applications/libraries/python.rst:90
msgid "To subscribe to all events from all devices"
msgstr ""
"Para suscribirse a todos los sucesos de todos los dispositivos"

#: ../docs/applications/libraries/python.rst:104
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""
"Para suscribirse a todos los sucesos de todos los dispositivos de un tipo específico"

#: ../docs/applications/libraries/python.rst:118
msgid "To subscribe to a specific event from all devices"
msgstr ""
"Para suscribirse a un suceso específico de todos los dispositivos"

#: ../docs/applications/libraries/python.rst:132
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""
"Para suscribirse a un suceso específico de dos o más dispositivos diferentes"

#: ../docs/applications/libraries/python.rst:147
msgid "To subscribe to all events published by a device in json format"
msgstr ""
"Para suscribirse a todos los sucesos publicados por un dispositivo en formato json"

#: ../docs/applications/libraries/python.rst:164
msgid "Handling events from devices"
msgstr ""
"Manejo de sucesos de dispositivos"

#: ../docs/applications/libraries/python.rst:165
msgid "To process the events received by your subscriptions you need to register an event callback method. The messages are returned as an instance of the Event class:"
msgstr ""
"Para procesar los sucesos recibidos por las suscripciones que necesita para registrar un método de devolución de llamada de sucesos. Los mensajes se devuelven como una instancia de la clase de suceso:"

#: ../docs/applications/libraries/python.rst:167
msgid "event.device - string (uniquely identifies the device across all types of devices in the organization)"
msgstr ""
"event.device - serie (identifica de forma exclusiva el dispositivo entre todos los tipos de dispositivos de la organización)"

#: ../docs/applications/libraries/python.rst:168
msgid "event.deviceType - string"
msgstr ""
"event.deviceType - serie"

#: ../docs/applications/libraries/python.rst:169
msgid "event.deviceId - string"
msgstr ""
"event.deviceId - serie"

#: ../docs/applications/libraries/python.rst:170
msgid "event.event - string"
msgstr ""
"event.event - serie"

#: ../docs/applications/libraries/python.rst:171
msgid "event.format - string"
msgstr ""
"event.format - serie"

#: ../docs/applications/libraries/python.rst:172
msgid "event.data - dict"
msgstr ""
"event.data - diccionario"

#: ../docs/applications/libraries/python.rst:173
msgid "event.timestamp - datetime"
msgstr ""
"event.timestamp - fecha y hora"

#: ../docs/applications/libraries/python.rst:196
msgid "Subscribing to device status"
msgstr ""
"Suscripción al estado de dispositivo"

#: ../docs/applications/libraries/python.rst:197
msgid "By default, this will subscribe to status updates for all connected devices. Use the type and id parameters to control the scope of the subscription. A single client can support multiple subscriptions."
msgstr ""
"De forma predeterminada, la suscripción será a las actualizaciones de estado para todos los dispositivos conectados. Utilice los parámetros type e id para controlar el alcance de la suscripción. Un cliente individual puede admitir varias suscripciones."

#: ../docs/applications/libraries/python.rst:200
msgid "Subscribe to status updates for all devices"
msgstr ""
"Suscribirse a actualizaciones de estado para todos los dispositivos"

#: ../docs/applications/libraries/python.rst:214
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""
"Suscribirse a actualizaciones de estado para todos los dispositivos de un tipo específico"

#: ../docs/applications/libraries/python.rst:228
msgid "Subscribe to status updates for two different devices"
msgstr ""
"Suscribirse a actualizaciones de estado para dos dispositivos diferentes"

#: ../docs/applications/libraries/python.rst:246
msgid "Handling status updates from devices"
msgstr ""
"Manejo de actualizaciones de estado de dispositivos"

#: ../docs/applications/libraries/python.rst:247
msgid "To process the status updates received by your subscriptions you need to register an event callback method. The messages are returned as an instance of the Status class:"
msgstr ""
"Para procesar las actualizaciones de estado recibidas por las suscripciones que necesita para registrar un método de devolución de llamada de sucesos. Los mensajes se devuelven como una instancia de la clase de estado:"

#: ../docs/applications/libraries/python.rst:249
msgid "The following properties are set for both \"Connect\" and \"Disconnect\" status events:"
msgstr ""
"Se establecen las propiedades siguientes para los sucesos de estado \"Conectar\" y \"Desconectar\":"

#: ../docs/applications/libraries/python.rst:251
msgid "status.clientAddr - string"
msgstr ""
"status.clientAddr - serie"

#: ../docs/applications/libraries/python.rst:252
msgid "status.protocol - string"
msgstr ""
"status.protocol - serie"

#: ../docs/applications/libraries/python.rst:253
msgid "status.clientId - string"
msgstr ""
"status.clientId - serie"

#: ../docs/applications/libraries/python.rst:254
msgid "status.user - string"
msgstr ""
"status.user - serie"

#: ../docs/applications/libraries/python.rst:255
msgid "status.time - datetime"
msgstr ""
"status.time - fecha y hora"

#: ../docs/applications/libraries/python.rst:256
msgid "status.action - string"
msgstr ""
"status.action - serie"

#: ../docs/applications/libraries/python.rst:257
msgid "status.connectTime - datetime"
msgstr ""
"status.connectTime - fecha y hora"

#: ../docs/applications/libraries/python.rst:258
msgid "status.port - integer"
msgstr ""
"status.port - entero"

#: ../docs/applications/libraries/python.rst:260
msgid "The following properties are only set when the action is \"Disconnect\":"
msgstr ""
"Las propiedades siguientes solo se establecen cuando la acción es \"Desconectar\":"

#: ../docs/applications/libraries/python.rst:262
msgid "status.writeMsg - integer"
msgstr ""
"status.writeMsg - entero"

#: ../docs/applications/libraries/python.rst:263
msgid "status.readMsg - integer"
msgstr ""
"status.readMsg - entero"

#: ../docs/applications/libraries/python.rst:264
msgid "status.reason - string"
msgstr ""
"status.reason - serie"

#: ../docs/applications/libraries/python.rst:265
msgid "status.readBytes - integer"
msgstr ""
"status.readBytes - entero"

#: ../docs/applications/libraries/python.rst:266
msgid "status.writeBytes - integer"
msgstr ""
"status.writeBytes - entero"

#: ../docs/applications/libraries/python.rst:292
msgid "Publishing events from devices"
msgstr ""
"Publicación de sucesos desde dispositivos"

#: ../docs/applications/libraries/python.rst:293
msgid "Applications can publish events as if they originated from a Device"
msgstr ""
"Las aplicaciones pueden publicar sucesos como si se originaran en un dispositivo"

#: ../docs/applications/libraries/python.rst:311
msgid "Publishing commands to devices"
msgstr ""
"Publicación de mandatos en dispositivos"

#: ../docs/applications/libraries/python.rst:312
msgid "Applications can publish commands to connected devices"
msgstr ""
"Las aplicaciones pueden publicar mandatos en dispositivos conectados"

#: ../docs/applications/libraries/python.rst:330
msgid "Organization details"
msgstr ""
"Detalles de organización"

#: ../docs/applications/libraries/python.rst:332
msgid "Applications can use the ``getOrganizationDetails()`` method to retrieve the details about the configuration of the organization."
msgstr ""
"Las aplicaciones pueden utilizar el método ``getOrganizationDetails()`` para recuperar los detalles sobre la configuración de la organización."

#: ../docs/applications/libraries/python.rst:347
msgid "Refer to the Organization Configuration section of the `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ for information about the request & response model and http status code."
msgstr ""
"Consulte la sección de Configuración de organización de la `API de IBM IoT Platform <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ para obtener información sobre el modelo de solicitud y respuesta y sobre el código de estado http."

#: ../docs/applications/libraries/python.rst:355
msgid "Bulk device operations"
msgstr ""
"Operaciones de dispositivo masivas"

#: ../docs/applications/libraries/python.rst:357
msgid "Applications can use bulk operations to get, add or remove devices in bulk."
msgstr ""
"Las aplicaciones pueden utilizar operaciones masivas para obtener, añadir o eliminar dispositivos de forma masiva."

#: ../docs/applications/libraries/python.rst:359
msgid "Refer to the Bulk Operations section of the `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Bulk_Operations/>`__ for information about the list of query parameters, the request & response model and http status code."
msgstr ""
"Consulte la sección de Operaciones masivas de la `API de IBM IoT Platform <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Bulk_Operations/>`__ para obtener información sobre la lista de parámetros de consulta, el modelo de solicitud y respuesta y el código de estado http."

#: ../docs/applications/libraries/python.rst:362
msgid "Retrieve device information"
msgstr ""
"Recuperar información de dispositivos"

#: ../docs/applications/libraries/python.rst:364
msgid "Bulk device information can be retrieved using the ``getAllDevices()`` method. This method retrieves information on all registered devices in the organization, each request can contain a maximum of 512KB."
msgstr ""
"Puede recuperarse información de dispositivos masiva mediante el método ``getAllDevices()``. Este método recupera información sobre todos los dispositivos registrados en la organización; cada solicitud puede contener un máximo de 512 KB."

#: ../docs/applications/libraries/python.rst:367
msgid "The response contains parameters required by the application to retrieve the dictionary *results* from the response to get the array of devices returned. Other parameters in the response are required to make further calls, for example, the ``_bookmark`` element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"La respuesta contiene los parámetros que necesita la aplicación para recuperar el diccionario *results* de la respuesta, para obtener la matriz de los dispositivos devueltos. Se requieren otros parámetros en la respuesta para realizar más llamadas; por ejemplo, el elemento ``_bookmark`` puede utilizarse para buscar en los resultados. Emita la primera solicitud sin especificar un marcador y, a continuación, devuelva el marcador en la respuesta y proporciónelo en la solicitud de la página siguiente. Repita este paso hasta el final del conjunto de resultados indicado por la ausencia de un marcador. Cada solicitud debe utilizar exactamente los mismos valores para los otros parámetros o los resultados no estarán definidos."

#: ../docs/applications/libraries/python.rst:389
msgid "Add Devices in bulk"
msgstr ""
"Añadir dispositivos de forma masiva"

#: ../docs/applications/libraries/python.rst:391
msgid "The ``addMultipleDevices()`` method can be used to add one or more devices to your IoT Platform organization, the maximum size of a request is set to 512KB.  The response will contain the generated authentication tokens for each added device. These authentication tokens must be recorded when processing the response, as lost authentication tokens cannot be retrieved."
msgstr ""
"Se puede utilizar el método ``addMultipleDevices()`` para añadir uno o más dispositivos a la organización de IoT Platform; el tamaño máximo de una solicitud se establece en 512 KB.  La respuesta contendrá las señales de autenticación generadas para cada dispositivo añadido. Estas señales de autenticación deben registrarse cuando se procesa la respuesta, ya que las señales de autenticación perdidas no podrán recuperarse."

#: ../docs/applications/libraries/python.rst:416
msgid "Delete Devices in bulk"
msgstr ""
"Suprimir dispositivos de forma masiva"

#: ../docs/applications/libraries/python.rst:418
msgid "The ``deleteMultipleDevices()`` method can be used to delete multiple devices from an IoT Platform organization, each request can contain a maximum of 512KB."
msgstr ""
"Se puede utilizar el método ``deleteMultipleDevices()`` para suprimir varios dispositivos de una organización de IoT Platform; cada solicitud puede contener un máximo de 512 KB."

#: ../docs/applications/libraries/python.rst:443
msgid "Device Type Operations"
msgstr ""
"Operaciones de tipos de dispositivo"

#: ../docs/applications/libraries/python.rst:445
msgid "Device types can be used as templates for adding device information to devices as they are added to your organization. Applications can use the IoT Platform API to list, create, delete, view, or update device types in your organization."
msgstr ""
"Los tipos de dispositivo pueden utilizarse como plantillas para añadir información sobre dispositivos a los dispositivos cuando estos se añaden a la organización. Las aplicaciones pueden utilizar la API de IoT Platform para listar, crear, suprimir, ver o actualizar tipos de dispositivo en la organización."

#: ../docs/applications/libraries/python.rst:449
msgid "Refer to the Device Types section of the `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ documentation for information about the list of query parameters, the request & response model, and http status codes."
msgstr ""
"Consulte la sección Tipos de dispositivo de la documentación de la `API de IBM IoT Platform <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ para obtener información sobre la lista de parámetros de consulta, el modelo de solicitud y respuesta y los códigos de estado http."

#: ../docs/applications/libraries/python.rst:454
msgid "Get all Device Types"
msgstr ""
"Obtener todos los tipos de dispositivo"

#: ../docs/applications/libraries/python.rst:456
msgid "The ``getAllDeviceTypes()`` method can be used to retrieve all device types in your IoT Platform organization. The response contains parameters and application needs to retrieve the dictionary *results* from the response to get the array of devices returned. Other parameters in the response are required to make further call, for example, the *_bookmark* element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"Se puede utilizar el método ``getAllDeviceTypes()`` para recuperar todos los tipos de dispositivo de la organización de IoT Platform. La respuesta contiene parámetros y la aplicación debe recuperar el diccionario *results* de la respuesta, para obtener la matriz de los dispositivos devueltos. Se requieren otros parámetros en la respuesta para realizar más llamadas, por ejemplo, el elemento *_bookmark* puede utilizarse para paginar por los resultados. Emita la primera solicitud sin especificar un marcador y, a continuación, devuelva el marcador en la respuesta y proporciónelo en la solicitud de la página siguiente. Repita este paso hasta el final del conjunto de resultados indicado por la ausencia de un marcador. Cada solicitud debe utilizar exactamente los mismos valores para los otros parámetros o los resultados no estarán definidos."

#: ../docs/applications/libraries/python.rst:485
msgid "Add a Device Type"
msgstr ""
"Añadir un tipo de dispositivo"

#: ../docs/applications/libraries/python.rst:487
msgid "The ``addDeviceType()`` method can be used to register a device type to IoT Platform. In each request, you must first define the device information, and device metadata elements which you want to be applied to all devices of this type. The device information element is comprised of several variables, including, serial number, manufacturer, model, class, description, firmware and hardware versions, and descriptive location. The metadata element is comprised of custom variables and values which can be defined by the user."
msgstr ""
"Se puede utilizar el método ``addDeviceType()`` para registrar un tipo de dispositivo en IoT Platform. En cada solicitud, primero debe definir la información del dispositivo y los elementos de metadatos de dispositivo que desea que se apliquen a todos los dispositivos de este tipo. El elemento de información de dispositivo está formado por varias variables, incluido el número de serie, el fabricante, el modelo, la clase, la descripción, las versiones de firmware y hardware, y una ubicación descriptiva. El elemento de metadatos está formado por variables y valores personalizados que puede definir el usuario."

#: ../docs/applications/libraries/python.rst:523
msgid "Delete a Device Type"
msgstr ""
"Suprimir un tipo de dispositivo"

#: ../docs/applications/libraries/python.rst:525
msgid "The ``deleteDeviceType()`` method can be used to delete a device type from your IoT Platform organization."
msgstr ""
"Se puede utilizar el método ``deleteDeviceType()`` para suprimir un tipo de dispositivo de la organización de IoT Platform."

#: ../docs/applications/libraries/python.rst:542
msgid "Get a Device Type"
msgstr ""
"Obtener un tipo de dispositivo"

#: ../docs/applications/libraries/python.rst:544
msgid "The ``getDeviceType()`` method retrieves information on a given device type. The ``typeId`` of the device type you wish to retrieve must be used as a parameter"
msgstr ""
"El método ``getDeviceType()`` recupera información sobre un tipo de dispositivo determinado. El ``typeId`` del tipo de dispositivo que desea recuperar se debe utilizar como parámetro"

#: ../docs/applications/libraries/python.rst:561
msgid "Update a Device Type"
msgstr ""
"Actualizar un tipo de dispositivo"

#: ../docs/applications/libraries/python.rst:563
msgid "The ``updateDeviceType()`` method can be used to modify the properties of a device type. When using this method, several parameters must be defined. Firstly, the ``typeId`` of the device type to be updated must be specified, then the ``description``, ``deviceInfo``, and ``metadata`` elements."
msgstr ""
"Se puede utilizar el método ``updateDeviceType()`` para modificar las propiedades de un tipo de dispositivo. Cuando se utiliza este método, deben definirse varios parámetros. En primer lugar, se debe especificar el ``typeId`` del tipo de dispositivo que se va actualizar y, a continuación, los elementos ``description``, ``deviceInfo`` y ``metadata``."

#: ../docs/applications/libraries/python.rst:599
msgid "Device operations"
msgstr ""
"Operaciones de dispositivo"

#: ../docs/applications/libraries/python.rst:601
msgid "Device operations made available through the API include listing, adding, removing, viewing, updating, viewing location and viewing  device management information of devices in an IoT Platform organization."
msgstr ""
"Las operaciones de dispositivo que están disponibles mediante la API incluyen listar, añadir, eliminar, ver, actualizar, ver información de gestión de dispositivo y ver la ubicación de los dispositivos en una organización de IoT Platform."

#: ../docs/applications/libraries/python.rst:603
msgid "Refer to the Device section of the `IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ for information about the list of query parameters, the request & response model and http status code."
msgstr ""
"Consulte la sección Dispositivo de la `API de IoT Platform <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ para obtener información sobre la lista de parámetros de consulta, el modelo de solicitud y respuesta y el código de estado http."

#: ../docs/applications/libraries/python.rst:606
msgid "Get Devices of a particular Device Type"
msgstr ""
"Obtener dispositivos de un determinado tipo de dispositivo"

#: ../docs/applications/libraries/python.rst:608
msgid "The *retrieveDevices()* method can be used to retrieve all the devices of a particular device type in an organization from IoT Platform. For example,"
msgstr ""
"Se puede utilizar el método *retrieveDevices()* para recuperar todos los dispositivos de un tipo de dispositivo determinado de una organización de IoT Platform. Por ejemplo:"

#: ../docs/applications/libraries/python.rst:615
msgid "The response contains parameters and application needs to retrieve the dictionary *results* from the response to get the array of devices returned. Other parameters in the response are required to make further call, for example, the *_bookmark* element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"La respuesta contiene parámetros y la aplicación debe recuperar el diccionario *results* de la respuesta, para obtener la matriz de los dispositivos devueltos. Se requieren otros parámetros en la respuesta para realizar más llamadas, por ejemplo, el elemento *_bookmark* puede utilizarse para paginar por los resultados. Emita la primera solicitud sin especificar un marcador y, a continuación, devuelva el marcador en la respuesta y proporciónelo en la solicitud de la página siguiente. Repita este paso hasta el final del conjunto de resultados indicado por la ausencia de un marcador. Cada solicitud debe utilizar exactamente los mismos valores para los otros parámetros o los resultados no estarán definidos."

#: ../docs/applications/libraries/python.rst:617
#: ../docs/applications/libraries/python.rst:889
msgid "In order to pass the *_bookmark* or any other condition, the overloaded method must be used. The overloaded method takes the parameters in the form of dictionary as shown below,"
msgstr ""
"Para poder pasar *_bookmark* o cualquier otra condición, debe utilizarse el método sobrecargado. El método sobrecargado utiliza parámetros con formato de diccionario como se muestra a continuación,"

#: ../docs/applications/libraries/python.rst:623
msgid "The above snippet sorts the response based on device id and uses the bookmark to page through the results."
msgstr ""
"El fragmento de código anterior ordena la repuesta basándose en el ID de dispositivo y utiliza el marcador para paginar por los resultados."

#: ../docs/applications/libraries/python.rst:626
msgid "Add a Device"
msgstr ""
"Añadir un dispositivo"

#: ../docs/applications/libraries/python.rst:628
msgid "The *registerDevice()* method is used to add a device to an IoT Platform organization. The *registerDevice()* method adds a single device to your IoT Platform organization. The parameters which can be set when adding a device are:"
msgstr ""
"El método *registerDevice()* se utiliza para añadir un dispositivo a una organización de IoT Platform. El método *registerDevice()* añade un único dispositivo a la organización de IoT Platform. Los parámetros que pueden establecerse cuando se añade un dispositivo son:"

#: ../docs/applications/libraries/python.rst:630
msgid "deviceTypeId: *Optional*. Assigns a device type to the device. Where there is a clash between variables defined by the device type and variables defined by under deviceInfo, the device specific variables will take precedence."
msgstr ""
"deviceTypeId: *Optional*. Asigna un tipo de dispositivo al dispositivo. Cuando hay un conflicto entre las variables definidas por el tipo de dispositivo y las variables definidas por deviceInfo, las variables específicas del dispositivo tendrán prioridad."

#: ../docs/applications/libraries/python.rst:631
msgid "deviceId: *Mandatory*."
msgstr ""
"deviceId: *Mandatory*."

#: ../docs/applications/libraries/python.rst:632
msgid "authToken: *Optional*. If no authentication token is supplied, one will be generated and included in the response."
msgstr ""
"authToken: *Optional*. Si no se suministra ninguna señal de autenticación, se generará una y se incluirá en la respuesta."

#: ../docs/applications/libraries/python.rst:633
msgid "deviceInfo: *Optional*. This parameter is optional, and can contain a number of variables, including: serialNumber, manufacturer, model, deviceClass, description, firmware and hardware versions, and descriptiveLocation."
msgstr ""
"deviceInfo: *Optional*. Este parámetro es opcional y puede contener varias variables, entre ellas: serialNumber, fabricante, modelo, deviceClass, descripción, versiones de firmware y hardware, y descriptiveLocation."

#: ../docs/applications/libraries/python.rst:634
msgid "metadata: *Optional*. Metadata can optionally be added in the form of custom field:value string pairs. An example is given in the code sample below."
msgstr ""
"metadata: *Optional*. Los metadatos pueden añadirse de manera opcional en forma de pares de serie campo:valor personalizados. A continuación, se muestra un ejemplo de código."

#: ../docs/applications/libraries/python.rst:635
msgid "location: *Optional*. This parameter contains the longitude, latitude, elevation, accuracy, and mesauredDateTime variables."
msgstr ""
"location: *Optional*. Este parámetro contiene las variables longitude, latitude, elevation, accuracy y mesauredDateTime."

#: ../docs/applications/libraries/python.rst:637
msgid "For more information on the parameters presented here, and the response format and codes, please see the relevant section of `API documentation <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Devices/post_device_types_typeId_devices>`__."
msgstr ""
"Para obtener más información sobre los parámetros presentados, y los códigos y el formato de respuesta, visite la sección correspondiente de la `Documentación de la API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Devices/post_device_types_typeId_devices>`__."

#: ../docs/applications/libraries/python.rst:639
msgid "When using the *registerDevice()* method, you must define the mandatory deviceID parameter, and any of the optional parameters you require for your device, then call the method using the parameters you've selected."
msgstr ""
"Cuando se utiliza el método *registerDevice()*, debe definir el parámetro deviceID obligatorio y los parámetros opcionales que requiera para su dispositivo y, a continuación, invocar el método utilizando los parámetros que ha seleccionado."

#: ../docs/applications/libraries/python.rst:642
#: ../docs/applications/libraries/python.rst:703
#: ../docs/applications/libraries/python.rst:746
msgid "Sample"
msgstr ""
"Ejemplo"

#: ../docs/applications/libraries/python.rst:644
msgid "The following code sample should be inserted after the constructor code in a .py file. This code demonstrates defining the deviceId, authToken, metadata, deviceInfo parameters, and location parameters and then using the method with those parameters and adding a device type."
msgstr ""
"El siguiente ejemplo de código debe insertarse después del código de constructor en un archivo .py. Este código demuestra la definición de los parámetros deviceId, authToken, metadata y deviceInfo, y de los parámetros de ubicación, así como el uso del método con esos parámetros y la adición de un tipo de dispositivo."

#: ../docs/applications/libraries/python.rst:658
msgid "Delete a Device"
msgstr ""
"Suprimir un dispositivo"

#: ../docs/applications/libraries/python.rst:660
msgid "The *deleteDevice()* method is used to remove a device from an IoT Platform organization. When deleting a device using this method, the parameters which must be specified in the method are the deviceTypeId, and the deviceId."
msgstr ""
"El método *deleteDevice()* se utiliza para eliminar un dispositivo de una organización de IoT Platform. Cuando se suprime un dispositivo con este método, los parámetros que deben especificarse en el método son deviceTypeId y deviceId."

#: ../docs/applications/libraries/python.rst:662
#: ../docs/applications/libraries/python.rst:674
msgid "The following code snippet provides an example of the format required for this method."
msgstr ""
"El siguiente fragmento de código proporciona un ejemplo del formato necesario para este método."

#: ../docs/applications/libraries/python.rst:670
msgid "Get a Device"
msgstr ""
"Obtener un dispositivo"

#: ../docs/applications/libraries/python.rst:672
msgid "The *getDevice()* method can be used to retrieve a device from an IoT Platform organization. When retrieving device details using this method, the parameters which must be specified in the method are the deviceTypeId, and the deviceId."
msgstr ""
"El método *getDevice()* puede utilizarse para recuperar un dispositivo de una organización de IoT Platform. Cuando se recuperan detalles de dispositivo con este método, los parámetros que deben especificarse en el método son deviceTypeId y deviceId."

#: ../docs/applications/libraries/python.rst:682
msgid "Get all Devices"
msgstr ""
"Obtener todos los dispositivos"

#: ../docs/applications/libraries/python.rst:684
msgid "The *getAllDevices()* method can be used to retrieve all devices within an IoT Platform organization."
msgstr ""
"Se puede utilizar el método *getAllDevices()* para recuperar todos los dispositivos de una organización de IoT Platform."

#: ../docs/applications/libraries/python.rst:692
msgid "Update a Device"
msgstr ""
"Actualizar un dispositivo"

#: ../docs/applications/libraries/python.rst:694
msgid "The *updateDevice()* method is used to modify one or more properties of a device. Any property in the deviceInfo or metadata parameters can be updated. In order to update a device property, it must be defined above the method. The status parameter should contain \"alert\": True. The Alert property controls whether a device will display error codes in the IoT Platform user interface, and should be set by default to 'True'."
msgstr ""
"El método *updateDevice()* se utiliza para modificar una o varias propiedades de un dispositivo. Cualquier propiedad en los parámetros deviceInfo o metadata puede actualizarse. Para poder actualizar una propiedad de dispositivo, debe definirse encima del método. El parámetro de estado debe contener \"alert\": True. La propiedad Alert controla si un dispositivo mostrará códigos de error en la interfaz de usuario de IoT Platform y si debe establecerse de forma predeterminada en 'True'."

#: ../docs/applications/libraries/python.rst:705
msgid "In this sample, the following code identifies a specific device, and updates several properties under the deviceInfo parameter."
msgstr ""
"En este ejemplo, el siguiente código identifica un dispositivo específico y actualiza varias propiedades en el parámetro deviceInfo."

#: ../docs/applications/libraries/python.rst:714
msgid "Get Location Information"
msgstr ""
"Obtener información de ubicación"

#: ../docs/applications/libraries/python.rst:716
msgid "The *getDeviceLocation()* method can be used to retrieve the location information of a device. The parameters required for retrieving the location data are deviceTypeId and deviceId."
msgstr ""
"Puede utilizarse el método *getDeviceLocation()* para recuperar la información de ubicación de un dispositivo. Los parámetros necesarios para recuperar los datos de ubicación son deviceTypeId y deviceId."

#: ../docs/applications/libraries/python.rst:722
msgid "The response to this method contains the longitude, latitude, elevation, accuracy, measuredTimeStamp, and updatedTimeStamp properties."
msgstr ""
"La respuesta a este método contiene las propiedades longitude, latitude, elevation, accuracy, measuredTimeStamp y updatedTimeStamp."

#: ../docs/applications/libraries/python.rst:726
msgid "Update Location Information"
msgstr ""
"Actualizar información de ubicación"

#: ../docs/applications/libraries/python.rst:728
msgid "The *updateDeviceLocation()* method is used to modify the location information for a device. Simlarly to updating device properties, the deviceLocation parameter must be defined with the changes you wish to apply. The code sample below demonstrates changing the location data for a given device."
msgstr ""
"El método *updateDeviceLocation()* se utiliza para modificar la información de ubicación de un dispositivo. De forma parecida a la actualización de las propiedades de dispositivo, el parámetro deviceLocation debe definirse con los cambios que desee aplicar. El siguiente ejemplo de código demuestra el cambio de los datos de ubicación de un determinado dispositivo."

#: ../docs/applications/libraries/python.rst:735
msgid "If no date is supplied, the entry is added with the current date and time."
msgstr ""
"Si no se suministra ninguna fecha, la entrada se añade con la fecha y hora actual."

#: ../docs/applications/libraries/python.rst:739
msgid "Get Device Management Information"
msgstr ""
"Obtener información de gestión de dispositivos"

#: ../docs/applications/libraries/python.rst:741
msgid "The *getDeviceManagementInformation()* method is used to get the device management information for a device. The response contains the last activity date-time, the device's dormant status (true/false), support for device and firmware actions, and firmware data. For a comprehensive list of response content, please see the relevant API documentation."
msgstr ""
"El método *getDeviceManagementInformation()* se utiliza para obtener la información de gestión de dispositivos para un dispositivo. La respuesta contiene la fecha y la hora de la última actividad, el estado inactivo del dispositivo (true/false), soporte para las acciones del firmware y el dispositivo, y datos de firmware. Para ver una lista completa del contenido de la respuesta, consulte la documentación de la API correspondiente."

#: ../docs/applications/libraries/python.rst:743
msgid "The following code sample will return the device management information for a device with the deviceId \"00aabbccde03\", with deviceTypeId \"iotsample-arduino\"."
msgstr ""
"El siguiente ejemplo de código devolverá información de gestión de dispositivos para un dispositivo con deviceId \"00aabbccde03\" y deviceTypeId \"iotsample-arduino\"."

#: ../docs/applications/libraries/python.rst:756
msgid "Device diagnostic operations"
msgstr ""
"Operaciones de diagnóstico de dispositivo"

#: ../docs/applications/libraries/python.rst:758
msgid "Applications can use device diagnostic operations to clear logs, retrieve all or specific logs for a device, add log information, delete logs, clear error codes, get device error codes, and add an error codes."
msgstr ""
"Las aplicaciones pueden utilizar las operaciones de diagnóstico de dispositivos para borrar registros, recuperar todos los registros o registros específicos para un dispositivo, añadir información de registro, suprimir registros, borrar códigos de error, obtener códigos de error de dispositivo y añadir un código de error."

#: ../docs/applications/libraries/python.rst:760
msgid "For more detailed information on query and response models, response codes, and query paramters, please see the relevant API documentation."
msgstr ""
"Para obtener información detallada sobre los modelos de consulta y respuesta, los códigos de respuesta y los parámetros de consulta, consulte la documentación de la API correspondiente."

#: ../docs/applications/libraries/python.rst:763
msgid "Get Diagnostic logs"
msgstr ""
"Obtener registros de diagnóstico"

#: ../docs/applications/libraries/python.rst:765
msgid "The *getAllDiagnosticLogs()* method is used to retrieve all diagnostic logs for a specific device. The *getAllDiagnosticLogs()* method requires the deviceTypeId and deviceId parameters."
msgstr ""
"El método *getAllDiagnosticLogs()* se utiliza para recuperar todos los registros de diagnóstico de un dispositivo específico. El método *getAllDiagnosticLogs()* requiere los parámetros deviceTypeId y deviceId."

#: ../docs/applications/libraries/python.rst:771
msgid "The response model for this method contains the logId, message, severity, data, and timestamp."
msgstr ""
"El modelo de respuesta de este método contiene los parámetros logId, message, severity, data y timestamp."

#: ../docs/applications/libraries/python.rst:774
msgid "Clear Diagnostic logs for a Device"
msgstr ""
"Borrar registros de diagnóstico para un dispositivo"

#: ../docs/applications/libraries/python.rst:776
msgid "The *clearAllDiagnosticLogs()* method is used to delete all diagnostic logs for a specific device. The required parameters are deviceTypeId and deviceId. Care should be taken when deleting logs, as logs cannot be recovered once deleted."
msgstr ""
"El método *clearAllDiagnosticLogs()* se utiliza para suprimir todos los registros de diagnóstico de un dispositivo específico. Los parámetros necesarios son deviceTypeId y deviceId. Tenga cuidado cuando suprima registros, ya que no pueden recuperarse una vez suprimidos."

#: ../docs/applications/libraries/python.rst:784
msgid "Add a Diagnostic log"
msgstr ""
"Añadir un registro de diagnóstico"

#: ../docs/applications/libraries/python.rst:786
msgid "The *addDiagnosticLog()* method is used to add an entry in the diagnostic log of the device. The log may be pruned as the new entry is added. If no date is supplied, the entry is added with the current date and time. To use this method, first define a 'logs' parameter with the following variables:"
msgstr ""
"El método *addDiagnosticLog()* se utiliza para añadir una entrada en el registro de diagnóstico del dispositivo. El registro puede borrarse cuando se añade la nueva entrada. Si no se suministra ninguna fecha, la entrada se añade con la fecha y hora actual. Para utilizar este método, defina primero un parámetro 'logs' con las siguientes variables:"

#: ../docs/applications/libraries/python.rst:788
msgid "message: This variable is mandatory, and contains the new diagnostic message."
msgstr ""
"message: esta variable es obligatoria y contiene el nuevo mensaje de diagnóstico."

#: ../docs/applications/libraries/python.rst:789
msgid "severity: This variable is optional. If used it corresponds to the severity of the diagnostic log, and should be 0, 1, or 2, corresponding to the informational, warning, and error categories."
msgstr ""
"severity: esta variable es opcional. Si se utiliza, corresponde a la gravedad del registro de diagnóstico y debe ser 0, 1 o 2, para las categorías informativa, de aviso y de error, respectivamente."

#: ../docs/applications/libraries/python.rst:790
msgid "data: This variable is optional, and should contain diagnostic data."
msgstr ""
"data: esta variable es opcional y debe contener datos de diagnóstico."

#: ../docs/applications/libraries/python.rst:791
#: ../docs/applications/libraries/python.rst:849
msgid "timestamp: This variable is optional, and contains the date and time of the log entry in ISO8601 format. If this variable is not included, it is automatically added with the current date and time."
msgstr ""
"timestamp: esta variable es opcional y contiene la fecha y la hora de la entrada de registro en formato ISO8601. Si esta variable no se incluye, se añade automáticamente con la fecha y hora actuales."

#: ../docs/applications/libraries/python.rst:793
msgid "The other necessary paramteres required in the method are the deviceTypeId and deviceId for the specific device."
msgstr ""
"Los otros parámetros necesarios en el método son deviceTypeId y deviceId para el dispositivo específico."

#: ../docs/applications/libraries/python.rst:795
msgid "The code sample below contains an example of the method."
msgstr ""
"El ejemplo de código siguiente es un ejemplo del método."

#: ../docs/applications/libraries/python.rst:804
msgid "Retrieve a specific Diagnostic log"
msgstr ""
"Recuperar un registro de diagnóstico específico"

#: ../docs/applications/libraries/python.rst:806
msgid "The *getDiagnosticLog()* method is used to retrieve a specific diagnostic log for a specified device based on the log id. The required parameters for this method are the deviceTypeId, deviceId, and logId."
msgstr ""
"El método *getDiagnosticLog()* se utiliza para recuperar un registro de diagnóstico específico para un determinado dispositivo basándose en el ID de registro. Los parámetros necesarios para este método son deviceTypeId, deviceId y logId."

#: ../docs/applications/libraries/python.rst:814
msgid "Delete a Diagnostic log"
msgstr ""
"Suprimir un registro de diagnóstico"

#: ../docs/applications/libraries/python.rst:816
msgid "The *deleteDiagnosticLog()* can be used to delete a specific diagnostic log. In order to specify a diagnostic log, the deviceTypeId, deviceId, and logId parameters should be supplied."
msgstr ""
"Puede utilizar *deleteDiagnosticLog()* para suprimir un registro de diagnóstico específico. Para poder especificar un registro de diagnóstico, deben proporcionarse los parámetros deviceTypeId, deviceId y logId."

#: ../docs/applications/libraries/python.rst:824
msgid "Retrieve Device Error Codes"
msgstr ""
"Recuperar códigos de error de dispositivo"

#: ../docs/applications/libraries/python.rst:826
msgid "The *getAllDiagnosticErrorCodes()* method is used to retrieve all diagnostic error codes associated with a specific device."
msgstr ""
"El método *getAllDiagnosticErrorCodes()* se utiliza para recuperar todos los códigos de error de diagnóstico asociados con un dispositivo específico."

#: ../docs/applications/libraries/python.rst:834
msgid "Clear Diagnostic Error Codes"
msgstr ""
"Borrar códigos de error de diagnóstico"

#: ../docs/applications/libraries/python.rst:836
msgid "The *clearAllErrorCodes()* method is used to clear the list of error codes associated with the device. The list is replaced with a single error code of zero."
msgstr ""
"El método *clearAllErrorCodes()* se utiliza para borrar la lista de códigos de error asociados con el dispositivo. La lista se sustituye por un código de error individual igual a cero."

#: ../docs/applications/libraries/python.rst:844
msgid "Add single Diagnostic ErrorCode"
msgstr ""
"Añadir ErrorCode de diagnóstico individual"

#: ../docs/applications/libraries/python.rst:846
msgid "The *addErrorCode()* method is used to add an error code to the list of error codes associated with the device. The list may be pruned as the new entry is added. The parameters required in the method are deviceTypeId, deviceId, and errorCode. The errorCode parameter contains the following variables:"
msgstr ""
"El método *addErrorCode()* se utiliza para añadir un código de error a la lista de códigos de error asociados con el dispositivo. La lista puede borrarse cuando se añade la nueva entrada. Los parámetros necesarios en el método son deviceTypeId, deviceId y errorCode. El parámetro errorCode contiene las siguientes variables:"

#: ../docs/applications/libraries/python.rst:848
msgid "errorCode: This variable is mandatory and should be set as an integer. This sets the number of the error code to be created."
msgstr ""
"errorCode: esta variable es obligatoria y debe establecerse como un entero. Establece el número del código de error que se va a crear."

#: ../docs/applications/libraries/python.rst:859
msgid "Connection problem determination"
msgstr ""
"Determinación de problemas de conexión"

#: ../docs/applications/libraries/python.rst:861
msgid "The *getDeviceConnectionLogs()* method is used to list connection log events for a device. This information can be used to help diagnose connectivity problems between the device and the IoT Platform service. The entries record successful connection, unsuccessful connection attempts, intentional disconnection and server-initiated disconnection events."
msgstr ""
"El método *getDeviceConnectionLogs()* se utiliza para listar los sucesos de registro de conexión de un dispositivo. Esta información puede utilizarse para ayudar a diagnosticar problemas de conectividad entre el dispositivo y el servicio de IoT Platform. Las entradas registran los sucesos de conexión satisfactoria, intentos de conexión no satisfactorios, desconexión intencional y desconexión iniciada por el servidor."

#: ../docs/applications/libraries/python.rst:867
msgid "The response includes a list of log entries, containing log messages and timestamps."
msgstr ""
"La respuesta incluye una lista de entradas de registro, que contienen mensajes de registro e indicaciones de fecha y hora."

#: ../docs/applications/libraries/python.rst:872
msgid "Historical Event Retrieval"
msgstr ""
"Recuperación de sucesos históricos"

#: ../docs/applications/libraries/python.rst:874
msgid "These operations can be used to view events from all devices, view events from a device type or to view events for a specific device."
msgstr ""
"Estas operaciones pueden utilizarse para ver sucesos procedentes de todos los dispositivos, ver sucesos procedentes de un tipo de dispositivo o ver sucesos de un dispositivo específico."

#: ../docs/applications/libraries/python.rst:876
msgid "Refer to the Historical Event Retrieval section of the `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ for information about the list of query parameters, the request & response model and http status code."
msgstr ""
"Consulte la sección Recuperación de sucesos históricos de la `API de IBM IoT Platform <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ para obtener información sobre la lista de parámetros de consulta, el modelo de solicitud y respuesta y el código de estado http."

#: ../docs/applications/libraries/python.rst:879
msgid "View events from all devices"
msgstr ""
"Ver los sucesos de todos los dispositivos"

#: ../docs/applications/libraries/python.rst:881
msgid "Method getHistoricalEvents() can be used to view events across all devices registered to the organization."
msgstr ""
"El método getHistoricalEvents() puede utilizarse para ver sucesos en todos los dispositivos registrados en la organización."

#: ../docs/applications/libraries/python.rst:887
msgid "The response will contain some parameters and the application needs to retrieve the JSON element *events* from the response to get the array of events returned. Other parameters in the response are required to make further call, for example, the *_bookmark* element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"La respuesta contendrá algunos parámetros y la aplicación debe recuperar el elemento JSON *events* de la respuesta, para obtener la matriz de los sucesos devueltos. Se requieren otros parámetros en la respuesta para realizar más llamadas, por ejemplo, el elemento *_bookmark* puede utilizarse para paginar por los resultados. Emita la primera solicitud sin especificar un marcador y, a continuación, devuelva el marcador en la respuesta y proporciónelo en la solicitud de la página siguiente. Repita este paso hasta el final del conjunto de resultados indicado por la ausencia de un marcador. Cada solicitud debe utilizar exactamente los mismos valores para los otros parámetros o los resultados no estarán definidos."

#: ../docs/applications/libraries/python.rst:898
msgid "The above snippet returns the events between the start and end time."
msgstr ""
"El fragmento de código anterior devuelve los sucesos entre la hora de inicio y la hora de finalización."

#: ../docs/applications/libraries/python.rst:901
msgid "View events from a device type"
msgstr ""
"Ver sucesos de un tipo de dispositivo"

#: ../docs/applications/libraries/python.rst:903
msgid "The *getHistoricalEvents()* method is used to view events from all the devices of a particular device type."
msgstr ""
"El método *getHistoricalEvents()* se utiliza para ver sucesos de todos los dispositivos de un determinado tipo de dispositivo."

#: ../docs/applications/libraries/python.rst:909
msgid "The response will contain some parameters and the application needs to retrieve the JSON element *events* from the response to get the array of events returned. As mentioned in the *view events from all devices* section, the overloaded method can be used to control the output."
msgstr ""
"La respuesta contendrá algunos parámetros y la aplicación debe recuperar el elemento JSON *events* de la respuesta, para obtener la matriz de los sucesos devueltos. Como se ha comentado en la sección *Ver los sucesos de todos los dispositivos*, puede utilizarse el método sobrecargado para controlar la salida."

#: ../docs/applications/libraries/python.rst:913
msgid "View events from a device"
msgstr ""
"Ver sucesos de un dispositivo"

#: ../docs/applications/libraries/python.rst:915
msgid "The *getHistoricalEvents()* method is used to view events from a specific device. DeviceTypeId and deviceId parameters are required in order to use this method."
msgstr ""
"El método *getHistoricalEvents()* se utiliza para ver sucesos de un dispositivo específico. Los parámetros DeviceTypeId y deviceId son necesarios para poder utilizar este método."

#: ../docs/applications/libraries/python.rst:921
msgid "The response will contain more parameters and application needs to retrieve the JSON element *events* from the response to get the array of events returned."
msgstr ""
"La respuesta contendrá más parámetros y la aplicación debe recuperar el elemento JSON *events* de la respuesta, para obtener la matriz de los sucesos devueltos."

