# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-03-06 22:15-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/applications/libraries/nodejs.rst:2
msgid "Node.js for Application Developers"
msgstr ""
"適用於應用程式開發人員的 Node.js"

#: ../docs/applications/libraries/nodejs.rst:4
msgid "See `iot-nodejs <https://github.com/ibm-messaging/iot-nodejs>`_ in GitHub"
msgstr ""
"請參閱 GitHub 中的 `iot-nodejs <https://github.com/ibm-messaging/iot-nodejs>`_"

#: ../docs/applications/libraries/nodejs.rst:5
msgid "See `ibmiotf <https://www.npmjs.com/package/ibmiotf>`_ on NPM"
msgstr ""
"請參閱 NPM 上的 `ibmiotf <https://www.npmjs.com/package/ibmiotf>`_"

#: ../docs/applications/libraries/nodejs.rst:12
msgid "Constructor"
msgstr ""
"建構子"

#: ../docs/applications/libraries/nodejs.rst:14
msgid "The constructor builds the application client instance. It accepts an configuration json containing the following : - org - Your organization ID - id - The unique ID of your application within your organization. - auth-key - API key - auth-token - API key token"
msgstr ""
"建構子會建置應用程式用戶端實例。它接受包含下列項目的配置 json：- org - 組織 ID - id - 組織內應用程式的唯一 ID。- auth-key - API 金鑰 - auth-token - API 金鑰記號"

#: ../docs/applications/libraries/nodejs.rst:20
msgid "If you want to use quickstart, then send only the first two properties."
msgstr ""
"如果您要使用 Quickstart，請只傳送前兩個內容。"

#: ../docs/applications/libraries/nodejs.rst:35
msgid "Using a configuration file"
msgstr ""
"使用配置檔"

#: ../docs/applications/libraries/nodejs.rst:37
msgid "Instead of passing the configuration json directly, you can also use a configuration file. Use the following code snippet"
msgstr ""
"您也可以使用配置檔，而不需要直接傳遞配置 json。請使用下列程式碼 Snippet"

#: ../docs/applications/libraries/nodejs.rst:46
msgid "The configuration file must be in the format of"
msgstr ""
"配置檔的格式必須如下"

#: ../docs/applications/libraries/nodejs.rst:60
msgid "Connecting to the IoT Platform"
msgstr ""
"連接至 IoT Platform"

#: ../docs/applications/libraries/nodejs.rst:62
msgid "Connect to the IoT Platform by calling the *connect* function."
msgstr ""
"呼叫 *connect* 函數以連接至 IoT Platform"

#: ../docs/applications/libraries/nodejs.rst:78
msgid "After the successful connection to the IoT Platform service, the application client sends a *connect* event. So all the logic can be implemented inside this callback function."
msgstr ""
"成功連線至 IoT Platform 服務之後，應用程式用戶端會傳送 *connect* 事件。因此所有邏輯都可以在此回呼函數內實作。"

#: ../docs/applications/libraries/nodejs.rst:85
msgid "Subscribing to device events"
msgstr ""
"訂閱裝置事件"

#: ../docs/applications/libraries/nodejs.rst:87
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"事件是裝置藉以將資料發佈到 IoT Platform 的機制。裝置可控制事件的內容，並為它傳送的每一個事件指派一個名稱。"

#: ../docs/applications/libraries/nodejs.rst:89
msgid "When an event is received by the IoT Platform, the credentials of the connection on which the event was received are used to determine from which device the event was sent. Using this architecture, it is impossible for a device to impersonate another device."
msgstr ""
"當 IoT Platform 接收事件時，會使用接收事件的連線認證來判斷是哪個裝置傳送了事件。使用此架構，裝置就不可能假冒成另一個裝置。"

#: ../docs/applications/libraries/nodejs.rst:91
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""
"依預設，應用程式將訂閱所有已連接裝置的所有事件。可使用 type、id、event 和 msgFormat 參數來控制訂閱的範圍。單一用戶端可以支援多個訂閱。下列程式碼範例示範如何根據裝置的 type、id、event 和 msgFormat 參數來訂閱裝置。"

#: ../docs/applications/libraries/nodejs.rst:94
msgid "To subscribe to all events from all devices"
msgstr ""
"訂閱所有裝置的所有事件"

#: ../docs/applications/libraries/nodejs.rst:112
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""
"訂閱特定類型之所有裝置的所有事件"

#: ../docs/applications/libraries/nodejs.rst:129
msgid "To subscribe to a specific event from all devices"
msgstr ""
"訂閱所有裝置的特定事件"

#: ../docs/applications/libraries/nodejs.rst:147
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""
"訂閱兩個以上不同裝置的特定事件"

#: ../docs/applications/libraries/nodejs.rst:165
msgid "To subscribe to all events published by a device in json format"
msgstr ""
"訂閱裝置已發佈且為 Json 格式的所有事件"

#: ../docs/applications/libraries/nodejs.rst:184
msgid "Handling events from devices"
msgstr ""
"處理裝置的事件"

#: ../docs/applications/libraries/nodejs.rst:186
msgid "To process the events received by your subscriptions you need to implement a device event callback method. The ibmiotf application client emits the event *deviceEvent*. This function has the following properties:"
msgstr ""
"若要處理訂閱所接收的事件，您需要實作裝置事件回呼方法。ibmiotf 應用程式用戶端會發出 *deviceEvent* 事件。這個函數具有下列內容："

#: ../docs/applications/libraries/nodejs.rst:188
#: ../docs/applications/libraries/nodejs.rst:285
msgid "deviceType"
msgstr ""
"deviceType"

#: ../docs/applications/libraries/nodejs.rst:189
#: ../docs/applications/libraries/nodejs.rst:286
msgid "deviceId"
msgstr ""
"deviceId"

#: ../docs/applications/libraries/nodejs.rst:190
msgid "eventType"
msgstr ""
"eventType"

#: ../docs/applications/libraries/nodejs.rst:191
msgid "format"
msgstr ""
"format"

#: ../docs/applications/libraries/nodejs.rst:192
msgid "payload - Device event payload"
msgstr ""
"payload - 裝置事件內容"

#: ../docs/applications/libraries/nodejs.rst:193
msgid "topic - Original topic"
msgstr ""
"topic - 原始主題"

#: ../docs/applications/libraries/nodejs.rst:220
msgid "Subscribing to device status"
msgstr ""
"訂閱裝置狀態"

#: ../docs/applications/libraries/nodejs.rst:222
msgid "By default, this will subscribe to status updates for all connected devices. Use the type and id parameters to control the scope of the subscription. A single client can support multiple subscriptions."
msgstr ""
"依預設，這會訂閱所有連線裝置的狀態更新。請使用 type 和 id 參數來控制訂閱的範圍。單一用戶端可支援多個訂閱。"

#: ../docs/applications/libraries/nodejs.rst:225
msgid "Subscribe to status updates for all devices"
msgstr ""
"訂閱所有裝置的狀態更新項目"

#: ../docs/applications/libraries/nodejs.rst:244
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""
"訂閱特定類型的所有裝置的狀態更新項目"

#: ../docs/applications/libraries/nodejs.rst:262
msgid "Subscribe to status updates for two different devices"
msgstr ""
"訂閱兩個不同裝置的狀態更新項目"

#: ../docs/applications/libraries/nodejs.rst:281
msgid "Handling status updates from devices"
msgstr ""
"處理裝置的狀態更新項目"

#: ../docs/applications/libraries/nodejs.rst:283
msgid "To process the status updates received by your subscriptions you need to implement an device status callback method. The ibmiotf application client emits the event *deviceStatus*. This function has the following properties:"
msgstr ""
"若要處理訂閱所接收的狀態更新，您需要實作裝置狀態回呼方法。ibmiotf 應用程式用戶端會發出 *deviceStatus* 事件。這個函數具有下列內容："

#: ../docs/applications/libraries/nodejs.rst:287
msgid "payload - Device status payload"
msgstr ""
"payload - 裝置狀態內容"

#: ../docs/applications/libraries/nodejs.rst:288
msgid "topic"
msgstr ""
"topic"

#: ../docs/applications/libraries/nodejs.rst:316
msgid "Publishing events from devices"
msgstr ""
"從裝置發佈事件"

#: ../docs/applications/libraries/nodejs.rst:318
msgid "Applications can publish events as if they originated from a Device. The function requires:"
msgstr ""
"應用程式可當成事件是從裝置產生來發佈事件。該函數需要："

#: ../docs/applications/libraries/nodejs.rst:320
#: ../docs/applications/libraries/nodejs.rst:351
msgid "DeviceType"
msgstr ""
"裝置類型"

#: ../docs/applications/libraries/nodejs.rst:321
#: ../docs/applications/libraries/nodejs.rst:352
msgid "Device ID"
msgstr ""
"裝置 ID"

#: ../docs/applications/libraries/nodejs.rst:322
msgid "Event Type"
msgstr ""
"事件類型"

#: ../docs/applications/libraries/nodejs.rst:323
#: ../docs/applications/libraries/nodejs.rst:354
msgid "Format"
msgstr ""
"格式"

#: ../docs/applications/libraries/nodejs.rst:324
#: ../docs/applications/libraries/nodejs.rst:355
msgid "Data"
msgstr ""
"資料"

#: ../docs/applications/libraries/nodejs.rst:347
msgid "Publishing commands to devices"
msgstr ""
"對裝置發佈指令"

#: ../docs/applications/libraries/nodejs.rst:349
msgid "Applications can publish commands to connected devices. The function requires:"
msgstr ""
"應用程式可對連接的裝置發佈指令。該函數需要："

#: ../docs/applications/libraries/nodejs.rst:353
msgid "Command Type"
msgstr ""
"指令類型"

#: ../docs/applications/libraries/nodejs.rst:378
msgid "Disconnect Client"
msgstr ""
"中斷連接用戶端"

#: ../docs/applications/libraries/nodejs.rst:380
msgid "Disconnects the client and releases the connections"
msgstr ""
"切斷用戶端並釋放連線"

#: ../docs/applications/libraries/nodejs.rst:404
msgid "Check Connection Status"
msgstr ""
"檢查連線狀態"

#: ../docs/applications/libraries/nodejs.rst:406
msgid "*isConnected* gives the current status of the application client connection"
msgstr ""
"*isConnected* 會提供應用程式用戶端連線的現行狀態"

