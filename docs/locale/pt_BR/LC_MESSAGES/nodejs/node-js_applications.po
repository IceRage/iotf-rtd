# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-17 09:49-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../nodejs/node-js_applications.rst:2
msgid "Node.js Client Library - Applications"
msgstr ""
"Biblioteca do Cliente Node.js - Aplicativos"

#: ../nodejs/node-js_applications.rst:4
msgid "The node.js client is used for simplifying the interacting with the Internet of Things Foundation. This client library contains instruction and guidance on using node.js with Internet of Things Foundation to interact with you devices and applications."
msgstr ""
"O cliente node.js é usado para simplificar a interação com o Internet of Things Foundation. Esta biblioteca do cliente contém instruções e orientações sobre como usar o node.js com o Internet of Things Foundation para interagir com seus dispositivos e aplicativos."

#: ../nodejs/node-js_applications.rst:6
msgid "This client library is divided into two parts, Devices and Applications. The Devices section contains information on how devices publish events and handle commands using the node.js Internet of Things Foundation module, and the Applications section contains information on how applications can use the nodejs ibmiotf module to interact with devices."
msgstr ""
"A biblioteca do cliente é dividida em duas partes, Dispositivos e Aplicativos. A seção Dispositivos contém informações sobre como os dispositivos publicam eventos e manipulam comandos usando o módulo do Internet of Things Foundation do node.js e a seção Aplicativos contém informações sobre como os aplicativos podem usar o módulo ibmiotf do nodejs para interagir com dispositivos."

#: ../nodejs/node-js_applications.rst:8
msgid "*IotfApplication* is the application client for the Internet of Things Foundation service. This section contains information on how applications interact with devices."
msgstr ""
"*IotfApplication* é o aplicativo cliente para o serviço do Internet of Things Foundation. Esta seção contém informações sobre como os aplicativos interagem com dispositivos."

#: ../nodejs/node-js_applications.rst:11
msgid "Constructor"
msgstr ""
"Construtor"

#: ../nodejs/node-js_applications.rst:13
msgid "The constructor builds the application client instance. It accepts an configuration json containing the following : - org - Your organization ID - id - The unique ID of your application within your organization. - auth-key - API key - auth-token - API key token"
msgstr ""
"O construtor constrói a instância do aplicativo cliente. Ele aceita um JSON de configuração contendo o seguinte : - org - O ID da organização - id - O ID exclusivo do aplicativo dentro da organização. - auth-key - Chave de API - auth-token - Token da chave de API"

#: ../nodejs/node-js_applications.rst:19
msgid "If you want to use quickstart, then send only the first two properties."
msgstr ""
"Se desejar usar a iniciação rápida, envie apenas as duas primeiras propriedades."

#: ../nodejs/node-js_applications.rst:34
msgid "Using a configuration file"
msgstr ""
"Usando um arquivo de configuração"

#: ../nodejs/node-js_applications.rst:36
msgid "Instead of passing the configuration json directly, you can also use a configuration file. Use the following code snippet"
msgstr ""
"Em vez de passar o JSON de configuração diretamente, também é possível usar um arquivo de configuração. Use o seguinte fragmento de código"

#: ../nodejs/node-js_applications.rst:45
msgid "The configuration file must be in the format of"
msgstr ""
"O arquivo de configuração deve estar no seguinte formato"

#: ../nodejs/node-js_applications.rst:55
msgid "Connecting to the Internet of Things Foundation"
msgstr ""
"Conectando-se ao Internet of Things Foundation"

#: ../nodejs/node-js_applications.rst:57
msgid "Connect to the Internet of Things Foundation by calling the *connect* function."
msgstr ""
"Conecte-se ao Internet of Things Foundation chamando a função *connect*."

#: ../nodejs/node-js_applications.rst:73
msgid "After the successful connection to the IoTF service, the application client sends a *connect* event. So all the logic can be implemented inside this callback function."
msgstr ""
"Após a conexão bem-sucedida com o serviço do IoTF, o aplicativo cliente envia um evento *connect*. Assim, toda a lógica pode ser implementada dentro dessa função de retorno de chamada."

#: ../nodejs/node-js_applications.rst:76
msgid "Subscribing to device events"
msgstr ""
"Assinando eventos de dispositivo"

#: ../nodejs/node-js_applications.rst:78
msgid "Events are the mechanism by which devices publish data to the Internet of Things Foundation. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"Eventos são o mecanismo pelo qual os dispositivos publicam dados no Internet of Things Foundation. O dispositivo controla o conteúdo do evento e designa um nome para cada evento que envia."

#: ../nodejs/node-js_applications.rst:80
msgid "When an event is received by the Internet of Things Foundation, the credentials of the connection on which the event was received are used to determine from which device the event was sent. Using this architecture, it is impossible for a device to impersonate another device."
msgstr ""
"Quando um evento é recebido pelo Internet of Things Foundation, as credenciais da conexão na qual o evento foi recebido são usadas para determinar a partir de qual dispositivo o evento foi enviado. Com essa arquitetura, é impossível que um dispositivo personifique outro dispositivo."

#: ../nodejs/node-js_applications.rst:82
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""
"Por padrão, os aplicativos assinarão todos os eventos de todos os dispositivos conectados. Use os parâmetros de tipo, ID, evento e msgFormat para controlar o escopo da assinatura. Um único cliente pode suportar várias assinaturas. As amostras de código abaixo fornecem exemplos de como assinar os dispositivos dependendo dos parâmetros de tipo de dispositivo, ID, evento e msgFormat."

#: ../nodejs/node-js_applications.rst:85
msgid "To subscribe to all events from all devices"
msgstr ""
"Para assinar todos os eventos de todos os dispositivos"

#: ../nodejs/node-js_applications.rst:103
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""
"Para assinar todos os eventos de todos os dispositivos de um tipo específico"

#: ../nodejs/node-js_applications.rst:120
msgid "To subscribe to a specific event from all devices"
msgstr ""
"Para assinar um evento específico de todos os dispositivos"

#: ../nodejs/node-js_applications.rst:138
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""
"Para assinar um evento específico de dois ou mais dispositivos diferentes"

#: ../nodejs/node-js_applications.rst:156
msgid "To subscribe to all events published by a device in json format"
msgstr ""
"Para assinar todos os eventos publicados por um dispositivo no formato json"

#: ../nodejs/node-js_applications.rst:175
msgid "Handling events from devices"
msgstr ""
"Manipulando eventos a partir de dispositivos"

#: ../nodejs/node-js_applications.rst:177
msgid "To process the events received by your subscriptions you need to implement a device event callback method. The ibmiotf application client emits the event *deviceEvent*. This function has the following properties:"
msgstr ""
"Para processar os eventos recebidos por suas assinaturas, é necessário implementar um método de retorno de chamada de eventos do dispositivo. O aplicativo cliente ibmiotf emite o evento *deviceEvent*. Esta função possui as seguintes propriedades:"

#: ../nodejs/node-js_applications.rst:179
#: ../nodejs/node-js_applications.rst:273
msgid "deviceType"
msgstr ""
"deviceType"

#: ../nodejs/node-js_applications.rst:180
#: ../nodejs/node-js_applications.rst:274
msgid "deviceId"
msgstr ""
"deviceId"

#: ../nodejs/node-js_applications.rst:181
msgid "eventType"
msgstr ""
"eventType"

#: ../nodejs/node-js_applications.rst:182
msgid "format"
msgstr ""
"format"

#: ../nodejs/node-js_applications.rst:183
msgid "payload - Device event payload"
msgstr ""
"payload - A carga útil do evento do dispositivo"

#: ../nodejs/node-js_applications.rst:184
msgid "topic - Original topic"
msgstr ""
"topic - Tópico original"

#: ../nodejs/node-js_applications.rst:208
msgid "Subscribing to device status"
msgstr ""
"Assinando o status do dispositivo"

#: ../nodejs/node-js_applications.rst:210
msgid "By default, this will subscribe to status updates for all connected devices. Use the type and id parameters to control the scope of the subscription. A single client can support multiple subscriptions."
msgstr ""
"Por padrão, este assinará as atualizações de status para todos os dispositivos conectados. Use os parâmetros de tipo e ID para controlar o escopo da assinatura. Um único cliente pode suportar várias assinaturas."

#: ../nodejs/node-js_applications.rst:213
msgid "Subscribe to status updates for all devices"
msgstr ""
"Assinar as atualizações de status para todos os dispositivos"

#: ../nodejs/node-js_applications.rst:232
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""
"Assinar as atualizações de status para todos os dispositivos de um tipo específico"

#: ../nodejs/node-js_applications.rst:250
msgid "Subscribe to status updates for two different devices"
msgstr ""
"Assinar as atualizações de status para dois dispositivos diferentes"

#: ../nodejs/node-js_applications.rst:269
msgid "Handling status updates from devices"
msgstr ""
"Manipulando atualizações de status a partir de dispositivos"

#: ../nodejs/node-js_applications.rst:271
msgid "To process the status updates received by your subscriptions you need to implement an device status callback method. The ibmiotf application client emits the event *deviceStatus*. This function has the following properties:"
msgstr ""
"Para processar as atualizações de status recebidas por suas assinaturas, é necessário implementar um método de retorno de chamada de status do dispositivo. O aplicativo cliente ibmiotf emite o evento *deviceStatus*. Esta função possui as seguintes propriedades:"

#: ../nodejs/node-js_applications.rst:275
msgid "payload - Device status payload"
msgstr ""
"payload - A carga útil de status do dispositivo"

#: ../nodejs/node-js_applications.rst:276
msgid "topic"
msgstr ""
"topic"

#: ../nodejs/node-js_applications.rst:300
msgid "Publishing events from devices"
msgstr ""
"Publicando eventos a partir de dispositivos"

#: ../nodejs/node-js_applications.rst:302
msgid "Applications can publish events as if they originated from a Device. The function requires:"
msgstr ""
"Os aplicativos podem publicar eventos como se eles se originassem em um Dispositivo. A função requer:"

#: ../nodejs/node-js_applications.rst:304
#: ../nodejs/node-js_applications.rst:331
msgid "DeviceType"
msgstr ""
"DeviceType"

#: ../nodejs/node-js_applications.rst:305
#: ../nodejs/node-js_applications.rst:332
msgid "Device ID"
msgstr ""
"ID do Dispositivo"

#: ../nodejs/node-js_applications.rst:306
msgid "Event Type"
msgstr ""
"Tipo de Evento"

#: ../nodejs/node-js_applications.rst:307
#: ../nodejs/node-js_applications.rst:334
msgid "Format"
msgstr ""
"Formato"

#: ../nodejs/node-js_applications.rst:308
#: ../nodejs/node-js_applications.rst:335
msgid "Data"
msgstr ""
"Dados"

#: ../nodejs/node-js_applications.rst:327
msgid "Publishing commands to devices"
msgstr ""
"Publicando comandos para dispositivos"

#: ../nodejs/node-js_applications.rst:329
msgid "Applications can publish commands to connected devices. The function requires:"
msgstr ""
"Os aplicativos podem publicar comandos para dispositivos conectados. A função requer:"

#: ../nodejs/node-js_applications.rst:333
msgid "Command Type"
msgstr ""
"Tipo de Comando"

#: ../nodejs/node-js_applications.rst:354
msgid "Disconnect Client"
msgstr ""
"Desconectar Cliente"

#: ../nodejs/node-js_applications.rst:356
msgid "Disconnects the client and releases the connections"
msgstr ""
"Desconecta o cliente e libera as conexões"

#: ../nodejs/node-js_applications.rst:376
msgid "Check Connection Status"
msgstr ""
"Verificar Status da Conexão"

#: ../nodejs/node-js_applications.rst:378
msgid "*isConnected* gives the current status of the application client connection"
msgstr ""
"*isConnected* fornece o status atual da conexão do aplicativo cliente"

