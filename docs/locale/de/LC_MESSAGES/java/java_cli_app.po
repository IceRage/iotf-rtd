# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-17 09:49-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../java/java_cli_app.rst:3
msgid "Java Client Library - Applications"
msgstr ""
"Java-Clientbibliothek - Anwendungen"

#: ../java/java_cli_app.rst:6
msgid "Introduction"
msgstr ""
"Einführung"

#: ../java/java_cli_app.rst:8
msgid "This client library describes how to use applications with the Java ibmiotf client library. For help with getting started with this module, see `Java Client Library - Introduction <../java/javaintro.html>`__."
msgstr ""
"Diese Clientbibliothek beschreibt die Verwendung von Anwendungen mit der Java-ibmiotf-Clientbibliothek. Hilfe bei den ersten Schritten mit diesem Modul siehe 'Java-Clientbibliothek - Einführung <../java/javaintro.html>'__."

#: ../java/java_cli_app.rst:10
msgid "This client library is divided into three sections, all included within the library. This section contains information on how applications can use the Java ibmiotf Client Library to interact with devices."
msgstr ""
"Diese Clientbibliothek ist in drei Abschnitte unterteilt, die alle in der Bibliothek enthalten sind. Dieser Abschnitt enthält Informationen, wie Anwendungen die Java-ibmiotf-Clientbibliothek zur Interaktion mit Geräte verwenden können."

#: ../java/java_cli_app.rst:12
msgid "The `Device section <../java/java_cli_devices.html>`__ contains information on how devices can publish events and handle commands using the Java ibmiotf Client Library."
msgstr ""
"Der Abschnitt 'Geräte <../java/java_cli_devices.html>'__ enthält Informationen dazu, wie Geräte Ereignisse publizieren und Befehle mit der Java-ibmiotf-Clientbibliothek verarbeiten können. "

#: ../java/java_cli_app.rst:14
msgid "The `Managed Device section <../java/java_deviceManagement.html>`__ contains information on how devices can connect to the Internet of Things Foundation Device Management service using Java ibmiotf Client Library and perform device management operations like firmware update, location update, and diagnostics update."
msgstr ""
"Der Abschnitt 'Verwaltete Geräte <../java/java_deviceManagement.html>'__ enthält Informationen dazu, wie Geräte die Verbindung zum Internet of Things Foundation Device Management-Service mithilfe der Java-ibmiotf-Clientbibliothek herstellen und Gerätemanagementoperationen (wie Firmware-Updates, Positions-Updates und Diagnose-Updates) ausführen können. "

#: ../java/java_cli_app.rst:17
msgid "Constructor"
msgstr ""
"Konstruktor"

#: ../java/java_cli_app.rst:19
msgid "The constructor builds the client instance, and accepts a Properties object containing the following definitions:"
msgstr ""
"Der Konstruktor erstellt die Clientinstanz und akzeptiert ein Eigenschaftsobjekt, das die folgenden Definitionen enthält:"

#: ../java/java_cli_app.rst:21
msgid "org - Your organization ID. (This is a required field. In case of quickstart flow, provide org as quickstart.)"
msgstr ""
"org - Ihre Organisations-ID. (Dies ist ein erforderliches Feld. Im Fall eines Quickstart-Ablaufs, geben Sie org als Quickstart an.)"

#: ../java/java_cli_app.rst:22
msgid "id - The unique ID of your application within your organization."
msgstr ""
"id - Die eindeutige ID Ihrer Anwendung innerhalb Ihrer Organisation."

#: ../java/java_cli_app.rst:23
msgid "auth-method - Method of authentication (the only value currently supported is “apikey”)."
msgstr ""
"auth-method - Die Methode der Authentifizierung (der einzige derzeit unterstützte Wert ist 'apikey')"

#: ../java/java_cli_app.rst:24
msgid "auth-key - API key (required if auth-method is “apikey”)."
msgstr ""
"auth-key - API-Schlüssel (erforderlich, falls 'auth-method' den Wert 'apikey' aufweist)."

#: ../java/java_cli_app.rst:25
msgid "auth-token - API key token (required if auth-method is “apikey”)."
msgstr ""
"auth-token - API-Schlüsseltoken (erforderlich, falls 'auth-method' den Wert 'apikey' aufweist)."

#: ../java/java_cli_app.rst:26
msgid "enable-shared-subscription - true or false (required only if shared subscription needs to be enabled)"
msgstr ""
"enable-shared-subscription - 'true' oder 'false' (nur erforderlich, wenn die gemeinsame Subskription aktiviert werden muss)"

#: ../java/java_cli_app.rst:28
msgid "One must set **enable-shared-subscription** to true to build scalable applications which will load balance messages across multiple instances of the application. Refer to the `scalable applications section <https://docs.internetofthings.ibmcloud.com/messaging/applications.html#/scalable-applications#scalable-applications>`__ for more information about the load balancing."
msgstr ""
"Für **enable-shared-subscription** muss 'true' festgelegt werden, damit skalierbare Anwendungen erstellt werden können, die eine Nachrichtenlastverteilung über mehrere Instanzen der Anwendung vornimmt. Der Abschnitt 'Skalierbare Anwendungen <https://docs.internetofthings.ibmcloud.com/messaging/applications.html#/scalable-applications#scalable-applications>'__ enthält weitere Informationen zum Lastausgleich. "

#: ../java/java_cli_app.rst:30
msgid "The Properties object creates definitions which are used to interact with the Internet of Things Foundation module. If no options are provided or organization is provided as quickstart, the client will connect to the Internet of Things Foundation Quickstart, and default to an unregistered device."
msgstr ""
"Das Eigenschaftsobjekt erstellt Definitionen, die zur Interaktion mit dem Internet of Things Foundation-Modul verwendet werden. Wenn keine Optionen angegeben werden bzw. keine Organisation als Schnellstart angegeben wird, stellt der Client eine Verbindung zu Internet of Things Foundation Quickstart her und verwendet standardmäßig ein nicht registriertes Gerät. "

#: ../java/java_cli_app.rst:32
msgid "The following code snippet shows how to construct the ApplicationClient instance in Quickstart mode,"
msgstr ""
"Das folgende Code-Snippet zeigt die Erstellung der Anwendungsclientinstanz im Schnellstartmodus. "

#: ../java/java_cli_app.rst:44
msgid "The following code snippet shows how to construct the ApplicationClient instance in registered flow,"
msgstr ""
"Das folgende Code-Snippet zeigt die Erstellung der Anwendungsclientinstanz im registrierten Ablauf. "

#: ../java/java_cli_app.rst:60
msgid "Using a configuration file"
msgstr ""
"Konfigurationsdatei verwenden"

#: ../java/java_cli_app.rst:62
msgid "Instead of including a Properties object directly, you can use a configuration file containing the name-value pairs for Properties. If you are using a configuration file containing a Properties object, use the following code format."
msgstr ""
"Anstatt ein Eigenschaftsobjekt direkt einzubeziehen, können Sie eine Konfigurationsdatei verwenden, die die Name/Wert-Paare für die Eigenschaften enthält. Wenn Sie eine Konfigurationsdatei verwenden, die ein Eigenschaftsobjekt enthält, verwenden Sie das folgende Codeformat."

#: ../java/java_cli_app.rst:70
msgid "The application configuration file must be in the following format:"
msgstr ""
"Die Anwendungskonfigurationsdatei muss im folgenden Format vorliegen:"

#: ../java/java_cli_app.rst:85
msgid "Connecting to the Internet of Things Foundation"
msgstr ""
"Herstellen der Verbindung zu Internet of Things Foundation"

#: ../java/java_cli_app.rst:87
msgid "Connect to the Internet of Things Foundation by calling the *connect* function."
msgstr ""
"Stellen Sie durch Aufrufen der Funktion *connect* eine Verbindung zu Internet of Things Foundation her."

#: ../java/java_cli_app.rst:97
msgid "After the successful connection to the IoTF service, the application client can perform the following operations, like subscribing to device events, subscribing to device status, publishing device events and commands."
msgstr ""
"Nach der erfolgreichen Herstellung einer Verbindung zum IoTF-Service kann der Anwendungsclient die folgenden Operationen ausführen, wie z. B. Geräteereignisse subskribieren, Gerätestatus subskribieren, Geräteereignisse und Befehle publizieren. "

#: ../java/java_cli_app.rst:102
msgid "Subscribing to device events"
msgstr ""
"Geräteereignisse subskribieren"

#: ../java/java_cli_app.rst:103
msgid "Events are the mechanism by which devices publish data to the Internet of Things Foundation. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"Ereignisse sind die Mechanismen, mit denen Geräte Daten bei Internet of Things Foundation publizieren. Das Gerät steuert den Inhalt des Ereignisses und ordnet einen Namen für jedes vom Gerät gesendete Ereignis zu."

#: ../java/java_cli_app.rst:105
msgid "When an event is received by the IoT Foundation the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""
"Wenn ein Ereignis von IoT Foundation empfangen wird, werden die Identifikationsdaten der Verbindung, mit der das Ereignis empfangen wurde, dazu verwendet, das Gerät zu ermitteln, von dem das Ereignis gesendet wurde. Mit dieser Architektur ist es für ein Gerät unmöglich, die Identität eines anderen Geräts anzunehmen."

#: ../java/java_cli_app.rst:107
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""
"Standardmäßig subskribieren Anwendungen alle Ereignisse von allen verbundenen Geräte. Verwenden Sie die Parameter type, id, event und msgFormat, um den Geltungsbereich der Subskription zu steuern. Ein einzelner Client kann mehrere Subskriptionen unterstützen. Die nachfolgenden Codebeispiele zeigen beispielhaft die Vorgehensweise beim Subskribieren bei Geräte abhängig von den Geräteparametern type, id, event und msgFormat."

#: ../java/java_cli_app.rst:110
msgid "To subscribe to all events from all devices"
msgstr ""
"Zum Subskribieren aller Ereignisse von allen Geräte"

#: ../java/java_cli_app.rst:118
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""
"Zum Subskribieren aller Ereignisse von allen Geräte eines bestimmten Typs"

#: ../java/java_cli_app.rst:126
msgid "To subscribe to all events from a specific device"
msgstr ""
"Zum Subskribieren aller Ereignisse von einem bestimmten Gerät"

#: ../java/java_cli_app.rst:134
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""
"Zum Subskribieren eines bestimmten Ereignisses von zwei oder mehr verschiedenen Geräte"

#: ../java/java_cli_app.rst:143
msgid "To subscribe to events published by a device in json format"
msgstr ""
"Zum Subskribieren von Ereignissen, die von einem Gerät im json-Format publiziert werden"

#: ../java/java_cli_app.rst:153
msgid "Handling events from devices"
msgstr ""
"Ereignisse von Geräten verarbeiten"

#: ../java/java_cli_app.rst:154
msgid "To process the events received by your subscriptions you need to register an event callback method. The messages are returned as an instance of the Event class which has the following properties:"
msgstr ""
"Zum Verarbeiten der Ereignisse, die von Ihren Subskriptionen empfangen wurden, müssen Sie eine Ereignis-Callback-Methode registrieren. Die Nachrichten werden als eine Instanz der Ereignisklasse zurückgegeben, die die folgenden Eigenschaften hat:"

#: ../java/java_cli_app.rst:156
msgid "event.device - string (uniquely identifies the device across all types of devices in the organization)"
msgstr ""
"event.device - Zeichenfolge (kennzeichnet eindeutig das Gerät über alle Typen von Geräten in der Organisation)"

#: ../java/java_cli_app.rst:157
msgid "event.deviceType - string"
msgstr ""
"event.deviceType - Zeichenfolge"

#: ../java/java_cli_app.rst:158
msgid "event.deviceId - string"
msgstr ""
"event.deviceId - Zeichenfolge"

#: ../java/java_cli_app.rst:159
msgid "event.event - string"
msgstr ""
"event.event - Zeichenfolge"

#: ../java/java_cli_app.rst:160
msgid "event.format - string"
msgstr ""
"event.format - Zeichenfolge"

#: ../java/java_cli_app.rst:161
msgid "event.data - dict"
msgstr ""
"event.data - Dict"

#: ../java/java_cli_app.rst:162
msgid "event.timestamp - datetime"
msgstr ""
"event.timestamp - Datum/Uhrzeit"

#: ../java/java_cli_app.rst:164
msgid "A sample implementation of the Event callback,"
msgstr ""
"Beispielimplementierung für Ereignis-Callback,"

#: ../java/java_cli_app.rst:182
msgid "Once the event callback is added to the ApplicationClient, the processEvent() method is invoked whenever any event is published on the subscribed criteria, The following snippet shows how to add the Event call back into ApplicationClient instance,"
msgstr ""
"Nach dem Hinzufügen des Ereignis-Callbacks zum Anwendungsclient wird die Methode 'processEvent()' immer dann aufgerufen, wenn ein Ereignis für die subskribierten Kriterien publiziert wird. Das folgende Code-Snippet zeigt, wie der Ereignis-Callback zur Anwendungsclientinstanz hinzugefügt wird. "

#: ../java/java_cli_app.rst:190
msgid "Similar to subscribing to device events, the application can subscribe to commands that are sent to the devices. Following code snippet shows how to subscribe to all commands to all the devices in the organization:"
msgstr ""
"Ähnlich wie bei der Subskription von Geräteereignissen kann die Anwendung Befehle subskribieren, die an die Geräte gesendet werden. Das folgende Code-Snippet zeigt die Subskription für alle Befehle an alle Geräte in der Organisation: "

#: ../java/java_cli_app.rst:198
msgid "Overloaded methods are available to control the command subscription. The processCommand() method is called when a command is sent to the device that matches the command subscription."
msgstr ""
"Überladene Methoden sind zur Steuerung der Befehlssubskription verfügbar. Die Methode 'processCommand()' wird aufgerufen, wenn ein Befehl an das Gerät gesendet wird, der der Befehlssubskription entspricht. "

#: ../java/java_cli_app.rst:203
msgid "Subscribing to device status"
msgstr ""
"Gerätestatus subskribieren"

#: ../java/java_cli_app.rst:204
msgid "Similar to subscribing to device events, applications can subscribe to device status, like device connect and disconnect to Internet of Things Foundation. By default, this will subscribe to status updates for all connected devices. Use the Device Type and Device Id parameters to control the scope of the subscription. A single ApplicationClient can support multiple subscriptions."
msgstr ""
"Ähnlich wie bei der Subskription von Geräteereignissen können Anwendungen Gerätestatusinformationen subskribieren, wie z. B. Statusdaten zum Herstellen und Trennen von Verbindungen zwischen Geräten und Internet of Things Foundation. Standardmäßig werden hiermit Statusaktualisierungen für alle verbundenen Geräte subskribiert. Verwenden Sie die Parameter für den Gerätetyp und die Geräte-ID, um den Geltungsbereich der Subskription zu steuern. Ein einzelner Anwendungsclient kann mehrere Subskriptionen unterstützen."

#: ../java/java_cli_app.rst:207
msgid "Subscribe to status updates for all devices"
msgstr ""
"Statusaktualisierungen für alle Geräte subskribieren"

#: ../java/java_cli_app.rst:216
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""
"Statusaktualisierungen für alle Geräte eines bestimmten Typs subskribieren"

#: ../java/java_cli_app.rst:225
msgid "Subscribe to status updates for two different devices"
msgstr ""
"Statusaktualisierungen für zwei verschiedene Geräte subskribieren"

#: ../java/java_cli_app.rst:237
msgid "Handling status updates from devices"
msgstr ""
"Statusaktualisierungen von Geräten verarbeiten"

#: ../java/java_cli_app.rst:238
msgid "To process the status updates received by your subscriptions you need to register an status event callback method. The messages are returned as an instance of the Status class which contains the below mentioned properties:"
msgstr ""
"Zum Verarbeiten der Statusaktualisierungen, die von Ihren Subskriptionen empfangen wurden, müssen Sie eine Callback-Methode für ein Statusereignis registrieren. Die Nachrichten werden als Instanz der Statusklasse zurückgegeben, die die nachfolgend aufgeführten Eigenschaften enthält: "

#: ../java/java_cli_app.rst:240
msgid "The following properties are set for both \"Connect\" and \"Disconnect\" status events:"
msgstr ""
"Die folgenden Eigenschaften werden für die Statusereignisse \"Connect\" und \"Disconnect\" gesetzt:"

#: ../java/java_cli_app.rst:242
msgid "status.clientAddr - string"
msgstr ""
"status.clientAddr - Zeichenfolge"

#: ../java/java_cli_app.rst:243
msgid "status.protocol - string"
msgstr ""
"status.protocol - Zeichenfolge"

#: ../java/java_cli_app.rst:244
msgid "status.clientId - string"
msgstr ""
"status.clientId - Zeichenfolge"

#: ../java/java_cli_app.rst:245
msgid "status.user - string"
msgstr ""
"status.user - Zeichenfolge"

#: ../java/java_cli_app.rst:246
msgid "status.time - java.util.Date"
msgstr ""
"status.time - java.util.Date"

#: ../java/java_cli_app.rst:247
msgid "status.action - string"
msgstr ""
"status.action - Zeichenfolge"

#: ../java/java_cli_app.rst:248
msgid "status.connectTime - java.util.Date"
msgstr ""
"status.connectTime - java.util.Date"

#: ../java/java_cli_app.rst:249
msgid "status.port - integer"
msgstr ""
"status.port - ganze Zahl"

#: ../java/java_cli_app.rst:251
msgid "The following properties are only set when the action is \"Disconnect\":"
msgstr ""
"Die folgenden Eigenschaften werden nur dann gesetzt, wenn die Aktion \"Disconnect\" lautet:"

#: ../java/java_cli_app.rst:253
msgid "status.writeMsg - integer"
msgstr ""
"status.writeMsg - ganze Zahl"

#: ../java/java_cli_app.rst:254
msgid "status.readMsg - integer"
msgstr ""
"status.readMsg - ganze Zahl"

#: ../java/java_cli_app.rst:255
msgid "status.reason - string"
msgstr ""
"status.reason - Zeichenfolge"

#: ../java/java_cli_app.rst:256
msgid "status.readBytes - integer"
msgstr ""
"status.readBytes - ganze Zahl"

#: ../java/java_cli_app.rst:257
msgid "status.writeBytes - integer"
msgstr ""
"status.writeBytes - ganze Zahl"

#: ../java/java_cli_app.rst:259
msgid "A sample implementation of the Status callback,"
msgstr ""
"Beispielimplementierung für Status-Callback,"

#: ../java/java_cli_app.rst:283
msgid "Once the status callback is added to the ApplicationClient, the processDeviceStatus() method is invoked whenever any device is connected or disconnected from Internet of Things Foundation that matches the criteria, The following snippet shows how to add the status call back instance into ApplicationClient,"
msgstr ""
"Nach dem Hinzufügen des Status-Callbacks zum Anwendungsclient wird die Methode 'processDeviceStatus()' immer dann aufgerufen, wenn für ein Gerät eine Verbindung zu Internet of Things Foundation hergestellt oder getrennt wird, das den Kriterien entspricht. Das folgende Code-Snippet zeigt das Hinzufügen der Status-Callback-Instanz zum Anwendungsclient. "

#: ../java/java_cli_app.rst:293
msgid "As similar to device status, the application can subscribe to any other application connect or disconnect status as well. Following code snippet shows how to subscribe to the application status in the organization:"
msgstr ""
"Ähnlich wie beim Gerätestatus kann die Anwendung auch andere Statusinformationen zum Herstellen bzw. Trennen von Verbindungen subskribieren. Das folgende Code-Snippet zeigt die Subskription für Anwendungsstatusinformationen in der Organisation. "

#: ../java/java_cli_app.rst:301
msgid "Overloaded method is available to control the status subscription to a particular application. The processApplicationStatus() method is called whenever any application is connected or disconnected from Internet of Things Foundation that matches the criteria."
msgstr ""
"Eine überladene Methode zur Steuerung der Statussubskription für eine bestimmte Anwendung ist verfügbar. Die Methode 'processApplicationStatus()' wird immer dann aufgerufen, wenn für eine Anwendung eine Verbindung zu Internet of Things Foundation hergestellt oder getrennt wird, die den Kriterien entspricht. "

#: ../java/java_cli_app.rst:304
msgid "Publishing events from devices"
msgstr ""
"Ereignisse von Geräten publizieren"

#: ../java/java_cli_app.rst:305
msgid "Applications can publish events as if they originated from a Device."
msgstr ""
"Anwendungen können Ereignisse so publizieren, als ob sie von einem Gerät stammen."

#: ../java/java_cli_app.rst:322
msgid "Publish events using HTTP(s)"
msgstr ""
"Ereignisse mit HTTP(s) publizieren"

#: ../java/java_cli_app.rst:323
msgid "Apart from MQTT, the application can publish device events to IBM Internet of Things Foundation using HTTP(s) by following 3 simple steps,"
msgstr ""
"Abgesehen von MQTT kann die Anwendung Geräteereignisse über HTTP(s) an IBM Internet of Things Foundation publizieren, indem 3 einfache Schritte ausgeführt werden,"

#: ../java/java_cli_app.rst:325
msgid "Construct the ApplicationClient instance using the properties file"
msgstr ""
"Anwendungsclientinstanz mithilfe der Eigenschaftendatei erstellen"

#: ../java/java_cli_app.rst:326
msgid "Construct the event that needs to be published"
msgstr ""
"Zu publizierendes Ereignis erstellen"

#: ../java/java_cli_app.rst:327
msgid "Specify the event name, Device Type, Device ID and publish the event using publishEventOverHTTP() method as follows,"
msgstr ""
"Geben Sie den Ereignisnamen, den Gerätetyp und die Geräte-ID an und publizieren Sie das Ereignis mithilfe der Methode 'publishEventOverHTTP()' wie folgt,"

#: ../java/java_cli_app.rst:341
msgid "The complete code can be found in the application example `HttpApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/HttpApplicationDeviceEventPublish.java>`__"
msgstr ""
"Den vollständigen Code finden Sie im Anwendungsbeispiel `HttpApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/HttpApplicationDeviceEventPublish.java>`__"

#: ../java/java_cli_app.rst:343
msgid "Based on the settings in the properties file, the publishEventOverHTTP() method either publishes the event in Quickstart or in Registered flow. When the Organization ID mentioned in the properties file is quickstart, publishEventOverHTTP() method publishes the event to Internet of Things Foundation quickstart service and publishes the event in plain HTTP format. But when valid registered organization is mentioned in the properties file, this method always publishes the event in HTTPS (HTTP over SSL), so all the communication is secured."
msgstr ""
"Abhängig von den Einstellungen in der Eigenschaftendatei publiziert die Methode 'publishEventOverHTTP()' das Ereignis entweder in Quickstart oder im registrierten Ablauf. Wenn in der Eigenschaftendatei die Organisations-ID 'quickstart' angegeben ist, publiziert die Methode 'publishEventOverHTTP()' das Ereignis an den Quickstart-Service von Internet of Things Foundation im einfachen HTTP-Format. Ist in der Eigenschaftendatei jedoch eine gültige registrierte Organisation angegeben, publiziert die Methode das Ereignis stets in HTTPS (HTTP über SSL), dass die gesamte Kommunikation gesichert ist. "

#: ../java/java_cli_app.rst:345
msgid "The event in HTTP(s) is published at most once Quality of Service, so the application needs to implement the retry logic when there is an error."
msgstr ""
"Das Ereignis wird in HTTP(s) mit der Servicequalitätsstufe 'höchstens einmal' publiziert; d. h., die Anwendung muss die Wiederholungslogik implementieren, falls ein Fehler auftritt. "

#: ../java/java_cli_app.rst:350
msgid "Publishing commands to devices"
msgstr ""
"Befehle für Geräte publizieren"

#: ../java/java_cli_app.rst:351
msgid "Applications can publish commands to connected devices."
msgstr ""
"Anwendungen können Befehle an verbundene Geräte publizieren."

#: ../java/java_cli_app.rst:368
msgid "Examples"
msgstr ""
"Beispiele"

#: ../java/java_cli_app.rst:369
msgid "`MQTTApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/MQTTApplicationDeviceEventPublish.java>`__ - A sample application that shows how to publish device events."
msgstr ""
"`MQTTApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/MQTTApplicationDeviceEventPublish.java>`__ - Beispielanwendung zur Veranschaulichung des Publizierens von Geräteereignissen. "

#: ../java/java_cli_app.rst:370
msgid "`RegisteredApplicationCommandPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/RegisteredApplicationCommandPublish.java>`__ - A sample application that shows how to publish a command to a device."
msgstr ""
"`RegisteredApplicationCommandPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/RegisteredApplicationCommandPublish.java>`__ - Beispielanwendung zur Veranschaulichung des Publizierens eines Befehls an ein Gerät."

#: ../java/java_cli_app.rst:371
msgid "`RegisteredApplicationSubscribeSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/RegisteredApplicationSubscribeSample.java>`__ - A sample application that shows how to subscribe for various events like, device events, device commands, device status and application status."
msgstr ""
"`RegisteredApplicationSubscribeSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/RegisteredApplicationSubscribeSample.java>`__ - Beispielanwendung zur Veranschaulichung der Subskription für verschiedene Ereignisse wie z. B. Geräteereignisse, Gerätebefehle, Gerätestatus und Anwendungsstatus. "

#: ../java/java_cli_app.rst:372
msgid "`SharedSubscriptionSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/SharedSubscriptionSample.java>`__ - A sample application that shows how to build a scalable application which will load balance messages across multiple instances of the application."
msgstr ""
"`SharedSubscriptionSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/SharedSubscriptionSample.java>`__ - Beispielanwendung zur Veranschaulichung der Erstellung einer skalierbaren Anwendung, die eine Nachrichtenlastverteilung über mehrere Instanzen der Anwendung vornimmt."

