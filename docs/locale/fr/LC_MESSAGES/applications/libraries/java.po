# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-16 16:10-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/applications/libraries/java.rst:2
msgid "Java for Application Developers"
msgstr ""
"Java pour les développeurs d'applications"

#: ../docs/applications/libraries/java.rst:4
msgid "See `iot-java <https://github.com/ibm-messaging/iot-java>`_ in GitHub"
msgstr ""
"Voir `iot-java <https://github.com/ibm-messaging/iot-java>`_ dans GitHub"

#: ../docs/applications/libraries/java.rst:7
msgid "Constructor"
msgstr ""
"Constructeur"

#: ../docs/applications/libraries/java.rst:9
msgid "The constructor builds the client instance, and accepts a Properties object containing the following definitions:"
msgstr ""
"Le constructeur génère l'instance client et accepte un objet Properties contenant les définitions suivantes :"

#: ../docs/applications/libraries/java.rst:11
msgid "``org`` - Your organization ID (This is a required field. In case of quickstart flow, provide org as ``quickstart``)."
msgstr ""
"``org`` - ID de votre organisation (Il s'agit d'une zone requise. Dans le cas d'un flux Quickstart, indiquez la valeur ``quickstart`` pour org.)"

#: ../docs/applications/libraries/java.rst:12
msgid "``id`` - The unique ID of your application within your organization."
msgstr ""
"``id`` - ID unique de votre application au sein de votre organisation."

#: ../docs/applications/libraries/java.rst:13
msgid "``auth-method`` - Method of authentication (the only value currently supported is ``apikey``)."
msgstr ""
"``auth-method`` - Méthode d'authentification (la seule valeur actuellement admise est ``apikey``)."

#: ../docs/applications/libraries/java.rst:14
msgid "``auth-key`` - API key (required if auth-method is ``apikey``)."
msgstr ""
"``auth-key`` - Clé d'API (requise si auth-method est ``apikey``)."

#: ../docs/applications/libraries/java.rst:15
msgid "``auth-token`` - API key token (required if auth-method is ``apikey``)."
msgstr ""
"``auth-token`` - Jeton de clé d'API (requis si auth-method est ``apikey``)."

#: ../docs/applications/libraries/java.rst:16
msgid "``clean-session`` - true or false (required only if you want to connect the application in durable subscription. By default the clean-session is set to true)."
msgstr ""
"``clean-session`` - true ou false (requis uniquement si vous voulez connecter l'application dans un abonnement durable. Par défaut, clean-session a pour valeur true.)"

#: ../docs/applications/libraries/java.rst:17
msgid "``shared-subscription`` - true or false (required only if shared subscription needs to be enabled)."
msgstr ""
"``shared-subscription`` - true ou false (requis uniquement si l'abonnement partagé doit être activé)."

#: ../docs/applications/libraries/java.rst:19
msgid "One must set ``shared-subscription`` to true to build scalable applications which will load balance messages across multiple instances of the application. Refer to the `scalable applications section <https://docs.internetofthings.ibmcloud.com/applications/mqtt.html#/scalable-applications#scalable-applications>`__ for more information about the load balancing."
msgstr ""
"Vous devez associer ``shared-subscription`` à la valeur true pour générer des applications évolutives qui équilibrent la charge des messages entre plusieurs instances de l'application. Pour plus d'informations sur l'équilibrage de charge, reportez-vous à la `section relative aux applications évolutives <https://docs.internetofthings.ibmcloud.com/applications/mqtt.html#/scalable-applications#scalable-applications>`__."

#: ../docs/applications/libraries/java.rst:21
msgid "The Properties object creates definitions which are used to interact with the IoT Platform module. If no options are provided or organization is provided as quickstart, the client will connect to the IoT Platform Quickstart, and default to an unregistered device."
msgstr ""
"L'objet Properties crée des définitions qui permettent d'interagir avec le module IoT Platform. Si aucune option n'est indiquée ou que l'organisation correspond à quickstart, le client se connecte au service Quickstart d'IoT Platform et est associé par défaut à un terminal non enregistré."

#: ../docs/applications/libraries/java.rst:23
msgid "The following code snippet shows how to construct the ApplicationClient instance in Quickstart mode,"
msgstr ""
"Le fragment de code suivant explique comment construire l'instance ApplicationClient dans le mode Quickstart :"

#: ../docs/applications/libraries/java.rst:36
msgid "The following code snippet shows how to construct the ApplicationClient instance in registered flow,"
msgstr ""
"Le fragment de code suivant explique comment construire l'instance ApplicationClient dans le flux d'organisations enregistrées :"

#: ../docs/applications/libraries/java.rst:50
msgid "Using a configuration file"
msgstr ""
"Utilisation d'un fichier de configuration"

#: ../docs/applications/libraries/java.rst:52
msgid "Instead of including a Properties object directly, you can use a configuration file containing the name-value pairs for Properties. If you are using a configuration file containing a Properties object, use the following code format."
msgstr ""
"Au lieu d'inclure un objet Properties directement, vous pouvez utiliser un fichier de configuration contenant les paires nom-valeur de l'objet Properties. Si vous utilisez un fichier de configuration contenant un objet Properties, utilisez le format de code suivant :"

#: ../docs/applications/libraries/java.rst:60
msgid "The application configuration file must be in the following format:"
msgstr ""
"Le fichier de configuration de l'application doit posséder le format suivant :"

#: ../docs/applications/libraries/java.rst:77
msgid "Connecting to the IoT Platform"
msgstr ""
"Connexion à IoT Platform"

#: ../docs/applications/libraries/java.rst:79
msgid "Connect to the Watson IoT Platform by calling the connect function. The connect function takes an optional boolean parameter autoRetr (by default autoRetry is true) that controls allows the library to retry the connection when there is an MqttException. Note that the library won't retry when there is a MqttSecurityException due to incorrect device registration details passed even if the autoRetry is set to true ."
msgstr ""
"Connectez-vous à Watson IoT Platform en appelant la fonction de connexion. Celle-ci admet le paramètre booléen facultatif autoRetry (dont la valeur est true par défaut), qui autorise la bibliothèque à retenter la connexion en cas d'exception de type MqttException. La bibliothèque ne retente pas de se connecter en cas d'exception de type MqttSecurityException due à la transmission de détails d'enregistrement de terminal incorrects, même si le paramètre autoRetry est associé à la valeur true. "

#: ../docs/applications/libraries/java.rst:92
msgid "After the successful connection to the IoT Platform service, the application client can perform the following operations, like subscribing to device events, subscribing to device status, publishing device events and commands."
msgstr ""
"Une fois la connexion au service IoT Platform établie, le client d'application peut effectuer les opérations suivantes, comme l'abonnement à des événements du terminal, l'abonnement au statut du terminal, ainsi que la publication des événements et des commandes du terminal."

#: ../docs/applications/libraries/java.rst:99
msgid "Subscribing to device events"
msgstr ""
"Abonnement aux événements d'un terminal"

#: ../docs/applications/libraries/java.rst:100
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"Les événements constituent le mécanisme par lequel les terminaux publient des données dans IoT Platform. Le terminal contrôle le contenu de l'événement et affecte un nom à chaque événement qu'il envoie."

#: ../docs/applications/libraries/java.rst:102
msgid "When an event is received by the IoT Platform the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""
"Lorsqu'un événement est reçu par IoT Platform, les données d'identification de la connexion sur laquelle l'événement a été reçu sont utilisées pour identifier le terminal à partir duquel l'événement a été envoyé. Avec cette architecture, un terminal ne peut en aucun cas simuler les droits d'accès d'un autre terminal."

#: ../docs/applications/libraries/java.rst:104
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""
"Par défaut, les applications sont abonnées à tous les événements de tous les terminaux connectés. Utilisez les paramètres type, id, event et msgFormat pour contrôler la portée de l'abonnement. Un même client peut prendre en charge plusieurs abonnements. Les exemples de code ci-après expliquent comment s'abonner à des terminaux en fonction des paramètres type, id, event et msgFormat."

#: ../docs/applications/libraries/java.rst:107
msgid "To subscribe to all events from all devices"
msgstr ""
"Abonnement à tous les événements de tous les terminaux"

#: ../docs/applications/libraries/java.rst:115
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""
"Abonnement à tous les événements de tous les terminaux d'un type donné"

#: ../docs/applications/libraries/java.rst:123
msgid "To subscribe to all events from a specific device"
msgstr ""
"Abonnement à tous les événements d'un terminal spécifique"

#: ../docs/applications/libraries/java.rst:131
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""
"Abonnement à un événement spécifique de plusieurs terminaux"

#: ../docs/applications/libraries/java.rst:140
msgid "To subscribe to events published by a device in json format"
msgstr ""
"Abonnement à des événements publiés par un terminal au format json"

#: ../docs/applications/libraries/java.rst:152
msgid "Handling events from devices"
msgstr ""
"Traitement des événements provenant des terminaux"

#: ../docs/applications/libraries/java.rst:153
msgid "To process the events received by your subscriptions you need to register an event callback method. The messages are returned as an instance of the Event class which has the following properties:"
msgstr ""
"Pour traiter les événements reçus via vos abonnements, vous devez enregistrer une méthode de rappel d'événement. Les messages sont renvoyés sous la forme d'une instance de la classe Event dotée des propriétés suivantes :"

#: ../docs/applications/libraries/java.rst:155
msgid "event.device - string (uniquely identifies the device across all types of devices in the organization)"
msgstr ""
"event.device - Chaîne (qui identifie de manière unique le terminal parmi tous les types de terminaux de l'organisation)"

#: ../docs/applications/libraries/java.rst:156
msgid "event.deviceType - string"
msgstr ""
"event.deviceType - Chaîne"

#: ../docs/applications/libraries/java.rst:157
msgid "event.deviceId - string"
msgstr ""
"event.deviceId - Chaîne"

#: ../docs/applications/libraries/java.rst:158
msgid "event.event - string"
msgstr ""
"event.event - Chaîne"

#: ../docs/applications/libraries/java.rst:159
msgid "event.format - string"
msgstr ""
"event.format - Chaîne"

#: ../docs/applications/libraries/java.rst:160
msgid "event.data - dict"
msgstr ""
"event.data - dict"

#: ../docs/applications/libraries/java.rst:161
msgid "event.timestamp - datetime"
msgstr ""
"event.timestamp - Objet datetime"

#: ../docs/applications/libraries/java.rst:163
msgid "A sample implementation of the Event callback,"
msgstr ""
"Exemple d'implémentation du rappel Event :"

#: ../docs/applications/libraries/java.rst:212
msgid "Once the event callback is added to the ApplicationClient, the processEvent() method is invoked whenever any event is published on the subscribed criteria, The following snippet shows how to add the Event call back into ApplicationClient instance,"
msgstr ""
"Une fois que le rappel Event est ajouté à l'instance ApplicationClient, la méthode processEvent() est appelée lorsqu'un événement est publié sur les critères d'abonnement. Le fragment suivant explique comment ajouter le rappel Event dans l'instance ApplicationClient :"

#: ../docs/applications/libraries/java.rst:220
msgid "Similar to subscribing to device events, the application can subscribe to commands that are sent to the devices. Following code snippet shows how to subscribe to all commands to all the devices in the organization:"
msgstr ""
"Comme pour l'abonnement à des événements de terminaux, l'application peut s'abonner à des commandes envoyées aux terminaux. Le fragment de code suivant explique comment s'abonner à toutes les commandes destinées à l'ensemble des terminaux de l'organisation :"

#: ../docs/applications/libraries/java.rst:228
msgid "Overloaded methods are available to control the command subscription. The processCommand() method is called when a command is sent to the device that matches the command subscription."
msgstr ""
"Des méthodes surchargées sont disponibles pour contrôler l'abonnement aux commandes. La méthode processCommand() est appelée lorsqu'une commande correspondant à l'abonnement est envoyée au terminal."

#: ../docs/applications/libraries/java.rst:235
msgid "Subscribing to device status"
msgstr ""
"Abonnement au statut des terminaux"

#: ../docs/applications/libraries/java.rst:236
msgid "Similar to subscribing to device events, applications can subscribe to device status, like device connect and disconnect to IoT Platform. By default, this will subscribe to status updates for all connected devices. Use the Device Type and Device Id parameters to control the scope of the subscription. A single ApplicationClient can support multiple subscriptions."
msgstr ""
"Comme pour l'abonnement à des événements de terminaux, les applications peuvent s'abonner aux statuts des terminaux, tels que la connexion et la déconnexion des terminaux dans IoT Platform. Par défaut, vous êtes abonné aux mises à jour du statut de tous les terminaux connectés. Utilisez les paramètres Device Type et Device Id pour contrôler la portée de l'abonnement. Un même client ApplicationClient peut prendre en charge plusieurs abonnements."

#: ../docs/applications/libraries/java.rst:239
msgid "Subscribe to status updates for all devices"
msgstr ""
"Abonnement aux mises à jour du statut de tous les terminaux"

#: ../docs/applications/libraries/java.rst:248
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""
"Abonnement aux mises à jour du statut de tous les terminaux d'un type donné"

#: ../docs/applications/libraries/java.rst:257
msgid "Subscribe to status updates for two different devices"
msgstr ""
"Abonnement aux mises à jour du statut de deux terminaux différents"

#: ../docs/applications/libraries/java.rst:270
msgid "Handling status updates from devices"
msgstr ""
"Traitement des mises à jour du statut des terminaux"

#: ../docs/applications/libraries/java.rst:271
msgid "To process the status updates received by your subscriptions you need to register an status event callback method. The messages are returned as an instance of the Status class which contains the below mentioned properties:"
msgstr ""
"Pour traiter les mises à jour du statut reçues par vos abonnements, vous devez enregistrer une méthode de rappel d'événement de statut. Les messages sont renvoyés sous la forme d'une instance de la classe Status qui inclut les propriétés suivantes :"

#: ../docs/applications/libraries/java.rst:273
msgid "The following properties are set for both \"Connect\" and \"Disconnect\" status events:"
msgstr ""
"Les propriétés suivantes sont définies pour les événements de statut \"Connexion\" (Connect) et \"Déconnexion\" (Disconnect) :"

#: ../docs/applications/libraries/java.rst:275
msgid "status.clientAddr - string"
msgstr ""
"status.clientAddr - Chaîne"

#: ../docs/applications/libraries/java.rst:276
msgid "status.protocol - string"
msgstr ""
"status.protocol - Chaîne"

#: ../docs/applications/libraries/java.rst:277
msgid "status.clientId - string"
msgstr ""
"status.clientId - Chaîne"

#: ../docs/applications/libraries/java.rst:278
msgid "status.user - string"
msgstr ""
"status.user - Chaîne"

#: ../docs/applications/libraries/java.rst:279
msgid "status.time - java.util.Date"
msgstr ""
"status.time - java.util.Date"

#: ../docs/applications/libraries/java.rst:280
msgid "status.action - string"
msgstr ""
"status.action - Chaîne"

#: ../docs/applications/libraries/java.rst:281
msgid "status.connectTime - java.util.Date"
msgstr ""
"status.connectTime - java.util.Date"

#: ../docs/applications/libraries/java.rst:282
msgid "status.port - integer"
msgstr ""
"status.port - Entier"

#: ../docs/applications/libraries/java.rst:284
msgid "The following properties are only set when the action is \"Disconnect\":"
msgstr ""
"Les propriétés suivantes sont définies uniquement lorsque l'action est \"Déconnexion\" (Disconnect) :"

#: ../docs/applications/libraries/java.rst:286
msgid "status.writeMsg - integer"
msgstr ""
"status.writeMsg - Entier"

#: ../docs/applications/libraries/java.rst:287
msgid "status.readMsg - integer"
msgstr ""
"status.readMsg - Entier"

#: ../docs/applications/libraries/java.rst:288
msgid "status.reason - string"
msgstr ""
"status.reason - Chaîne"

#: ../docs/applications/libraries/java.rst:289
msgid "status.readBytes - integer"
msgstr ""
"status.readBytes - Entier"

#: ../docs/applications/libraries/java.rst:290
msgid "status.writeBytes - integer"
msgstr ""
"status.writeBytes - Entier"

#: ../docs/applications/libraries/java.rst:292
msgid "A sample implementation of the Status callback,"
msgstr ""
"Exemple d'implémentation du rappel Status :"

#: ../docs/applications/libraries/java.rst:316
msgid "Once the status callback is added to the ApplicationClient, the processDeviceStatus() method is invoked whenever any device is connected or disconnected from IoT Platform that matches the criteria, The following snippet shows how to add the status call back instance into ApplicationClient,"
msgstr ""
"Une fois que le rappel Status est ajouté à l'instance ApplicationClient, la méthode processDeviceStatus() est appelée à chaque fois qu'un terminal correspondant aux critères est connecté ou déconnecté dans IoT Platform. Le fragment suivant explique comment ajouter l'instance de rappel Status dans l'instance ApplicationClient :"

#: ../docs/applications/libraries/java.rst:325
msgid "As similar to device status, the application can subscribe to any other application connect or disconnect status as well. Following code snippet shows how to subscribe to the application status in the organization:"
msgstr ""
"Outre le statut des terminaux, l'application peut s'abonner à n'importe quel autre statut de connexion ou de déconnexion. Le fragment de code suivant indique comment s'abonner au statut d'une application dans l'organisation :"

#: ../docs/applications/libraries/java.rst:333
msgid "Overloaded method is available to control the status subscription to a particular application. The processApplicationStatus() method is called whenever any application is connected or disconnected from IoT Platform that matches the criteria."
msgstr ""
"La méthode surchargée est disponible pour contrôler l'abonnement au statut d'une application spécifique. La méthode processApplicationStatus() est appelée à chaque fois qu'une application correspondant aux critères est connectée ou déconnectée d'IoT Platform."

#: ../docs/applications/libraries/java.rst:340
msgid "Publishing events from devices"
msgstr ""
"Publication d'événements à partir de terminaux"

#: ../docs/applications/libraries/java.rst:341
msgid "Applications can publish events as if they originated from a Device."
msgstr ""
"Les applications peuvent publier des événements comme s'ils provenaient d'un terminal."

#: ../docs/applications/libraries/java.rst:358
msgid "Publish events using HTTP(s)"
msgstr ""
"Publication des événements à l'aide du protocole HTTP(s)"

#: ../docs/applications/libraries/java.rst:359
msgid "Apart from MQTT, the application can publish device events to IBM Watson IoT Platform using HTTP(s) by following 3 simple steps,"
msgstr ""
"Les terminaux peuvent publier les événements des terminaux dans IBM Watson IoT Platform via HTTP(s), en plus de MQTT, en suivant trois étapes simples :"

#: ../docs/applications/libraries/java.rst:361
msgid "Construct the ApplicationClient instance using the properties file"
msgstr ""
"Construire l'instance ApplicationClient à l'aide du fichier de propriétés"

#: ../docs/applications/libraries/java.rst:362
msgid "Construct the event that needs to be published"
msgstr ""
"Construire l'événement qui doit être publié"

#: ../docs/applications/libraries/java.rst:363
msgid "Specify the event name, Device Type, Device ID and publish the event using publishEventOverHTTP() method as follows,"
msgstr ""
"Indiquer le nom de l'événement, le type de terminal, l'ID terminal et publier l'événement à l'aide de la méthode publishEventOverHTTP(), comme indiqué ci-après :"

#: ../docs/applications/libraries/java.rst:377
msgid "The complete code can be found in the application example `HttpApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/HttpApplicationDeviceEventPublish.java>`__"
msgstr ""
"Le code complet est disponible dans l'exemple d'application `HttpApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/HttpApplicationDeviceEventPublish.java>`__"

#: ../docs/applications/libraries/java.rst:379
msgid "Based on the settings in the properties file, the publishEventOverHTTP() method either publishes the event in Quickstart or in Registered flow. When the Organization ID mentioned in the properties file is quickstart, publishEventOverHTTP() method publishes the event to IoT Platform quickstart service and publishes the event in plain HTTP format. But when valid registered organization is mentioned in the properties file, this method always publishes the event in HTTPS (HTTP over SSL), so all the communication is secured."
msgstr ""
"En fonction des paramètres du fichier de propriétés, la méthode publishEventOverHTTP() publie l'événement dans le flux Quickstart ou le flux des organisations enregistrées. Lorsque l'ID organisation indiqué dans le fichier de propriétés est quickstart, la méthode publishEventOverHTTP() publie l'événement dans le service Quickstart d'IoT Platform au format HTTP standard. En revanche, lorsqu'une organisation enregistrée valide est indiquée dans le fichier de propriétés, cette méthode publie toujours l'événement dans HTTPS (HTTP sur SSL) afin que toutes les communications soient sécurisées."

#: ../docs/applications/libraries/java.rst:381
msgid "The event in HTTP(s) is published at most once Quality of Service, so the application needs to implement the retry logic when there is an error."
msgstr ""
"Dans HTTP(s), l'événement est publié au niveau de qualité de service 'une fois tout au plus', ce qui signifie que l'application doit mettre en place une logique de relance en cas d'erreur."

#: ../docs/applications/libraries/java.rst:388
msgid "Publishing commands to devices"
msgstr ""
"Publication de commandes sur des terminaux"

#: ../docs/applications/libraries/java.rst:389
msgid "Applications can publish commands to connected devices."
msgstr ""
"Les applications peuvent publier des commandes sur des terminaux connectés."

#: ../docs/applications/libraries/java.rst:408
msgid "Examples"
msgstr ""
"Exemples"

#: ../docs/applications/libraries/java.rst:409
msgid "`MQTTApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/MQTTApplicationDeviceEventPublish.java>`__ - A sample application that shows how to publish device events."
msgstr ""
"`MQTTApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/MQTTApplicationDeviceEventPublish.java>`__ - Modèle d'application qui explique comment publier des événements de terminal."

#: ../docs/applications/libraries/java.rst:410
msgid "`RegisteredApplicationCommandPublish <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/RegisteredApplicationCommandPublish.java>`__ - A sample application that shows how to publish a command to a device."
msgstr ""
"`RegisteredApplicationCommandPublish <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/RegisteredApplicationCommandPublish.java>`__ - Modèle d'application qui explique comment publier une commande sur un terminal."

#: ../docs/applications/libraries/java.rst:411
msgid "`RegisteredApplicationSubscribeSample <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/RegisteredApplicationSubscribeSample.java>`__ - A sample application that shows how to subscribe for various events like, device events, device commands, device status and application status."
msgstr ""
"`RegisteredApplicationSubscribeSample <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/RegisteredApplicationSubscribeSample.java>`__ - Modèle d'application qui explique comment s'abonner à divers événements tels que des événements de terminal, des commandes de terminal, les statuts de terminal et les statuts d'application."

#: ../docs/applications/libraries/java.rst:412
msgid "`SharedSubscriptionSample <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/SharedSubscriptionSample.java>`__ - A sample application that shows how to build a scalable application which will load balance messages across multiple instances of the application."
msgstr ""
"`SharedSubscriptionSample <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/SharedSubscriptionSample.java>`__ - Modèle d'application qui explique comment générer une application évolutive qui équilibre la charge des messages entre plusieurs instances de l'application."

#: ../docs/applications/libraries/java.rst:413
msgid "`Backup and Restore sample <https://github.com/ibm-messaging/iot-backup-restore-sample>`__ - A sample that shows how to backup the device configuration in Cloudant NoSQL DB and restore the same later."
msgstr ""
"`Exemple de sauvegarde et de restauration <https://github.com/ibm-messaging/iot-backup-restore-sample>`__ - Exemple qui explique comment sauvegarder la configuration de terminal dans une base de données Cloudant NoSQL et la restaurer ultérieurement."

