# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-17 09:49-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../java/java_deviceManagement.rst:3
msgid "Java Client Library - Managed Devices"
msgstr ""
"Bibliothèque client Java - Terminaux gérés"

#: ../java/java_deviceManagement.rst:6
msgid "Introduction"
msgstr ""
"Introduction"

#: ../java/java_deviceManagement.rst:8
msgid "This client library describes how to use devices with the Java ibmiotf client library. For help with getting started with this module, see `Java Client Library - Introduction <../java/javaintro.html>`__."
msgstr ""
"Cette bibliothèque client explique comment utiliser des terminaux avec la bibliothèque client Java ibmiotf. Pour obtenir de l'aide lors de la mise en route de ce module, reportez-vous à la section `Bibliothèque client Java - Introduction <../java/javaintro.html>`__."

#: ../java/java_deviceManagement.rst:10
msgid "This section contains information on how devices can connect to the Internet of Things Foundation Device Management service using Java and perform device management operations like firmware update, location update, and diagnostics update."
msgstr ""
"Cette section contient des informations décrivant le mode de connexion des terminaux au service Internet of Things Foundation Device Management via Java, ainsi que les opérations de gestion des terminaux, comme la mise à jour du microprogramme, de l'emplacement et des programmes de diagnostic."

#: ../java/java_deviceManagement.rst:12
msgid "The Device section contains information on how devices can publish events and handle commands using the Java ibmiotf Client Library."
msgstr ""
"La section Terminal contient des informations expliquant comment les terminaux peuvent publier des événements et traiter des commandes à l'aide de la bibliothèque client Java ibmiotf."

#: ../java/java_deviceManagement.rst:14
msgid "The Applications section contains information on how applications can use the Java ibmiotf Client Library to interact with devices."
msgstr ""
"La section Applications contient des informations expliquant comment les applications peuvent utiliser la bibliothèque client Java ibmiotf pour interagir avec des terminaux."

#: ../java/java_deviceManagement.rst:18
msgid "Device Management"
msgstr ""
"Gestion des terminaux"

#: ../java/java_deviceManagement.rst:19
msgid "The `device management <../reference/device_mgmt.html>`__ feature enhances the Internet of Things Foundation Connect service with new capabilities for managing devices. Device management makes a distinction between managed and unmanaged devices:"
msgstr ""
"La fonction de `gestion des terminaux <../reference/device_mgmt.html>`__  améliore le service Internet of Things Foundation Connect en offrant de nouvelles fonctionnalités pour la gestion des terminaux. Elle établit une distinction entre les terminaux gérés et les terminaux non gérés :"

#: ../java/java_deviceManagement.rst:21
msgid "**Managed Devices** are defined as devices which have a management agent installed. The management agent sends and receives device metadata and responds to device management commands from the Internet of Things Foundation Connect."
msgstr ""
"Les **terminaux gérés** sont des terminaux où un agent de gestion a été installé. L'agent de gestion envoie et reçoit les métadonnées des terminaux et répond aux commandes de gestion des terminaux provenant d'Internet of Things Foundation Connect."

#: ../java/java_deviceManagement.rst:22
msgid "**Unmanaged Devices** are any devices which do not have a device management agent. All devices begin their lifecycle as unmanaged devices, and can transition to managed devices by sending a message from a device management agent to the Internet of Things Foundation Connect."
msgstr ""
"Les **terminaux non gérés** sont des terminaux qui ne comportent pas d'agent de gestion des terminaux. Tous les terminaux commencent leur cycle de vie en tant que terminaux non gérés et peuvent devenir des terminaux gérés en envoyant un message à Internet of Things Foundation Connect via un agent de gestion des terminaux."

#: ../java/java_deviceManagement.rst:27
msgid "Connecting to the Internet of Things Foundation Device Management Service"
msgstr ""
"Connexion au service Internet of Things Foundation Device Management"

#: ../java/java_deviceManagement.rst:30
msgid "Create DeviceData"
msgstr ""
"Créer DeviceData"

#: ../java/java_deviceManagement.rst:31
msgid "The `device model <../reference/device_model.html>`__ describes the metadata and management characteristics of a device. The device database in the Internet of Things Foundation Connect is the master source of device information. Applications and managed devices are able to send updates to the database such as a location or the progress of a firmware update. Once these updates are received by the Internet of Things Foundation Connect, the device database is updated, making the information available to applications."
msgstr ""
"Le `modèle de terminal <../reference/device_model.html>`__ décrit les métadonnées et les caractéristiques de gestion d'un terminal. La base de données de terminaux d'Internet of Things Foundation Connect représente la principale source d'informations sur les terminaux. Les applications et les terminaux gérés peuvent envoyer des mises à jour à la base de données, comme un emplacement ou la progression de la mise à jour d'un microprogramme. Une fois que ces mises à jour sont reçues par Internet of Things Foundation Connect, la base de données de terminaux est modifiée et les informations sont mises à la disposition des applications."

#: ../java/java_deviceManagement.rst:33
msgid "The device model in the ibmiotf client library is represented as DeviceData and to create a DeviceData one needs to create the following objects,"
msgstr ""
"Le modèle de terminal inclus dans la bibliothèque client ibmiotf est représenté en tant que DeviceData. Pour créer un DeviceData, vous devez créer les objets suivants :"

#: ../java/java_deviceManagement.rst:35
msgid "DeviceInfo (mandatory)"
msgstr ""
"DeviceInfo (obligatoire)"

#: ../java/java_deviceManagement.rst:36
msgid "DeviceLocation (required if the device supports location update)"
msgstr ""
"DeviceLocation (obligatoire si le terminal prend en charge la mise à jour de l'emplacement)"

#: ../java/java_deviceManagement.rst:37
msgid "DiagnosticErrorCode (required if the device wants to update the ErrorCode)"
msgstr ""
"DiagnosticErrorCode (obligatoire si le terminal doit mettre à jour le code d'erreur)"

#: ../java/java_deviceManagement.rst:38
msgid "DiagnosticLog (required if the device wants to update Log information)"
msgstr ""
"DiagnosticLog (obligatoire si le terminal doit mettre à jour les informations de journal)"

#: ../java/java_deviceManagement.rst:39
msgid "DeviceFirmware (required if the device supports Firmware Actions)"
msgstr ""
"DeviceFirmware (obligatoire si le terminal prend en charge les actions sur le microprogramme)"

#: ../java/java_deviceManagement.rst:40
msgid "DeviceMetadata (optional)"
msgstr ""
"DeviceMetadata (facultatif)"

#: ../java/java_deviceManagement.rst:42
msgid "The following code snippet shows how to create the mandatory object DeviceInfo along with an optional object DeviceMetadata with sample data:"
msgstr ""
"Le fragment de code suivant indique comment créer l'objet obligatoire DeviceInfo, ainsi que l'objet facultatif DeviceMetadata avec des exemples de données :"

#: ../java/java_deviceManagement.rst:64
msgid "The following code snippet shows how to create the DeviceData object with the above created DeviceInfo and DeviceMetadata objects:"
msgstr ""
"Le fragment de code suivant indique comment créer l'objet DeviceData avec les objets DeviceInfo et DeviceMetadata créés ci-dessus :"

#: ../java/java_deviceManagement.rst:73
msgid "Construct ManagedDevice"
msgstr ""
"Construire ManagedDevice"

#: ../java/java_deviceManagement.rst:74
msgid "ManagedDevice - A device class that connects the device as managed device to Internet of Things Foundation Connect and enables the device to perform one or more Device Management operations. Also the ManagedDevice instance can be used to do normal device operations like publishing device events and listening for commands from application."
msgstr ""
"ManagedDevice - Classe de terminaux qui connecte le terminal à Internet of Things Foundation Connect sous la forme d'un terminal géré et permet au terminal d'effectuer une ou plusieurs opérations de gestion des terminaux. L'instance ManagedDevice permet également d'effectuer des opérations standard sur les terminaux, comme la publication des événements du terminal et l'écoute des commandes de l'application."

#: ../java/java_deviceManagement.rst:76
msgid "ManagedDevice exposes 2 different constructors to support different user patterns,"
msgstr ""
"ManagedDevice expose deux constructeurs différents pour prendre en charge différents modèles d'utilisateur."

#: ../java/java_deviceManagement.rst:78
msgid "**Constructor One**"
msgstr ""
"**Constructeur 1**"

#: ../java/java_deviceManagement.rst:80
msgid "Constructs a ManagedDevice instance by accepting the DeviceData and the following properties,"
msgstr ""
"Construit une instance ManagedDevice en acceptant DeviceData et les propriétés suivantes :"

#: ../java/java_deviceManagement.rst:82
msgid "Organization-ID - Your organization ID."
msgstr ""
"Organization-ID - ID de votre organisation."

#: ../java/java_deviceManagement.rst:83
msgid "Device-Type - The type of your device."
msgstr ""
"Device-Type - Type de votre terminal."

#: ../java/java_deviceManagement.rst:84
msgid "Device-ID - The ID of your device."
msgstr ""
"Device-ID - ID de votre terminal."

#: ../java/java_deviceManagement.rst:85
msgid "Authentication-Method - Method of authentication (The only value currently supported is \"token\")."
msgstr ""
"Authentication-Method - Méthode d'authentification (La seule valeur actuellement prise en charge est \"token\")."

#: ../java/java_deviceManagement.rst:86
msgid "Authentication-Token - API key token"
msgstr ""
"Authentication-Token - Jeton de clé d'API"

#: ../java/java_deviceManagement.rst:88
msgid "All these properties are required to interact with the Internet of Things Foundation Connect."
msgstr ""
"Toutes ces propriétés sont nécessaires pour interagir avec Internet of Things Foundation Connect."

#: ../java/java_deviceManagement.rst:90
msgid "The following code shows how to create a ManagedDevice instance:"
msgstr ""
"Le code suivant indique comment créer une instance ManagedDevice :"

#: ../java/java_deviceManagement.rst:103
msgid "The existing users of DeviceClient might observe that the names of these properties have changed slightly. These names have been changed to mirror the names in the Internet of Things Foundation Connect Dashboard, but the existing users who want to migrate from the DeviceClient to the ManagedDevice can still use the old format and construct the ManagedDevice instance as follows:"
msgstr ""
"Les utilisateurs existants de DeviceClient peuvent observer une légère modification des noms de ces propriétés. Ces noms ont été modifiés pour refléter les noms figurant dans le tableau de bord Internet of Things Foundation Connect mais les utilisateurs existants qui souhaitent migrer de DeviceClient vers ManagedDevice peuvent continuer à utiliser l'ancien format et construire l'instance ManagedDevice de la manière suivante :"

#: ../java/java_deviceManagement.rst:115
msgid "**Constructor Two**"
msgstr ""
"**Constructeur 2**"

#: ../java/java_deviceManagement.rst:117
msgid "Construct a ManagedDevice instance by accepting the DeviceData and the MqttClient instance. This constructor requires the DeviceData to be created with additional device attributes like Device Type and Device Id as follows:"
msgstr ""
"Cette classe permet de construire une instance ManagedDevice en acceptant DeviceData et l'instance MqttClient. Ce constructeur requiert la création de DeviceData avec des attributs de terminal complémentaires (comme Device Type et Device Id) de la manière suivante :"

#: ../java/java_deviceManagement.rst:135
msgid "Note this constructor helps the custom device users to create a ManagedDevice instance with the already created and connected MqttClient instance to take advantage of device management operations. But we recommend the users to use the library for all the device functionalities."
msgstr ""
"Ce constructeur permet aux utilisateurs de terminaux personnalisés de créer une instance ManagedDevice avec l'instance MqttClient déjà créée et connectée pour bénéficier des opérations de gestion des terminaux. Il est recommandé d'utiliser la bibliothèque pour toutes les fonctionnalités du terminal."

#: ../java/java_deviceManagement.rst:138
msgid "Manage"
msgstr ""
"Méthode Manage"

#: ../java/java_deviceManagement.rst:139
msgid "The device can invoke manage() method to participate in device management activities. The manage request will initiate a connect request internally if the device is not connected to the Internet of Things Foundation Connect already:"
msgstr ""
"Le terminal peut appeler la méthode manage() pour participer aux opérations de gestion des terminaux. La demande de gestion lance une demande de connexion en interne si le terminal n'est pas encore connecté à Internet of Things Foundation Connect :"

#: ../java/java_deviceManagement.rst:145
msgid "The device can use overloaded manage (lifetime) method to register the device for a given timeframe. The timeframe specifies the length of time within which the device must send another **Manage device** request in order to avoid being reverted to an unmanaged device and marked as dormant."
msgstr ""
"Le terminal peut utiliser la méthode de gestion (durée de vie) pour enregistrer le terminal pendant une période donnée. La période indique le laps de temps pendant lequel le terminal doit envoyer une nouvelle demande **Gérer le terminal** pour éviter de revenir à l'état de terminal non géré marqué En veille."

#: ../java/java_deviceManagement.rst:151
msgid "Refer to the `documentation <../device_mgmt/operations/manage.html>`__ for more information about the manage operation."
msgstr ""
"Pour plus d'informations sur l'opération de gestion, reportez-vous à la `documentation <../device_mgmt/operations/manage.html>`__."

#: ../java/java_deviceManagement.rst:154
msgid "Unmanage"
msgstr ""
"Méthode Unmanage"

#: ../java/java_deviceManagement.rst:156
msgid "A device can invoke unmanage() method when it no longer needs to be managed. The Internet of Things Foundation Connect will no longer send new device management requests to this device and all device management requests from this device will be rejected other than a **Manage device** request."
msgstr ""
"Un terminal peut appeler la méthode unmanage() lorsqu'il n'a plus besoin d'être géré. Internet of Things Foundation n'envoie plus de nouvelles demandes de gestion de terminaux à ce terminal et toutes les demandes de gestion émises par ce terminal sont rejetées, à l'exception d'une demande **Gérer le terminal**."

#: ../java/java_deviceManagement.rst:162
msgid "Refer to the `documentation <../device_mgmt/operations/manage.html>`__ for more information about the Unmanage operation."
msgstr ""
"Pour plus d'informations sur l'opération d'annulation de la gestion, reportez-vous à la `documentation <../device_mgmt/operations/manage.html>`__."

#: ../java/java_deviceManagement.rst:165
msgid "Location Update"
msgstr ""
"Mise à jour de l'emplacement"

#: ../java/java_deviceManagement.rst:167
msgid "Devices that can determine their location can choose to notify the Internet of Things Foundation Connect about location changes. In order to update the location, the device needs to create DeviceData instance with the DeviceLocation object first."
msgstr ""
"Les terminaux qui peuvent identifier leur emplacement peuvent signaler à Internet of Things Foundation Connect que l'emplacement a été modifié. Pour mettre à jour l'emplacement, le terminal doit d'abord créer l'instance DeviceLocation avec l'objet DeviceData."

#: ../java/java_deviceManagement.rst:182
msgid "Once the device is connected to Internet of Things Foundation Connect, the location can be updated by invoking the following method:"
msgstr ""
"Une fois que le terminal est connecté à Internet of Things Foundation Connect, vous pouvez mettre à jour l'emplacement en appelant la méthode suivante :"

#: ../java/java_deviceManagement.rst:193
msgid "Later, any new location can be updated by changing the properties of the DeviceLocation object:"
msgstr ""
"Vous pouvez modifier ultérieurement un nouvel emplacement en modifiant les propriétés de l'objet DeviceLocation :"

#: ../java/java_deviceManagement.rst:204
msgid "The update() method informs the Internet of Things Foundation Connect about the new location."
msgstr ""
"La méthode update() signale le nouvel emplacement à Internet of Things Foundation Connect."

#: ../java/java_deviceManagement.rst:206
msgid "Refer to the `documentation <../device_mgmt/operations/update.html>`__ for more information about the Location update."
msgstr ""
"Pour plus d'informations sur la mise à jour d'un emplacement, reportez-vous à la `documentation <../device_mgmt/operations/update.html>`__ ."

#: ../java/java_deviceManagement.rst:209
msgid "Append/Clear ErrorCodes"
msgstr ""
"Ajout/Effacement des codes d'erreur"

#: ../java/java_deviceManagement.rst:211
msgid "Devices can choose to notify the Internet of Things Foundation Connect about changes in their error status. In order to send the ErrorCodes the device needs to construct a DiagnosticErrorCode object as follows:"
msgstr ""
"Les terminaux peuvent signaler les modifications de leur statut d'erreur à Internet of Things Foundation Connect. Pour envoyer les codes d'erreur, le terminal doit construire un objet DiagnosticErrorCode de la manière suivante :"

#: ../java/java_deviceManagement.rst:223
msgid "Once the device is connected to Internet of Things Foundation Connect, the ErrorCode can be sent by calling the send() method as follows:"
msgstr ""
"Une fois que le terminal est connecté à Internet of Things Foundation Connect, vous pouvez envoyer le code d'erreur en appelant la méthode send() de la manière suivante :"

#: ../java/java_deviceManagement.rst:229
msgid "Later, any new ErrorCodes can be easily added to the Internet of Things Foundation Connect by calling the append method as follows:"
msgstr ""
"Vous pouvez ajouter facilement de nouveaux codes d'erreur à Internet of Things Foundation Connect en utilisant la méthode append() de la manière suivante :"

#: ../java/java_deviceManagement.rst:240
msgid "Also, the ErrorCodes can be cleared from Internet of Things Foundation Connect by calling the clear() method as follows:"
msgstr ""
"Il est également possible d'effacer de nouveaux codes d'erreur d'Internet of Things Foundation Connect en utilisant la méthode clear() de la manière suivante :"

#: ../java/java_deviceManagement.rst:252
msgid "Append/Clear Log messages"
msgstr ""
"Ajout/Effacement des messages de journal"

#: ../java/java_deviceManagement.rst:253
msgid "Devices can choose to notify the Internet of Things Foundation Connect about changes by adding a new log entry. Log entry includes a log messages, its timestamp and severity, as well as an optional base64-encoded binary diagnostic data. In order to send log messages, the device needs to construct a DiagnosticLog object as follows:"
msgstr ""
"Les terminaux peut signaler des modifications à Internet of Things Foundation Connect en ajoutant une nouvelle entrée de journal. L'entrée de journal inclut des messages de journal, l'horodatage et le niveau de gravité associés, ainsi que des données de diagnostic binaires facultatives codées en base64. Pour envoyer des messages de journal, le terminal doit construire un objet DiagnosticLog de la manière suivante :"

#: ../java/java_deviceManagement.rst:268
msgid "Once the device is connected to Internet of Things Foundation Connect, the log message can be sent by calling the send() method as follows:"
msgstr ""
"Une fois que le terminal est connecté à Internet of Things Foundation Connect, vous pouvez envoyer le message de journal en appelant la méthode send() de la manière suivante :"

#: ../java/java_deviceManagement.rst:274
msgid "Later, any new log messages can be easily added to the Internet of Things Foundation Connect by calling the append method as follows:"
msgstr ""
"Vous pouvez ensuite ajouter facilement des messages de journal à Internet of Things Foundation Connect en utilisant la méthode append() de la manière suivante :"

#: ../java/java_deviceManagement.rst:286
msgid "Also, the log messages can be cleared from Internet of Things Foundation Connect by calling the clear method as follows:"
msgstr ""
"Il est également possible d'effacer des messages de journal d'Internet of Things Foundation Connect en appelant la méthode clear() de la manière suivante :"

#: ../java/java_deviceManagement.rst:297
msgid "The device diagnostics operations are intended to provide information on device errors, and does not provide diagnostic information relating to the devices connection to the Internet of Things Foundation Connect."
msgstr ""
"Les opérations de diagnostic des terminaux sont conçues pour fournir des informations sur les erreurs des terminaux mais elles ne transmettent pas d'informations de diagnostic sur la connexion des terminaux à Internet of Things Foundation Connect."

#: ../java/java_deviceManagement.rst:299
msgid "Refer to the `documentation <../device_mgmt/operations/diagnostics.html>`__ for more information about the Diagnostics operation."
msgstr ""
"Pour plus d'informations sur l'opération de diagnostic, reportez-vous à la `documentation <../device_mgmt/operations/diagnostics.html>`__ ."

#: ../java/java_deviceManagement.rst:302
msgid "Firmware Actions"
msgstr ""
"Actions sur le microprogramme"

#: ../java/java_deviceManagement.rst:303
msgid "The firmware update process is separated into two distinct actions:"
msgstr ""
"La procédure de mise à jour du microprogramme se compose de deux actions distinctes :"

#: ../java/java_deviceManagement.rst:305
msgid "Downloading Firmware"
msgstr ""
"Téléchargement du microprogramme"

#: ../java/java_deviceManagement.rst:306
msgid "Updating Firmware."
msgstr ""
"Mise à jour du microprogramme"

#: ../java/java_deviceManagement.rst:308
msgid "The device needs to do the following activities to support Firmware Actions:"
msgstr ""
"Le terminal doit effectuer les opérations suivantes pour prendre en charge les actions sur le microprogramme :"

#: ../java/java_deviceManagement.rst:310
msgid "**1. Construct DeviceFirmware Object**"
msgstr ""
"**1. Construire l'objet DeviceFirmware**"

#: ../java/java_deviceManagement.rst:312
msgid "In order to perform Firmware actions the device needs to construct the DeviceFirmware object and add it to DeviceData as follows:"
msgstr ""
"Pour effectuer des actions sur le microprogramme, le terminal doit construire l'objet DeviceFirmware et l'ajouter à DeviceData de la manière suivante :"

#: ../java/java_deviceManagement.rst:334
msgid "The DeviceFirmware object represents the current firmware of the device and will be used to report the status of the Firmware Download and Firmware Update actions to Internet of Things Foundation Connect."
msgstr ""
"L'objet DeviceFirmware représente le microprogramme en cours du terminal et est utilisé pour signaler le statut des actions de téléchargement et de mise à jour du microprogramme à Internet of Things Foundation Connect."

#: ../java/java_deviceManagement.rst:336
msgid "**2. Inform the server about the Firmware action support**"
msgstr ""
"**2. Signaler au serveur la prise en charge de l'action sur le microprogramme**"

#: ../java/java_deviceManagement.rst:338
msgid "The device needs to set the firmware action flag to true in order for the server to initiate the firmware request. This can be achieved by invoking a following method with a boolean value:"
msgstr ""
"Le terminal doit associer l'action sur le microprogramme à la valeur true pour permettre au serveur de lancer la demande de microprogramme. Cette opération peut être effectuée en appelant la méthode suivante avec une valeur booléenne :"

#: ../java/java_deviceManagement.rst:345
msgid "As the manage request informs the Internet of Things Foundation Connect about the firmware action support, manage() method needs to be called right after setting the firmware action support."
msgstr ""
"Comme la demande de gestion signale à Internet of Things Foundation Connect la prise en charge de l'action sur le microprogramme, la méthode manage() doit être appelée juste après la définition de la prise en charge de l'action sur le microprogramme."

#: ../java/java_deviceManagement.rst:347
msgid "**3. Create the Firmware Action Handler**"
msgstr ""
"**3. Créer le gestionnaire d'actions sur le microprogramme**"

#: ../java/java_deviceManagement.rst:349
msgid "In order to support the Firmware action, the device needs to create a handler and add it to ManagedDevice. The handler must extend a DeviceFirmwareHandler class and implement the following methods:"
msgstr ""
"Pour prendre en charge l'action sur le microprogramme, le terminal doit créer un gestionnaire et l'ajouter à ManagedDevice. Le gestionnaire doit étendre une classe DeviceFirmwareHandler et implémenter les méthodes suivantes :"

#: ../java/java_deviceManagement.rst:356
msgid "**3.1 Sample implementation of downloadFirmware**"
msgstr ""
"**3.1 Exemple d'implémentation de downloadFirmware**"

#: ../java/java_deviceManagement.rst:358
msgid "The implementation must add logic to download the firmware and report the status of the download via DeviceFirmware object. If the Firmware Download operation is successful, then the state of the firmware to be set to DOWNLOADED and UpdateStatus should be set to SUCCESS."
msgstr ""
"L'implémentation doit ajouter une logique permettant de télécharger le microprogramme et signaler le statut du téléchargement via l'objet DeviceFirmware. Si l'opération de téléchargement du microprogramme aboutit, l'état du microprogramme doit correspondre à DOWNLOADED et UpdateStatus doit correspondre à SUCCESS."

#: ../java/java_deviceManagement.rst:360
msgid "If an error occurs during Firmware Download the state should be set to IDLE and updateStatus should be set to one of the error status values:"
msgstr ""
"Si une erreur se produit lors du téléchargement du microprogramme, l'état doit correspondre à IDLE et updateStatus doit représenter l'une des valeurs de statut d'erreur suivants :"

#: ../java/java_deviceManagement.rst:362
#: ../java/java_deviceManagement.rst:460
msgid "OUT_OF_MEMORY"
msgstr ""
"OUT_OF_MEMORY"

#: ../java/java_deviceManagement.rst:363
msgid "CONNECTION_LOST"
msgstr ""
"CONNECTION_LOST"

#: ../java/java_deviceManagement.rst:364
msgid "INVALID_URI"
msgstr ""
"INVALID_URI"

#: ../java/java_deviceManagement.rst:366
msgid "A sample Firmware Download implementation for a Raspberry Pi device is shown below:"
msgstr ""
"Un exemple d'implémentation du téléchargement du microprogramme sur le terminal Raspberry Pi est présenté ci-dessous :"

#: ../java/java_deviceManagement.rst:425
msgid "Device can check the integrity of the downloaded firmware image using the verifier and report the status back to Internet of Things Foundation Connect. The verifier can be set by the device during the startup (while creating the DeviceFirmware Object) or as part of the Download Firmware request by the application. A sample code to verify the same is below:"
msgstr ""
"Le terminal peut vérifier l'intégrité de l'image du microprogramme téléchargé à l'aide du vérificateur et renvoyer le statut à Internet of Things Foundation Connect. Le vérificateur peut être défini par le terminal au démarrage (lors de la création de l'objet DeviceFirmware) ou dans le cadre de la demande de téléchargement du microprogramme de l'application. Un exemple de code de vérification est présenté ci-dessous :"

#: ../java/java_deviceManagement.rst:452
#: ../java/java_deviceManagement.rst:496
msgid "The complete code can be found in the device management sample `RasPiFirmwareHandlerSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/RasPiFirmwareHandlerSample.java>`__."
msgstr ""
"Le code complet est disponible dans l'exemple de gestion des terminaux `RasPiFirmwareHandlerSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/RasPiFirmwareHandlerSample.java>`__."

#: ../java/java_deviceManagement.rst:454
msgid "**3.2 Sample implementation of updateFirmware**"
msgstr ""
"**3.2 Exemple d'implémentation d'updateFirmware**"

#: ../java/java_deviceManagement.rst:456
msgid "The implementation must add logic to install the downloaded firmware and report the status of the update via DeviceFirmware object. If the Firmware Update operation is successful, then the state of the firmware should to be set to IDLE and UpdateStatus should be set to SUCCESS."
msgstr ""
"L'implémentation doit ajouter une logique permettant d'installer le microprogramme téléchargé et de signaler le statut de mise à jour via l'objet DeviceFirmware. Si l'opération de mise à jour du microprogramme aboutit, l'état du microprogramme doit correspondre à IDLE et UpdateStatus doit correspondre à SUCCESS."

#: ../java/java_deviceManagement.rst:458
msgid "If an error occurs during Firmware Update, updateStatus should be set to one of the error status values:"
msgstr ""
"Si une erreur se produit lors de la mise à jour du microprogramme, updateStatus doit correspondre à l'une valeurs de statut d'erreur suivantes :"

#: ../java/java_deviceManagement.rst:461
msgid "UNSUPPORTED_IMAGE"
msgstr ""
"UNSUPPORTED_IMAGE"

#: ../java/java_deviceManagement.rst:463
msgid "A sample Firmware Update implementation for a Raspberry Pi device is shown below:"
msgstr ""
"Un exemple d'implémentation de la mise à jour du microprogramme du terminal Raspberry Pi est présenté ci-dessous :"

#: ../java/java_deviceManagement.rst:498
msgid "**4. Add the handler to ManagedDevice**"
msgstr ""
"**4. Ajouter le gestionnaire à ManagedDevice**"

#: ../java/java_deviceManagement.rst:500
msgid "The created handler needs to be added to the ManagedDevice instance so that the ibmiotf client library invokes the corresponding method when there is a Firmware action request from Internet of Things Foundation Connect."
msgstr ""
"Le gestionnaire créé doit être ajouté à l'instance ManagedDevice pour que le bibliothèque client ibmiotf appelle la méthode correspondante lorsqu'il y a une demande d'action sur le microprogramme d'Internet of Things Foundation Connect."

#: ../java/java_deviceManagement.rst:507
msgid "Refer to `this page <../device_mgmt/operations/firmware_actions.html>`__ for more information about the Firmware action."
msgstr ""
"Pour plus d'informations sur l'action du microprogramme, reportez-vous à cette `page <../device_mgmt/operations/firmware_actions.html>`__."

#: ../java/java_deviceManagement.rst:510
msgid "Device Actions"
msgstr ""
"Actions sur les terminaux"

#: ../java/java_deviceManagement.rst:511
msgid "The Internet of Things Foundation Connect supports the following device actions:"
msgstr ""
"Internet of Things Foundation Connect prend en charge les actions suivantes sur les terminaux :"

#: ../java/java_deviceManagement.rst:513
msgid "Reboot"
msgstr ""
"Réamorcer"

#: ../java/java_deviceManagement.rst:514
msgid "Factory Reset"
msgstr ""
"Réinitialiser avec les paramètres d'usine"

#: ../java/java_deviceManagement.rst:516
msgid "The device needs to do the following activities to support Device Actions:"
msgstr ""
"Le terminal doit effectuer les opérations suivantes pour prendre en charge les actions sur les terminaux :"

#: ../java/java_deviceManagement.rst:518
msgid "**1. Inform server about the Device Actions support**"
msgstr ""
"**1. Signaler au serveur la prise en charge des actions sur les terminaux**"

#: ../java/java_deviceManagement.rst:520
msgid "In order to perform Reboot and Factory Reset, the device needs to inform the Internet of Things Foundation Connect about its support first. This can achieved by invoking a following method with a boolean value:"
msgstr ""
"Pour effectuer les actions Réamorcer et Réinitialiser avec les paramètres d'usine, le terminal doit d'abord signaler à Internet of Things Foundation Connect la prise en charge de ces actions. Cette opération peut être effectuée en appelant la méthode suivante avec une valeur booléenne :"

#: ../java/java_deviceManagement.rst:527
msgid "As the manage request informs the Internet of Things Foundation Connect about the device action support, manage() method needs to be called right after setting the device action support."
msgstr ""
"Comme la demande de gestion signale à Internet of Things Foundation Connect la prise en charge de l'action sur le terminal, la méthode manage() doit être appelée juste après la définition de la prise en charge de l'action sur les terminaux."

#: ../java/java_deviceManagement.rst:529
msgid "**2. Create the Device Action Handler**"
msgstr ""
"**2. Créer le gestionnaire d'actions sur les terminaux**"

#: ../java/java_deviceManagement.rst:531
msgid "In order to support the device action, the device needs to create a handler and add it to ManagedDevice. The handler must extend a DeviceActionHandler class and provide implementation for the following methods:"
msgstr ""
"Pour prendre en charge l'action sur les terminaux, le terminal doit créer un gestionnaire et l'ajouter à ManagedDevice. Le gestionnaire doit étendre une classe DeviceActionHandler et implémenter les méthodes suivantes :"

#: ../java/java_deviceManagement.rst:538
msgid "**2.1 Sample implementation of handleReboot**"
msgstr ""
"**2.1 Exemple d'implémentation de handleReboot**"

#: ../java/java_deviceManagement.rst:540
msgid "The implementation must add a logic to reboot the device and report the status of the reboot via DeviceAction object. The device needs to update the status along with a optional message only when there is a failure (because the successful operation reboots the device and the device code will not have a control to update the Internet of Things Foundation Connect). A sample reboot implementation for a Raspberry Pi device is shown below:"
msgstr ""
"L'implémentation doit ajouter une logique permettant de réinitialiser le terminal et signaler le statut du réamorçage via l'objet DeviceAction. Le terminal doit mettre à jour le statut et envoyer un message facultatif uniquement en cas d'échec. (En effet, la réussite de l'opération réamorce le terminal et le code du terminal n'a pas de contrôle pour mettre à jour le statut Internet of Things Foundation Connect). Un exemple d'implémentation du réamorçage pour le terminal Raspberry Pi est présenté ci-dessous :"

#: ../java/java_deviceManagement.rst:563
msgid "The complete code can be found in the device management sample `DeviceActionHandlerSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/DeviceActionHandlerSample.java>`__."
msgstr ""
"Le code complet est disponible dans l'exemple de gestion des terminaux `DeviceActionHandlerSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/DeviceActionHandlerSample.java>`__."

#: ../java/java_deviceManagement.rst:565
msgid "**2.2 Sample implementation of handleFactoryReset**"
msgstr ""
"**2.2 Exemple d'implémentation de handleFactoryReset**"

#: ../java/java_deviceManagement.rst:567
msgid "The implementation must add a logic to reset the device to factory settings and report the status via DeviceAction object. The device needs to update the status along with a optional message only when there is a failure (because as part of this process, the device reboots and the device will not have a control to update status to Internet of Things Foundation Connect). The skeleton of the Factory Reset implementation is shown below:"
msgstr ""
"L'implémentation doit ajouter une logique permettant de réinitialiser le terminal avec les paramètres d'usine et signaler le statut via l'objet DeviceAction. Le terminal doit mettre à jour le statut et envoyer un message facultatif en cas d'échec. (En effet, dans le cadre du processus, le terminal est réamorcé et n'a pas de contrôle pour mettre à jour le statut à Internet of Things Foundation Connect.) Le squelette de l'implémentation Réinitialiser avec les paramètres d'usine est affiché ci-dessous :"

#: ../java/java_deviceManagement.rst:582
msgid "**3. Add the handler to ManagedDevice**"
msgstr ""
"**3. Ajouter le gestionnaire à ManagedDevice**"

#: ../java/java_deviceManagement.rst:584
msgid "The created handler needs to be added to the ManagedDevice instance so that the ibmiotf client library invokes the corresponding method when there is a device action request from Internet of Things Foundation Connect."
msgstr ""
"Le gestionnaire créé doit être ajouté à l'instance ManagedDevice afin que la bibliothèque client ibmiotf appelle la méthode correspondante lorsqu'une demande d'action sur le terminal est émise par Internet of Things Foundation Connect."

#: ../java/java_deviceManagement.rst:591
msgid "Refer to `this page <../device_mgmt/operations/device_actions.html>`__ for more information about the Device Action."
msgstr ""
"Pour plus d'informations sur l'action sur les terminaux, reportez-vous à cette `page <../device_mgmt/operations/device_actions.html>`__."

#: ../java/java_deviceManagement.rst:594
msgid "Listen for Device attribute changes"
msgstr ""
"Ecouter les modifications de l'attribut Device"

#: ../java/java_deviceManagement.rst:596
msgid "This ibmiotf client library updates the corresponding objects whenever there is an update request from the Internet of Things Foundation Connect, these update requests are initiated by the application either directly or indirectly (Firmware Update) via the Internet of Things Foundation Connect ReST API. Apart from updating these attributes, the library provides a mechanism where the device can be notified whenever a device attribute is updated."
msgstr ""
"Cette bibliothèque client ibmiotf met à jour les objets correspondants lorsqu'il y a une demande de mise à jour d'Internet of Things Foundation Connect. Ces demandes de mise à jour sont lancées par l'application directement ou indirectement (Mettre à jour le microprogramme) via l'API REST d'Internet of Things Foundation Connect. Outre la mise à jour de ces attributs, la bibliothèque fournit un mécanisme qui permet de notifier le terminal lorsqu'un de ses attributs est mis à jour."

#: ../java/java_deviceManagement.rst:598
msgid "Attributes that can be updated by this operation are location, metadata, device information and firmware."
msgstr ""
"Les attributs qui peuvent être mis à jour par cette opération sont l'emplacement, les métadonnées, les informations et le microprogramme du terminal."

#: ../java/java_deviceManagement.rst:600
msgid "In order to get notified, the device needs to add a property change listener on those objects that it is interested."
msgstr ""
"Pour recevoir une notification, le terminal doit ajouter un code d'écoute des modifications de propriétés sur les objets qui l'intéressent."

#: ../java/java_deviceManagement.rst:609
msgid "Also, the device needs to implement the propertyChange() method where it receives the notification. A sample implementation is as follows:"
msgstr ""
"Le terminal doit également implémenter la méthode propertyChange() à l'endroit où il reçoit la notification. Un exemple d'implémentation est présenté ci-dessous :"

#: ../java/java_deviceManagement.rst:642
msgid "Refer to `this page <../device_mgmt/operations/update.html>`__ for more information about updating the device attributes."
msgstr ""
"Pour plus d'informations sur la mise à jour des attributs de terminaux, reportez-vous à cette `page <../device_mgmt/operations/update.html>`__."

#: ../java/java_deviceManagement.rst:645
msgid "Examples"
msgstr ""
"Exemples"

#: ../java/java_deviceManagement.rst:646
msgid "`SampleRasPiDMAgent <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/SampleRasPiDMAgent.java>`__ - A sample agent code that shows how to perform various device management operations on Raspberry Pi."
msgstr ""
"`SampleRasPiDMAgent <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/SampleRasPiDMAgent.java>`__ - Exemple de code d'agent indiquant comment effectuer différentes opérations de gestion sur le terminal Raspberry Pi."

#: ../java/java_deviceManagement.rst:647
msgid "`SampleRasPiManagedDevice <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/SampleRasPiManagedDevice.java>`__ - A sample code that shows how one can perform both device operations and management operations."
msgstr ""
"`SampleRasPiManagedDevice <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/SampleRasPiManagedDevice.java>`__ - Exemple de code indiquant comment effectuer des opérations liées aux terminaux et des opérations de gestion."

#: ../java/java_deviceManagement.rst:648
msgid "`SampleRasPiDMAgentWithCustomMqttAsyncClient <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/SampleRasPiDMAgentWithCustomMqttAsyncClient.java>`__ - A sample agent code with custom MqttAsyncClient."
msgstr ""
"`SampleRasPiDMAgentWithCustomMqttAsyncClient <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/SampleRasPiDMAgentWithCustomMqttAsyncClient.java>`__ - Exemple de code d'agent avec code MqttAsyncClient personnalisé."

#: ../java/java_deviceManagement.rst:649
msgid "`SampleRasPiDMAgentWithCustomMqttClient <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/SampleRasPiDMAgentWithCustomMqttClient.java>`__ - A sample agent code with custom MqttClient."
msgstr ""
"`SampleRasPiDMAgentWithCustomMqttClient <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/SampleRasPiDMAgentWithCustomMqttClient.java>`__ - Exemple de code d'agent avec code MqttClient personnalisé."

#: ../java/java_deviceManagement.rst:650
msgid "`RasPiFirmwareHandlerSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/RasPiFirmwareHandlerSample.java>`__ - A sample implementation of FirmwareHandler for Raspberry Pi."
msgstr ""
"`RasPiFirmwareHandlerSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/RasPiFirmwareHandlerSample.java>`__ - Exemple d'implémentation de FirmwareHandler pour le terminal Raspberry Pi."

#: ../java/java_deviceManagement.rst:651
msgid "`DeviceActionHandlerSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/DeviceActionHandlerSample.java>`__ - A sample implementation of DeviceActionHandler"
msgstr ""
"`DeviceActionHandlerSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/DeviceActionHandlerSample.java>`__ - Exemple d'implémentation de DeviceActionHandler"

#: ../java/java_deviceManagement.rst:652
msgid "`ManagedDeviceWithLifetimeSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/ManagedDeviceWithLifetimeSample.java>`__ - A sample that shows how to send regular manage request with lifetime specified."
msgstr ""
"`ManagedDeviceWithLifetimeSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/ManagedDeviceWithLifetimeSample.java>`__ - Exemple qui indique comment envoyer une demande de gestion standard avec une durée de vie définie."

#: ../java/java_deviceManagement.rst:653
msgid "`DeviceAttributesUpdateListenerSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/DeviceAttributesUpdateListenerSample.java>`__ - A sample listener code that shows how to listen for a various device attribute changes ."
msgstr ""
"`DeviceAttributesUpdateListenerSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/DeviceAttributesUpdateListenerSample.java>`__ - Exemple de code d'écoute qui indique comment détecter différentes modifications apportées à des attributs de terminal."

#: ../java/java_deviceManagement.rst:654
msgid "`NonBlockingDiagnosticsErrorCodeUpdateSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/NonBlockingDiagnosticsErrorCodeUpdateSample.java>`__ - A sample that shows how to add ErrorCode without waiting for response from the server."
msgstr ""
"`NonBlockingDiagnosticsErrorCodeUpdateSample <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdevicemanagement/src/com/ibm/iotf/sample/devicemgmt/device/NonBlockingDiagnosticsErrorCodeUpdateSample.java>`__ - Exemple indiquant comment ajouter un code d'erreur sans attendre la réponse du serveur."

#: ../java/java_deviceManagement.rst:657
msgid "Recipe"
msgstr ""
"Recette"

#: ../java/java_deviceManagement.rst:659
msgid "Refer to `the recipe <https://developer.ibm.com/recipes/tutorials/connect-raspberry-pi-as-managed-device-to-ibm-iot-foundation/>`__ that shows how to connect the Raspberry Pi device as managed device to Internet of Things Foundation Connect to perform various device management operations in step by step using this client library."
msgstr ""
"Reportez-vous à la `recette <https://developer.ibm.com/recipes/tutorials/connect-raspberry-pi-as-managed-device-to-ibm-iot-foundation/>`__ qui explique comment connecter le terminal Raspberry Pi en tant que terminal géré à Internet of Things Foundation Connect pour effectuer différentes opérations de gestion des terminaux à l'aide de cette bibliothèque client."

