# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-16 16:10-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/devices/libraries/nodejs.rst:2
msgid "Node.js for Device Developers"
msgstr ""
"Node.js pour les développeurs de terminaux"

#: ../docs/devices/libraries/nodejs.rst:4
msgid "See `iot-nodejs <https://github.com/ibm-messaging/iot-nodejs>`_ in GitHub"
msgstr ""
"Voir `iot-nodejs <https://github.com/ibm-messaging/iot-nodejs>`_ dans GitHub"

#: ../docs/devices/libraries/nodejs.rst:5
msgid "See the `samples for device <https://github.com/ibm-messaging/iot-nodejs/tree/master/samples>`_ in Github"
msgstr ""
"Voir les `exemples pour le terminal <https://github.com/ibm-messaging/iot-nodejs/tree/master/samples>`_ dans Github"

#: ../docs/devices/libraries/nodejs.rst:6
msgid "See `ibmiotf <https://www.npmjs.com/package/ibmiotf>`_ on NPM"
msgstr ""
"Voir `ibmiotf <https://www.npmjs.com/package/ibmiotf>`_ dans NPM"

#: ../docs/devices/libraries/nodejs.rst:9
msgid "Constructor"
msgstr ""
"Constructeur"

#: ../docs/devices/libraries/nodejs.rst:11
msgid "The constructor builds the device client instance. It accepts a configuration json containing the following definitions:"
msgstr ""
"Le constructeur crée l'instance du client de terminal. Il accepte un objet de configuration JSON contenant les définitions suivantes :"

#: ../docs/devices/libraries/nodejs.rst:13
msgid "``org`` - Your organization ID"
msgstr ""
"``org`` - ID de votre organisation"

#: ../docs/devices/libraries/nodejs.rst:14
msgid "``type`` - The type of your device"
msgstr ""
"``type`` - Type de votre terminal"

#: ../docs/devices/libraries/nodejs.rst:15
msgid "``id`` - The ID of your device"
msgstr ""
"``id`` - ID de votre terminal"

#: ../docs/devices/libraries/nodejs.rst:16
msgid "``auth-method`` - Method of authentication (the only value currently supported is ``token``)"
msgstr ""
"``auth-method`` - Méthode d'authentification (la seule valeur actuellement admise est ``token``)"

#: ../docs/devices/libraries/nodejs.rst:17
msgid "``auth-token`` - API key token (required if auth-method is ``token``)"
msgstr ""
"``auth-token`` - Jeton de clé d'API (requis si auth-method est ``token``)"

#: ../docs/devices/libraries/nodejs.rst:19
msgid "If you want to use Quickstart, then send only the first three properties."
msgstr ""
"Si vous souhaitez utiliser Quickstart, envoyez uniquement les trois premières propriétés."

#: ../docs/devices/libraries/nodejs.rst:36
msgid "Using a configuration file"
msgstr ""
"Utilisation d'un fichier de configuration"

#: ../docs/devices/libraries/nodejs.rst:38
msgid "Instead of passing the configuration json directly, you can also use a configuration json file. Use the following code snippet:"
msgstr ""
"Au lieu de transmettre directement l'objet de configuration JSON, vous pouvez utiliser un fichier de configuration JSON. Utilisez le fragment de code suivant :"

#: ../docs/devices/libraries/nodejs.rst:46
msgid "The configuration file `device.json` must be in the format of"
msgstr ""
"Le format du fichier de configuration `device.json` doit être le suivant :"

#: ../docs/devices/libraries/nodejs.rst:59
msgid "Connecting to the IoT Platform"
msgstr ""
"Connexion à IoT Platform"

#: ../docs/devices/libraries/nodejs.rst:61
msgid "Connect to the IoT Platform by calling the *connect* function."
msgstr ""
"Connectez-vous à IoT Platform en appelant la fonction *connect*."

#: ../docs/devices/libraries/nodejs.rst:84
msgid "After the successful connection to the IoT Platform service, the device client sends a *connect* event. So all the device logic can be implemented inside this callback function."
msgstr ""
"Une fois la connexion au service IoT Platform établie, le client de terminal envoie un événement *connect*. L'ensemble de la logique peut donc être implémentée au sein de la fonction de rappel."

#: ../docs/devices/libraries/nodejs.rst:86
msgid "The Device Client automatically tries to reconnect when it loses connection. When the reconnection is successful, the client emits *reconnect* event."
msgstr ""
"Le client de terminal tente de se reconnecter automatiquement lorsqu'il perd la connexion. Une fois que la reconnexion a abouti, le client émet un événement *reconnect*."

#: ../docs/devices/libraries/nodejs.rst:89
msgid "Logging"
msgstr ""
"Journalisation"

#: ../docs/devices/libraries/nodejs.rst:91
msgid "By default, all the logs of ``warn`` are logged. If you want to enable more logs, use the *log.setLevel* function. Supported log levels - *trace, debug, info, warn, error*."
msgstr ""
"Par défaut, tous les journaux de niveau ``warn`` (avertissement) sont consignés. Pour activer d'autres journaux, utilisez la fonction *log.setLevel*. Niveaux de journalisation pris en charge : *trace, debug, info, warn, error*."

#: ../docs/devices/libraries/nodejs.rst:107
msgid "Publishing events"
msgstr ""
"Publication d'événements"

#: ../docs/devices/libraries/nodejs.rst:109
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"Les événements constituent le mécanisme par lequel les terminaux publient des données dans IoT Platform. Le terminal contrôle le contenu de l'événement et affecte un nom à chaque événement qu'il envoie."

#: ../docs/devices/libraries/nodejs.rst:111
msgid "When an event is received by the IoT Platform the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""
"Lorsqu'un événement est reçu par IoT Platform, les données d'identification de la connexion sur laquelle l'événement a été reçu sont utilisées pour identifier le terminal à partir duquel l'événement a été envoyé. Avec cette architecture, il est impossible pour un terminal de simuler les droits d'accès d'un autre terminal."

#: ../docs/devices/libraries/nodejs.rst:113
msgid "Events can be published at any of the three quality of service levels defined by the MQTT protocol. By default events will be published as QoS level 0. Please not that if you are using the Internet of Things Quickstart service, events can only be published at QoS level 0."
msgstr ""
"Les événements peuvent être publiés avec l'un des trois niveaux de qualité de service définis par le protocole MQTT. Par défaut, les événements sont publiés avec le niveau de qualité de service 0. Si vous utilisez le service Quickstart de l'Internet des objets, les événements ne peuvent être publiés qu'avec le niveau de qualité de service 0."

#: ../docs/devices/libraries/nodejs.rst:115
msgid "Events can be published by using:"
msgstr ""
"Vous pouvez publier des événements en utilisant :"

#: ../docs/devices/libraries/nodejs.rst:118
msgid "eventType - Type of event to be published e.g status, gps."
msgstr ""
"eventType - type d'événement à publier, par exemple status, gps."

#: ../docs/devices/libraries/nodejs.rst:119
msgid "eventFormat - Format of the event e.g json."
msgstr ""
"eventFormat - format de l'événement, par exemple json."

#: ../docs/devices/libraries/nodejs.rst:120
msgid "data - Payload of the event.(Must be buffer/String)"
msgstr ""
"data - contenu de l'événement (doit être un tampon/une chaîne)"

#: ../docs/devices/libraries/nodejs.rst:121
msgid "QoS - MQTT quality of service for the publish event. Supported values : 0,1,2."
msgstr ""
"QoS - qualité de service MQTT de l'événement de publication. Valeurs admises : 0,1,2."

#: ../docs/devices/libraries/nodejs.rst:139
msgid "Handling commands"
msgstr ""
"Traitement des commandes"

#: ../docs/devices/libraries/nodejs.rst:141
msgid "When the device client connects, it automatically subscribes to any command for this device. To process specific commands you need to register a command callback function. The device client sends *command* when a command is received. The callback function has the following properties."
msgstr ""
"Lorsque le client du terminal se connecte, il s'abonne automatiquement aux commandes de ce terminal. Pour traiter des commandes spécifiques, vous devez enregistrer une méthode de rappel de commande. Le client de terminal envoie *command* lors de la réception d'une commande. La fonction de rappel possède les propriétés suivantes :"

#: ../docs/devices/libraries/nodejs.rst:143
msgid "commandName - name of the command invoked"
msgstr ""
"commandName - Nom de la commande appelée"

#: ../docs/devices/libraries/nodejs.rst:144
msgid "format - e.g json, xml"
msgstr ""
"format - Par exemple json, xml"

#: ../docs/devices/libraries/nodejs.rst:145
msgid "payload - payload for the command"
msgstr ""
"payload - Contenu de la commande"

#: ../docs/devices/libraries/nodejs.rst:146
msgid "topic - actual topic where the command was received"
msgstr ""
"topic - Sujet réel qui a reçu la commande"

#: ../docs/devices/libraries/nodejs.rst:171
msgid "Handling errors"
msgstr ""
"Traitement des erreurs"

#: ../docs/devices/libraries/nodejs.rst:173
msgid "When the device clients encounters an error, it emits an *error* event."
msgstr ""
"Lorsque les clients de terminal rencontrent une erreur, ils émettent un événement *error*."

#: ../docs/devices/libraries/nodejs.rst:194
msgid "Disconnect Client"
msgstr ""
"Déconnexion du client"

#: ../docs/devices/libraries/nodejs.rst:196
msgid "Disconnects the client and releases the connections"
msgstr ""
"Déconnecte le client et libère les connexions"

