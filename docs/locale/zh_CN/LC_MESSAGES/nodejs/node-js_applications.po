# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-19 15:21+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\docs\nodejs\node-js_applications.rst:2
msgid "Node.js Client Library - Applications"
msgstr ""
"Node.js 客户机库 - 应用程序"

#: ..\docs\nodejs\node-js_applications.rst:4
msgid "The node.js client is used for simplifying the interacting with the Internet of Things Foundation. This client library contains instruction and guidance on using node.js with Internet of Things Foundation to interact with you devices and applications."
msgstr ""
"node.js 客户机用于简化与 Internet of Things Foundation 的交互。该客户机库包含有关如何使用 node.js 和 Internet of Things Foundation 来与设备和应用程序进行交互的指示信息和指导内容。"

#: ..\docs\nodejs\node-js_applications.rst:6
msgid "This client library is divided into two parts, Devices and Applications. The Devices section contains information on how devices publish events and handle commands using the node.js Internet of Things Foundation module, and the Applications section contains information on how applications can use the nodejs ibmiotf module to interact with devices."
msgstr ""
"此客户机库分为以下两个部分：设备和应用程序。“设备”部分包含有关设备如何使用 node.js Internet of Things Foundation 模块发布事件和处理命令的信息；“应用程序”部分包含有关应用程序如何使用 nodejs ibmiotf 模块来与设备进行交互的信息。"

#: ..\docs\nodejs\node-js_applications.rst:8
msgid "*IotfApplication* is the application client for the Internet of Things Foundation service. This section contains information on how applications interact with devices."
msgstr ""
"*IotfApplication* 是 Internet of Things Foundation 服务的应用程序客户机。此部分包含有关应用程序如何来与设备进行交互的信息。"

#: ..\docs\nodejs\node-js_applications.rst:11
msgid "Constructor"
msgstr ""
"构造方法"

#: ..\docs\nodejs\node-js_applications.rst:13
msgid "The constructor builds the application client instance. It accepts an configuration json containing the following : - org - Your organization ID - id - The unique ID of your application within your organization. - auth-key - API key - auth-token - API key token"
msgstr ""
"此构造方法用于构建应用程序客户机实例。此构造方法接受包含以下内容的配置 json：- org - 贵组织的标识 - id - 应用程序在贵组织内的唯一标识。- auth-key - API 密钥 - auth-token - API 密钥令牌"

#: ..\docs\nodejs\node-js_applications.rst:19
msgid "If you want to use quickstart, then send only the first two properties."
msgstr ""
"如果想要使用 Quickstart，只需发送前两个属性。"

#: ..\docs\nodejs\node-js_applications.rst:34
msgid "Using a configuration file"
msgstr ""
"使用配置文件"

#: ..\docs\nodejs\node-js_applications.rst:36
msgid "Instead of passing the configuration json directly, you can also use a configuration file. Use the following code snippet"
msgstr ""
"除了直接传递配置 json 之外，您还可以使用配置文件。请使用以下代码片段："

#: ..\docs\nodejs\node-js_applications.rst:45
msgid "The configuration file must be in the format of"
msgstr ""
"配置文件必须为以下格式"

#: ..\docs\nodejs\node-js_applications.rst:55
msgid "Connecting to the Internet of Things Foundation"
msgstr ""
"连接到 Internet of Things Foundation"

#: ..\docs\nodejs\node-js_applications.rst:57
msgid "Connect to the Internet of Things Foundation by calling the *connect* function."
msgstr ""
"通过调用 *connect* 函数来连接到 Internet of Things Foundation。"

#: ..\docs\nodejs\node-js_applications.rst:73
msgid "After the successful connection to the IoTF service, the application client sends a *connect* event. So all the logic can be implemented inside this callback function."
msgstr ""
"成功连接到 IoTF 服务后，应用程序客户机将发送 *connect* 事件。因此，可以在此回调函数内实现所有逻辑。"

#: ..\docs\nodejs\node-js_applications.rst:76
msgid "Subscribing to device events"
msgstr ""
"预订设备事件"

#: ..\docs\nodejs\node-js_applications.rst:78
msgid "Events are the mechanism by which devices publish data to the Internet of Things Foundation. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"事件是设备用于将数据发布到 Internet of Things Foundation 的机制。设备控制事件的内容，并为其发送的每个事件分配名称。"

#: ..\docs\nodejs\node-js_applications.rst:80
msgid "When an event is received by the Internet of Things Foundation, the credentials of the connection on which the event was received are used to determine from which device the event was sent. Using this architecture, it is impossible for a device to impersonate another device."
msgstr ""
"Internet of Things Foundation 接收到事件时，将使用用于接收该事件的连接的凭证来确定是从哪个设备发出了该事件。由于使用这种体系结构，设备将无法模拟其他设备。"

#: ..\docs\nodejs\node-js_applications.rst:82
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""
"缺省情况下，应用程序将预订来自所有已连接设备的所有事件。使用 type、id、event 和 msgFormat 参数来控制预订的作用域。单个客户机可支持多个预订。以下代码样本提供了示例，说明如何预订取决于设备的 type、id、event 和 msgFormat 参数的设备。"

#: ..\docs\nodejs\node-js_applications.rst:85
msgid "To subscribe to all events from all devices"
msgstr ""
"预订来自所有设备的所有事件"

#: ..\docs\nodejs\node-js_applications.rst:103
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""
"预订来自特定类型的所有设备的所有事件"

#: ..\docs\nodejs\node-js_applications.rst:120
msgid "To subscribe to a specific event from all devices"
msgstr ""
"预订来自所有设备的特定事件"

#: ..\docs\nodejs\node-js_applications.rst:138
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""
"预订来自两个或更多不同设备的特定事件"

#: ..\docs\nodejs\node-js_applications.rst:156
msgid "To subscribe to all events published by a device in json format"
msgstr ""
"预订设备发布的 json 格式的所有事件"

#: ..\docs\nodejs\node-js_applications.rst:175
msgid "Handling events from devices"
msgstr ""
"处理来自设备的事件"

#: ..\docs\nodejs\node-js_applications.rst:177
msgid "To process the events received by your subscriptions you need to implement a device event callback method. The ibmiotf application client emits the event *deviceEvent*. This function has the following properties:"
msgstr ""
"要处理您的预订接收的事件，需要实现设备事件回调方法。ibmiotf 应用程序客户机将发出事件 *deviceEvent*。此函数具有以下属性："

#: ..\docs\nodejs\node-js_applications.rst:179
#: ..\docs\nodejs\node-js_applications.rst:273
msgid "deviceType"
msgstr ""
"deviceType"

#: ..\docs\nodejs\node-js_applications.rst:180
#: ..\docs\nodejs\node-js_applications.rst:274
msgid "deviceId"
msgstr ""
"deviceId"

#: ..\docs\nodejs\node-js_applications.rst:181
msgid "eventType"
msgstr ""
"eventType"

#: ..\docs\nodejs\node-js_applications.rst:182
msgid "format"
msgstr ""
"format"

#: ..\docs\nodejs\node-js_applications.rst:183
msgid "payload - Device event payload"
msgstr ""
"payload - 设备事件有效内容"

#: ..\docs\nodejs\node-js_applications.rst:184
msgid "topic - Original topic"
msgstr ""
"topic - 原始主题"

#: ..\docs\nodejs\node-js_applications.rst:208
msgid "Subscribing to device status"
msgstr ""
"预订设备状态"

#: ..\docs\nodejs\node-js_applications.rst:210
msgid "By default, this will subscribe to status updates for all connected devices. Use the type and id parameters to control the scope of the subscription. A single client can support multiple subscriptions."
msgstr ""
"缺省情况下，这将预订所有已连接设备的状态更新。使用 type 和 id 参数来控制预订的作用域。单个客户机可支持多个预订。"

#: ..\docs\nodejs\node-js_applications.rst:213
msgid "Subscribe to status updates for all devices"
msgstr ""
"预订所有设备的状态更新"

#: ..\docs\nodejs\node-js_applications.rst:232
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""
"预订特定类型的所有设备的状态更新"

#: ..\docs\nodejs\node-js_applications.rst:250
msgid "Subscribe to status updates for two different devices"
msgstr ""
"预订两种不同设备的状态更新"

#: ..\docs\nodejs\node-js_applications.rst:269
msgid "Handling status updates from devices"
msgstr ""
"处理来自设备的状态更新"

#: ..\docs\nodejs\node-js_applications.rst:271
msgid "To process the status updates received by your subscriptions you need to implement an device status callback method. The ibmiotf application client emits the event *deviceStatus*. This function has the following properties:"
msgstr ""
"要处理您的预订接收的状态更新，需要实现设备状态回调方法。ibmiotf 应用程序客户机将发出事件 *deviceStatus*。此函数具有以下属性："

#: ..\docs\nodejs\node-js_applications.rst:275
msgid "payload - Device status payload"
msgstr ""
"payload - 设备状态有效内容"

#: ..\docs\nodejs\node-js_applications.rst:276
msgid "topic"
msgstr ""
"topic"

#: ..\docs\nodejs\node-js_applications.rst:300
msgid "Publishing events from devices"
msgstr ""
"发布来自设备的事件"

#: ..\docs\nodejs\node-js_applications.rst:302
msgid "Applications can publish events as if they originated from a Device. The function requires:"
msgstr ""
"应用程序可以将事件视为来自设备一样进行发布。此函数需要以下属性："

#: ..\docs\nodejs\node-js_applications.rst:304
#: ..\docs\nodejs\node-js_applications.rst:331
msgid "DeviceType"
msgstr ""
"DeviceType"

#: ..\docs\nodejs\node-js_applications.rst:305
#: ..\docs\nodejs\node-js_applications.rst:332
msgid "Device ID"
msgstr ""
"DeviceID"

#: ..\docs\nodejs\node-js_applications.rst:306
msgid "Event Type"
msgstr ""
"EventType"

#: ..\docs\nodejs\node-js_applications.rst:307
#: ..\docs\nodejs\node-js_applications.rst:334
msgid "Format"
msgstr ""
"Format"

#: ..\docs\nodejs\node-js_applications.rst:308
#: ..\docs\nodejs\node-js_applications.rst:335
msgid "Data"
msgstr ""
"Data"

#: ..\docs\nodejs\node-js_applications.rst:327
msgid "Publishing commands to devices"
msgstr ""
"将命令发布到设备"

#: ..\docs\nodejs\node-js_applications.rst:329
msgid "Applications can publish commands to connected devices. The function requires:"
msgstr ""
"应用程序可将命令发布到所连接的设备。此函数需要以下属性："

#: ..\docs\nodejs\node-js_applications.rst:333
msgid "Command Type"
msgstr ""
"命令类型"

#: ..\docs\nodejs\node-js_applications.rst:354
msgid "Disconnect Client"
msgstr ""
"断开客户机连接"

#: ..\docs\nodejs\node-js_applications.rst:356
msgid "Disconnects the client and releases the connections"
msgstr ""
"断开与客户机的连接并释放连接"

#: ..\docs\nodejs\node-js_applications.rst:376
msgid "Check Connection Status"
msgstr ""
"检查连接状态"

#: ..\docs\nodejs\node-js_applications.rst:378
msgid "*isConnected* gives the current status of the application client connection"
msgstr ""
"*isConnected* 提供了应用程序客户机连接的当前状态"

