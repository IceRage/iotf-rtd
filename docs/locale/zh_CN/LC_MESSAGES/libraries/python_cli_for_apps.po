# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-17 09:49-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../libraries/python_cli_for_apps.rst:3
msgid "Python Client Library - Applications"
msgstr ""
"Python 客户机库 - 应用程序"

#: ../libraries/python_cli_for_apps.rst:6
msgid "Introduction"
msgstr ""
"简介"

#: ../libraries/python_cli_for_apps.rst:8
msgid "This client library describes how to use applications with the python ibmiotf module. For help with getting started with this module, see `Python Client Library - Introduction <../libraries/python.html#/>`__."
msgstr ""
"此客户机库描述如何将应用程序与 python ibmiotf 模块配合使用。有关此模块的入门帮助，请参阅 `Python 客户机库 - 简介 <../libraries/python.html#/>`__。"

#: ../libraries/python_cli_for_apps.rst:10
msgid "This client library is divided into two sections, both included within the library. This section contains information on how applications interact with devices using the Python ibmiotf module, and the Devices section contains information on how devices can use the ibmiotf module publish events and handle commands."
msgstr ""
"此客户机库分为两部分（均包含在该库中）。此部分包含有关应用程序如何使用 Python ibmiotf 模块与设备进行交互的信息；“设备”部分包含有关设备如何使用 ibmiotf 模块来发布事件和处理命令的信息。"

#: ../libraries/python_cli_for_apps.rst:13
msgid "Constructor"
msgstr ""
"构造方法"

#: ../libraries/python_cli_for_apps.rst:15
msgid "The constructor builds the client instance, and accepts an options dict containing the following definitions:"
msgstr ""
"此构造方法用于构建客户机实例，并接受包含以下定义的选项字典："

#: ../libraries/python_cli_for_apps.rst:17
msgid "org - Your organization ID."
msgstr ""
"org - 贵组织的标识。"

#: ../libraries/python_cli_for_apps.rst:18
msgid "id - The unique ID of your application within your organization."
msgstr ""
"id - 贵组织内应用程序的唯一标识。"

#: ../libraries/python_cli_for_apps.rst:19
msgid "auth-method - Method of authentication (the only value currently supported is \"apikey\")."
msgstr ""
"auth-method - 认证方法（当前唯一支持的值为“apikey”）。"

#: ../libraries/python_cli_for_apps.rst:20
msgid "auth-key - API key (required if auth-method is \"apikey\")."
msgstr ""
"auth-key - API 密钥（如果 auth-method 为“apikey”，那么此项为必需）。"

#: ../libraries/python_cli_for_apps.rst:21
msgid "auth-token - API key token (required if auth-method is \"apikey\")."
msgstr ""
"auth-token - API 密钥令牌（如果 auth-method 为“apikey”，那么此项为必需）。"

#: ../libraries/python_cli_for_apps.rst:23
msgid "If no options dict is provided, the client will connect to the Internet of Things Foundation Quickstart, and default to an unregistered device. The options dict creates definitions which are used to interact with the Internet of Things Foundation module."
msgstr ""
"如果未提供选项字典，那么客户机将连接到 Internet of Things Foundation Quickstart，并缺省为未注册设备。选项字典创建用于与 Internet of Things Foundation 模块进行交互的定义。"

#: ../libraries/python_cli_for_apps.rst:42
msgid "Using a configuration file"
msgstr ""
"使用配置文件"

#: ../libraries/python_cli_for_apps.rst:44
msgid "If you are not using an options dict as shown above, you include a configuration file containing an options dict. If you are using a configuration file containing an options dict, use the following code format."
msgstr ""
"如果未使用以上显示的选项字典，那么可包含带有选项字典的配置文件。如果使用的配置文件包含选项字典，请使用以下代码格式。"

#: ../libraries/python_cli_for_apps.rst:55
msgid "The application configuration file must be in the following format:"
msgstr ""
"应用程序配置文件必须为以下格式："

#: ../libraries/python_cli_for_apps.rst:71
msgid "Subscribing to device events"
msgstr ""
"预订设备事件"

#: ../libraries/python_cli_for_apps.rst:72
msgid "Events are the mechanism by which devices publish data to the Internet of Things Foundation. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"事件是设备用于将数据发布到 Internet of Things Foundation 的机制。设备控制事件的内容，并为其发送的每个事件分配名称。"

#: ../libraries/python_cli_for_apps.rst:74
msgid "When an event is received by the IoT Foundation the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""
"IoT Foundation 接收到事件时，将使用用于接收该事件的连接的凭证来确定是从哪个设备发送了该事件。由于使用这种体系结构，设备将无法模拟其他设备。"

#: ../libraries/python_cli_for_apps.rst:76
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""
"缺省情况下，应用程序将预订来自所有已连接设备的所有事件。使用 type、id、event 和 msgFormat 参数来控制预订的作用域。单个客户机可支持多个预订。以下代码样本提供了示例，说明如何预订取决于设备的 type、id、event 和 msgFormat 参数的设备。"

#: ../libraries/python_cli_for_apps.rst:80
msgid "To subscribe to all events from all devices"
msgstr ""
"预订来自所有设备的所有事件"

#: ../libraries/python_cli_for_apps.rst:89
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""
"预订来自特定类型的所有设备的所有事件"

#: ../libraries/python_cli_for_apps.rst:98
msgid "To subscribe to a specific event from all devices"
msgstr ""
"预订来自所有设备的特定事件"

#: ../libraries/python_cli_for_apps.rst:107
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""
"预订来自两个或更多不同设备的特定事件"

#: ../libraries/python_cli_for_apps.rst:117
msgid "To subscribe to all events published by a device in json format"
msgstr ""
"预订设备发布的 json 格式的所有事件"

#: ../libraries/python_cli_for_apps.rst:128
msgid "Handling events from devices"
msgstr ""
"处理来自设备的事件"

#: ../libraries/python_cli_for_apps.rst:129
msgid "To process the events received by your subscriptions you need to register an event callback method. The messages are returned as an instance of the Event class:"
msgstr ""
"要处理您的预订接收的事件，需要注册事件回调方法。消息将作为 Event 类的实例返回："

#: ../libraries/python_cli_for_apps.rst:131
msgid "event.device - string (uniquely identifies the device across all types of devices in the organization)"
msgstr ""
"event.device - 字符串（在组织内所有类型的设备中唯一标识该设备）"

#: ../libraries/python_cli_for_apps.rst:132
msgid "event.deviceType - string"
msgstr ""
"event.deviceType - 字符串"

#: ../libraries/python_cli_for_apps.rst:133
msgid "event.deviceId - string"
msgstr ""
"event.deviceId - 字符串"

#: ../libraries/python_cli_for_apps.rst:134
msgid "event.event - string"
msgstr ""
"event.event - 字符串"

#: ../libraries/python_cli_for_apps.rst:135
msgid "event.format - string"
msgstr ""
"event.format - 字符串"

#: ../libraries/python_cli_for_apps.rst:136
msgid "event.data - dict"
msgstr ""
"event.data - 字典"

#: ../libraries/python_cli_for_apps.rst:137
msgid "event.timestamp - datetime"
msgstr ""
"event.timestamp - 日期时间"

#: ../libraries/python_cli_for_apps.rst:155
msgid "Subscribing to device status"
msgstr ""
"预订设备状态"

#: ../libraries/python_cli_for_apps.rst:156
msgid "By default, this will subscribe to status updates for all connected devices. Use the type and id parameters to control the scope of the subscription. A single client can support multiple subscriptions."
msgstr ""
"缺省情况下，这将预订所有已连接设备的状态更新。使用 type 和 id 参数来控制预订的作用域。单个客户机可支持多个预订。"

#: ../libraries/python_cli_for_apps.rst:159
msgid "Subscribe to status updates for all devices"
msgstr ""
"预订所有设备的状态更新"

#: ../libraries/python_cli_for_apps.rst:168
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""
"预订特定类型的所有设备的状态更新"

#: ../libraries/python_cli_for_apps.rst:177
msgid "Subscribe to status updates for two different devices"
msgstr ""
"预订两种不同设备的状态更新"

#: ../libraries/python_cli_for_apps.rst:190
msgid "Handling status updates from devices"
msgstr ""
"处理来自设备的状态更新"

#: ../libraries/python_cli_for_apps.rst:191
msgid "To process the status updates received by your subscriptions you need to register an event callback method. The messages are returned as an instance of the Status class:"
msgstr ""
"要处理您的预订接收的状态更新，需要注册事件回调方法。消息将作为 Status 类的实例返回："

#: ../libraries/python_cli_for_apps.rst:193
msgid "The following properties are set for both \"Connect\" and \"Disconnect\" status events:"
msgstr ""
"为“连接”和“断开连接”状态事件设置了以下属性："

#: ../libraries/python_cli_for_apps.rst:195
msgid "status.clientAddr - string"
msgstr ""
"status.clientAddr - 字符串"

#: ../libraries/python_cli_for_apps.rst:196
msgid "status.protocol - string"
msgstr ""
"status.protocol - 字符串"

#: ../libraries/python_cli_for_apps.rst:197
msgid "status.clientId - string"
msgstr ""
"status.clientId - 字符串"

#: ../libraries/python_cli_for_apps.rst:198
msgid "status.user - string"
msgstr ""
"status.user - 字符串"

#: ../libraries/python_cli_for_apps.rst:199
msgid "status.time - datetime"
msgstr ""
"status.time - 日期时间"

#: ../libraries/python_cli_for_apps.rst:200
msgid "status.action - string"
msgstr ""
"status.action - 字符串"

#: ../libraries/python_cli_for_apps.rst:201
msgid "status.connectTime - datetime"
msgstr ""
"status.connectTime - 日期时间"

#: ../libraries/python_cli_for_apps.rst:202
msgid "status.port - integer"
msgstr ""
"status.port - 整数"

#: ../libraries/python_cli_for_apps.rst:204
msgid "The following properties are only set when the action is \"Disconnect\":"
msgstr ""
"仅当操作为“断开连接”时，才会设置以下属性："

#: ../libraries/python_cli_for_apps.rst:206
msgid "status.writeMsg - integer"
msgstr ""
"status.writeMsg - 整数"

#: ../libraries/python_cli_for_apps.rst:207
msgid "status.readMsg - integer"
msgstr ""
"status.readMsg - 整数"

#: ../libraries/python_cli_for_apps.rst:208
msgid "status.reason - string"
msgstr ""
"status.reason - 字符串"

#: ../libraries/python_cli_for_apps.rst:209
msgid "status.readBytes - integer"
msgstr ""
"status.readBytes - 整数"

#: ../libraries/python_cli_for_apps.rst:210
msgid "status.writeBytes - integer"
msgstr ""
"status.writeBytes - 整数"

#: ../libraries/python_cli_for_apps.rst:231
msgid "Publishing events from devices"
msgstr ""
"发布来自设备的事件"

#: ../libraries/python_cli_for_apps.rst:232
msgid "Applications can publish events as if they originated from a Device"
msgstr ""
"应用程序在发布事件时可将事件视为如同源自设备一样"

#: ../libraries/python_cli_for_apps.rst:245
msgid "Publishing commands to devices"
msgstr ""
"将命令发布到设备"

#: ../libraries/python_cli_for_apps.rst:246
msgid "Applications can publish commands to connected devices"
msgstr ""
"应用程序可将命令发布到已连接设备"

#: ../libraries/python_cli_for_apps.rst:259
msgid "Retrieve device details"
msgstr ""
"检索设备详细信息"

#: ../libraries/python_cli_for_apps.rst:262
msgid "Retrieve details of all registered devices"
msgstr ""
"检索所有已注册设备的详细信息"

#: ../libraries/python_cli_for_apps.rst:271
msgid "Retrieve details of a specific device"
msgstr ""
"检索特定设备的详细信息"

#: ../libraries/python_cli_for_apps.rst:283
msgid "Register a new device"
msgstr ""
"注册新设备"

#: ../libraries/python_cli_for_apps.rst:296
msgid "Delete a device"
msgstr ""
"删除设备"

#: ../libraries/python_cli_for_apps.rst:310
msgid "Access historical event data"
msgstr ""
"访问历史事件数据"

#: ../libraries/python_cli_for_apps.rst:313
msgid "Get historical event data for a specific device"
msgstr ""
"获取特定设备的历史事件数据"

#: ../libraries/python_cli_for_apps.rst:322
msgid "Get historical event data for all devices of a specific type"
msgstr ""
"获取特定类型的所有设备的历史事件数据"

#: ../libraries/python_cli_for_apps.rst:331
msgid "Get historical event data for all devices of all types"
msgstr ""
"获取所有类型的所有设备的历史事件数据"

