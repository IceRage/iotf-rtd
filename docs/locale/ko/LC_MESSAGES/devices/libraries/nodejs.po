# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-03-06 22:15-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/devices/libraries/nodejs.rst:2
msgid "Node.js for Device Developers"
msgstr ""
"디바이스 개발자용 Node.js"

#: ../docs/devices/libraries/nodejs.rst:4
msgid "See `iot-nodejs <https://github.com/ibm-messaging/iot-nodejs>`_ in GitHub"
msgstr ""
"GitHub에서 `iot-nodejs <https://github.com/ibm-messaging/iot-nodejs>`_ 참조"

#: ../docs/devices/libraries/nodejs.rst:5
msgid "See `ibmiotf <https://www.npmjs.com/package/ibmiotf>`_ on NPM"
msgstr ""
"NPM에서 `ibmiotf <https://www.npmjs.com/package/ibmiotf>`_ 참조"

#: ../docs/devices/libraries/nodejs.rst:8
msgid "Constructor"
msgstr ""
"생성자"

#: ../docs/devices/libraries/nodejs.rst:10
msgid "The constructor builds the device client instance. It accepts a configuration json containing the following definitions:"
msgstr ""
"생성자는 디바이스 클라이언트 인스턴스를 빌드합니다. 이는 다음 정의가 포함된 구성 json을 승인합니다."

#: ../docs/devices/libraries/nodejs.rst:12
msgid "``org`` - Your organization ID"
msgstr ""
"``org`` - 조직 ID"

#: ../docs/devices/libraries/nodejs.rst:13
msgid "``type`` - The type of your device"
msgstr ""
"``type`` - 디바이스의 유형"

#: ../docs/devices/libraries/nodejs.rst:14
msgid "``id`` - The ID of your device"
msgstr ""
"``id`` - 디바이스의 ID"

#: ../docs/devices/libraries/nodejs.rst:15
msgid "``auth-method`` - Method of authentication (the only value currently supported is ``token``)"
msgstr ""
"``auth-method`` - 인증 방법(현재 지원되는 유일한 값: ``token``)"

#: ../docs/devices/libraries/nodejs.rst:16
msgid "``auth-token`` - API key token (required if auth-method is ``token``)"
msgstr ""
"``auth-token`` - API 키 토큰(auth-method가 ``token``인 경우 필수)"

#: ../docs/devices/libraries/nodejs.rst:18
msgid "If you want to use Quickstart, then send only the first three properties."
msgstr ""
"Quickstart를 사용하려면 처음 3개의 특성만 보내십시오."

#: ../docs/devices/libraries/nodejs.rst:34
msgid "Using a configuration file"
msgstr ""
"구성 파일 사용"

#: ../docs/devices/libraries/nodejs.rst:36
msgid "Instead of passing the configuration json directly, you can also use a configuration file. Use the following code snippet:"
msgstr ""
"직접 구성 json을 전달하는 대신 구성 파일도 사용할 수 있습니다. 다음 코드 스니펫을 사용하십시오."

#: ../docs/devices/libraries/nodejs.rst:45
msgid "The configuration file must be in the format of"
msgstr ""
"구성 파일의 형식이 다음과 같아야 합니다."

#: ../docs/devices/libraries/nodejs.rst:56
msgid "Connecting to the IoT Platform"
msgstr ""
"IoT Platform에 연결"

#: ../docs/devices/libraries/nodejs.rst:58
msgid "Connect to the IoT Platform by calling the *connect* function."
msgstr ""
"*connect* 함수를 호출하여 IoT Platform에 연결하십시오. "

#: ../docs/devices/libraries/nodejs.rst:73
msgid "After the successful connection to the IoT Platform service, the device client sends a *connect* event. So all the device logic can be implemented inside this callback function."
msgstr ""
"IoT Platform 서비스에 성공적으로 연결되면 디바이스 클라이언트가 *connect* 이벤트를 전송합니다. 따라서 모든 디바이스 로직이 이 콜백 함수 내에서 구현될 수 있습니다."

#: ../docs/devices/libraries/nodejs.rst:76
msgid "Publishing events"
msgstr ""
"이벤트 공개"

#: ../docs/devices/libraries/nodejs.rst:78
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"이벤트는 디바이스가 데이터를 IoT Platform에 공개할 때 사용하는 메커니즘입니다. 디바이스는 이벤트의 컨텐츠를 제어하고 전송하는 각 이벤트에 대해 이름을 지정합니다. "

#: ../docs/devices/libraries/nodejs.rst:80
msgid "When an event is received by the IoT Platform the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""
"IoT Platform에서 이벤트를 수신하면 이벤트가 수신된 연결의 신임 정보를 사용하여 이벤트를 전송한 디바이스를 판별합니다. 이 아키텍처를 사용하면 한 디바이스가 다른 디바이스를 위장할 수 없습니다. "

#: ../docs/devices/libraries/nodejs.rst:82
msgid "Events can be published at any of the three quality of service levels defined by the MQTT protocol. By default events will be published as QoS level 0. Please not that if you are using the Internet of Things Quickstart service, events can only be published at QoS level 0."
msgstr ""
"이벤트는 MQTT 프로토콜에서 정의한 세 가지 서비스 품질(QoS) 레벨에서 공개될 수 있습니다. 기본적으로 이벤트가 QoS 레벨 0으로 공개됩니다. Internet of Things Quickstart 서비스를 사용 중인 경우 이벤트가 QoS 레벨 0에서만 공개될 수 있습니다."

#: ../docs/devices/libraries/nodejs.rst:84
msgid "Events can be published by using: -   eventType - Type of event to be published e.g status, gps. -   eventFormat - Format of the event e.g json. -   data - Payload of the event. -   QoS - MQTT quality of service for the publish event. Supported values : 0,1,2."
msgstr ""
"다음을 사용하여 이벤트를 공개할 수 있습니다. -   eventType - 공개할 이벤트의 유형(예: 상태, gps. - eventFormat - 이벤트의 형식입니다(예: json). - data - 이벤트의 페이로드. - QoS - MQTT 공개 이벤트의 서비스 품질(QoS). 지원되는 값: 0,1,2"

#: ../docs/devices/libraries/nodejs.rst:107
msgid "Handling commands"
msgstr ""
"명령 처리"

#: ../docs/devices/libraries/nodejs.rst:109
msgid "When the device client connects, it automatically subscribes to any command for this device. To process specific commands you need to register a command callback function. The device client sends *command* when a command is received. The callback function has the following properties."
msgstr ""
"디바이스 클라이언트는 연결되면 이 디바이스에 대한 명령을 자동으로 구독합니다. 특정 명령을 처리하려면 명령 콜백 함수를 등록해야 합니다. 명령이 수신되면 디바이스 클라이언트가 *command*를 보냅니다. 콜백 함수에는 다음 특성이 있습니다."

#: ../docs/devices/libraries/nodejs.rst:111
msgid "commandName - name of the command invoked"
msgstr ""
"commandName - 호출된 명령의 이름"

#: ../docs/devices/libraries/nodejs.rst:112
msgid "format - e.g json, xml"
msgstr ""
"format - 예: json, xml"

#: ../docs/devices/libraries/nodejs.rst:113
msgid "payload - payload for the command"
msgstr ""
"payload - 명령의 페이로드"

#: ../docs/devices/libraries/nodejs.rst:114
msgid "topic - actual topic where the command was received"
msgstr ""
"topic - 명령이 수신된 실제 주제"

#: ../docs/devices/libraries/nodejs.rst:140
msgid "Disconnect Client"
msgstr ""
"클라이언트 연결 끊기"

#: ../docs/devices/libraries/nodejs.rst:142
msgid "Disconnects the client and releases the connections"
msgstr ""
"클라이언트의 연결 끊기 및 연결 해제"

#: ../docs/devices/libraries/nodejs.rst:164
msgid "Check Connection Status"
msgstr ""
"연결 상태 확인"

#: ../docs/devices/libraries/nodejs.rst:166
msgid "*isConnected* gives the current status of the client connection"
msgstr ""
"*isConnected*가 클라이언트 연결의 현재 상태를 제공함"

