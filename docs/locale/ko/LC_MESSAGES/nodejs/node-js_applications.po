# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-17 09:49-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../nodejs/node-js_applications.rst:2
msgid "Node.js Client Library - Applications"
msgstr ""
"Node.js 클라이언트 라이브러리 - 애플리케이션"

#: ../nodejs/node-js_applications.rst:4
msgid "The node.js client is used for simplifying the interacting with the Internet of Things Foundation. This client library contains instruction and guidance on using node.js with Internet of Things Foundation to interact with you devices and applications."
msgstr ""
"node.js 클라이언트가 Internet of Things Foundation와의 상호작용을 단순화하는 데 사용됩니다. 이 클라이언트 라이브러리에는 디바이스 및 애플리케이션과 상호작용하는 데 Internet of Things Foundation과 함께 node.js 사용에 대한 지시사항 및 지침이 포함되어 있습니다."

#: ../nodejs/node-js_applications.rst:6
msgid "This client library is divided into two parts, Devices and Applications. The Devices section contains information on how devices publish events and handle commands using the node.js Internet of Things Foundation module, and the Applications section contains information on how applications can use the nodejs ibmiotf module to interact with devices."
msgstr ""
"이 클라이언트 라이브러리는 2개의 파트인 디바이스 및 애플리케이션으로 나뉩니다. 디바이스 절에는 디바이스가 node.js Internet of Things Foundation 모듈을 사용하여 이벤트를 공개하고 명령을 처리하는 방법에 대한 정보가 포함되어 있고, 애플리케이션 절에는 애플리케이션이 디바이스와 상호작용하는 데 nodejs ibmiotf 모듈을 사용할 수 있는 방법에 대한 정보가 포함되어 있습니다."

#: ../nodejs/node-js_applications.rst:8
msgid "*IotfApplication* is the application client for the Internet of Things Foundation service. This section contains information on how applications interact with devices."
msgstr ""
"*IotfApplication*은 Internet of Things Foundation 서비스의 애플리케이션 클라이언트입니다. 이 절은 애플리케이션이 디바이스와 상호작용하는 방법에 대한 정보를 포함합니다."

#: ../nodejs/node-js_applications.rst:11
msgid "Constructor"
msgstr ""
"생성자"

#: ../nodejs/node-js_applications.rst:13
msgid "The constructor builds the application client instance. It accepts an configuration json containing the following : - org - Your organization ID - id - The unique ID of your application within your organization. - auth-key - API key - auth-token - API key token"
msgstr ""
"생성자는 애플리케이션 클라이언트 인스턴스를 빌드합니다. 이는 다음이 포함된 구성 json을 승인합니다. - org - 조직 ID - id - 조직 내 애플리케이션의 고유한 ID입니다. - auth-key - API 키 - auth-token - API 키 토큰"

#: ../nodejs/node-js_applications.rst:19
msgid "If you want to use quickstart, then send only the first two properties."
msgstr ""
"quickstart를 사용하려면 처음 2개의 특성만 보내십시오."

#: ../nodejs/node-js_applications.rst:34
msgid "Using a configuration file"
msgstr ""
"구성 파일 사용"

#: ../nodejs/node-js_applications.rst:36
msgid "Instead of passing the configuration json directly, you can also use a configuration file. Use the following code snippet"
msgstr ""
"직접 구성 json을 전달하는 대신 구성 파일도 사용할 수 있습니다. 다음 코드 스니펫을 사용하십시오."

#: ../nodejs/node-js_applications.rst:45
msgid "The configuration file must be in the format of"
msgstr ""
"구성 파일의 형식이 다음과 같아야 합니다."

#: ../nodejs/node-js_applications.rst:55
msgid "Connecting to the Internet of Things Foundation"
msgstr ""
"Internet of Things Foundation에 연결"

#: ../nodejs/node-js_applications.rst:57
msgid "Connect to the Internet of Things Foundation by calling the *connect* function."
msgstr ""
"*connect* 함수를 호출하여 Internet of Things Foundation에 연결하십시오."

#: ../nodejs/node-js_applications.rst:73
msgid "After the successful connection to the IoTF service, the application client sends a *connect* event. So all the logic can be implemented inside this callback function."
msgstr ""
"IoTF 서비스에 연결하는 데 성공하면 애플리케이션 클라이언트가 *connect* 이벤트를 보냅니다. 따라서 모든 로직이 이 콜백 함수 내에서 구현될 수 있습니다."

#: ../nodejs/node-js_applications.rst:76
msgid "Subscribing to device events"
msgstr ""
"디바이스 이벤트 구독"

#: ../nodejs/node-js_applications.rst:78
msgid "Events are the mechanism by which devices publish data to the Internet of Things Foundation. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"이벤트는 디바이스가 Internet of Things Foundation에 데이터를 공개하는 데 사용하는 메커니즘입니다. 디바이스는 이벤트의 컨텐츠를 제어하고 전송하는 각 이벤트에 대해 이름을 지정합니다. "

#: ../nodejs/node-js_applications.rst:80
msgid "When an event is received by the Internet of Things Foundation, the credentials of the connection on which the event was received are used to determine from which device the event was sent. Using this architecture, it is impossible for a device to impersonate another device."
msgstr ""
"Internet of Things Foundation이 이벤트를 수신하면 이벤트가 수신된 연결의 신임 정보를 사용하여 이벤트를 전송한 디바이스를 판별합니다. 이 아키텍처를 사용하면 한 디바이스가 다른 디바이스를 위장할 수 없습니다."

#: ../nodejs/node-js_applications.rst:82
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""
"기본적으로 애플리케이션은 연결된 모든 디바이스의 모든 이벤트를 구독합니다. 유형, id, 이벤트 및 msgFormat 매개변수를 사용하여 구독의 범위를 제어하십시오. 단일 클라이언트가 여러 구독을 지원할 수 있습니다. 아래의 코드 샘플에서는 디바이스 유형, id, 이벤트 및 msgFormat 매개변수에 종속된 디바이스를 구독하는 방법에 대한 예제를 제공합니다. "

#: ../nodejs/node-js_applications.rst:85
msgid "To subscribe to all events from all devices"
msgstr ""
"모든 디바이스의 모든 이벤트 구독"

#: ../nodejs/node-js_applications.rst:103
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""
"특정 유형의 모든 디바이스의 모든 이벤트 구독"

#: ../nodejs/node-js_applications.rst:120
msgid "To subscribe to a specific event from all devices"
msgstr ""
"모든 디바이스의 특정 이벤트 구독"

#: ../nodejs/node-js_applications.rst:138
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""
"둘 이상의 다른 디바이스의 특정 이벤트 구독"

#: ../nodejs/node-js_applications.rst:156
msgid "To subscribe to all events published by a device in json format"
msgstr ""
"JSON 형식으로 디바이스가 공개하는 모든 이벤트 구독"

#: ../nodejs/node-js_applications.rst:175
msgid "Handling events from devices"
msgstr ""
"디바이스의 이벤트 처리"

#: ../nodejs/node-js_applications.rst:177
msgid "To process the events received by your subscriptions you need to implement a device event callback method. The ibmiotf application client emits the event *deviceEvent*. This function has the following properties:"
msgstr ""
"구독에 의해 수신된 이벤트를 처리하려면 디바이스 이벤트 콜백 메소드를 구현해야 합니다. ibmiotf 애플리케이션 클라이언트가 *deviceEvent* 이벤트를 생성합니다. 이 기능에는 다음 특성이 있습니다."

#: ../nodejs/node-js_applications.rst:179
#: ../nodejs/node-js_applications.rst:273
msgid "deviceType"
msgstr ""
"deviceType"

#: ../nodejs/node-js_applications.rst:180
#: ../nodejs/node-js_applications.rst:274
msgid "deviceId"
msgstr ""
"deviceId"

#: ../nodejs/node-js_applications.rst:181
msgid "eventType"
msgstr ""
"eventType"

#: ../nodejs/node-js_applications.rst:182
msgid "format"
msgstr ""
"format"

#: ../nodejs/node-js_applications.rst:183
msgid "payload - Device event payload"
msgstr ""
"payload - 디바이스 이벤트 페이로드"

#: ../nodejs/node-js_applications.rst:184
msgid "topic - Original topic"
msgstr ""
"topic - 기존 주제"

#: ../nodejs/node-js_applications.rst:208
msgid "Subscribing to device status"
msgstr ""
"디바이스 상태 구독"

#: ../nodejs/node-js_applications.rst:210
msgid "By default, this will subscribe to status updates for all connected devices. Use the type and id parameters to control the scope of the subscription. A single client can support multiple subscriptions."
msgstr ""
"기본적으로 이는 연결된 모든 디바이스에 대한 상태 업데이트를 구독합니다. 유형 및 id 매개변수를 사용하여 구독의 범위를 제어하십시오. 단일 클라이언트가 여러 구독을 지원할 수 있습니다. "

#: ../nodejs/node-js_applications.rst:213
msgid "Subscribe to status updates for all devices"
msgstr ""
"모든 디바이스에 대한 상태 업데이트 구독"

#: ../nodejs/node-js_applications.rst:232
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""
"특정 유형의 모든 디바이스에 대한 상태 업데이트 구독"

#: ../nodejs/node-js_applications.rst:250
msgid "Subscribe to status updates for two different devices"
msgstr ""
"두 개의 다른 디바이스에 대한 상태 업데이트 구독"

#: ../nodejs/node-js_applications.rst:269
msgid "Handling status updates from devices"
msgstr ""
"디바이스의 상태 업데이트 처리"

#: ../nodejs/node-js_applications.rst:271
msgid "To process the status updates received by your subscriptions you need to implement an device status callback method. The ibmiotf application client emits the event *deviceStatus*. This function has the following properties:"
msgstr ""
"구독에 의해 수신된 상태 업데이트를 처리하려면 디바이스 상태 콜백 메소드를 구현해야 합니다. ibmiotf 애플리케이션 클라이언트가 *deviceStatus* 이벤트를 생성합니다. 이 기능에는 다음 특성이 있습니다."

#: ../nodejs/node-js_applications.rst:275
msgid "payload - Device status payload"
msgstr ""
"payload - 디바이스 상태 페이로드"

#: ../nodejs/node-js_applications.rst:276
msgid "topic"
msgstr ""
"주제"

#: ../nodejs/node-js_applications.rst:300
msgid "Publishing events from devices"
msgstr ""
"디바이스의 이벤트 공개"

#: ../nodejs/node-js_applications.rst:302
msgid "Applications can publish events as if they originated from a Device. The function requires:"
msgstr ""
"애플리케이션은 디바이스에서 시작된 것처럼 이벤트를 공개할 수 있습니다. 이 기능에는 다음이 필요합니다."

#: ../nodejs/node-js_applications.rst:304
#: ../nodejs/node-js_applications.rst:331
msgid "DeviceType"
msgstr ""
"DeviceType"

#: ../nodejs/node-js_applications.rst:305
#: ../nodejs/node-js_applications.rst:332
msgid "Device ID"
msgstr ""
"디바이스 ID"

#: ../nodejs/node-js_applications.rst:306
msgid "Event Type"
msgstr ""
"이벤트 유형"

#: ../nodejs/node-js_applications.rst:307
#: ../nodejs/node-js_applications.rst:334
msgid "Format"
msgstr ""
"형식"

#: ../nodejs/node-js_applications.rst:308
#: ../nodejs/node-js_applications.rst:335
msgid "Data"
msgstr ""
"데이터"

#: ../nodejs/node-js_applications.rst:327
msgid "Publishing commands to devices"
msgstr ""
"디바이스에 명령 공개"

#: ../nodejs/node-js_applications.rst:329
msgid "Applications can publish commands to connected devices. The function requires:"
msgstr ""
"애플리케이션은 연결된 디바이스에 명령을 공개할 수 있습니다. 이 기능에는 다음이 필요합니다."

#: ../nodejs/node-js_applications.rst:333
msgid "Command Type"
msgstr ""
"명령 유형"

#: ../nodejs/node-js_applications.rst:354
msgid "Disconnect Client"
msgstr ""
"클라이언트 연결 끊기"

#: ../nodejs/node-js_applications.rst:356
msgid "Disconnects the client and releases the connections"
msgstr ""
"클라이언트의 연결 끊기 및 연결 해제"

#: ../nodejs/node-js_applications.rst:376
msgid "Check Connection Status"
msgstr ""
"연결 상태 확인"

#: ../nodejs/node-js_applications.rst:378
msgid "*isConnected* gives the current status of the application client connection"
msgstr ""
"*isConnected*가 애플리케이션 클라이언트 연결의 현재 상태를 제공함"

