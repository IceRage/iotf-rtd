# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-17 09:49-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../libraries/python_cli_for_api.rst:3
msgid "Python Client Library - Internet of Things Foundation API Support"
msgstr ""
"Python 클라이언트 라이브러리 - Internet of Things Foundation API 지원"

#: ../libraries/python_cli_for_api.rst:6
msgid "Introduction"
msgstr ""
"소개"

#: ../libraries/python_cli_for_api.rst:8
msgid "This client library describes how to use the Internet of Things Foundation Python client library with the Internet of Things Foundation API. For help with getting started with this module, see `Python Client Library - Introduction <../python.html>`__."
msgstr ""
"이 클라이언트 라이브러리는 Internet of Things Foundation Python 클라이언트 라이브러리를 Internet of Things Foundation API와 함께 사용하는 방법을 설명합니다. 이 모듈 시작에 대한 도움말은 `Python 클라이언트 라이브러리 - 소개 <../python.html>`__의 내용을 참조하십시오."

#: ../libraries/python_cli_for_api.rst:10
msgid "This documentation contains information on how applications can use the `Python ibmiotf Client Library <https://pypi.python.org/pypi/ibmiotf>`__ to interact with your organization in the IBM Internet of Things Foundation Connect through ReST APIs."
msgstr ""
"이 문서에는 애플리케이션이 ReST API를 통해 IBM Internet of Things Foundation Connect에서 해당 조직과 상호작용하는 데 `Python ibmiotf 클라이언트 라이브러리 <https://pypi.python.org/pypi/ibmiotf>`__를 사용할 수 있는 방법에 대한 정보가 포함됩니다."

#: ../libraries/python_cli_for_api.rst:12
msgid "The `Python for Devices documentation <../python_cli_for_devices.html>`__ contains information on how devices can publish events and handle commands using the Python ibmiotf Client Library."
msgstr ""
"`디바이스용 Python 문서 <../python_cli_for_devices.html>`__에는 디바이스가 Python ibmiotf 클라이언트 라이브러리를 통해 이벤트를 공개하고 명령을 처리할 수 있는 방법에 대한 정보가 포함됩니다."

#: ../libraries/python_cli_for_api.rst:14
msgid "The `Python for Applications documentation <../python_cli_for_apps.html>`__ contains information on how applications can use the Python ibmiotf Client Library to interact with devices."
msgstr ""
"`애플리케이션용 Python 문서 <../python_cli_for_apps.html>`__에는 애플리케이션이 디바이스와 통신하는 데 Python ibmiotf 클라이언트 라이브러리를 사용할 수 있는 방법에 대한 정보가 포함됩니다."

#: ../libraries/python_cli_for_api.rst:18
msgid "Constructor"
msgstr ""
"생성자"

#: ../libraries/python_cli_for_api.rst:20
msgid "The Internet of Things Python module client is built for device, application, or API use by the constructor. The constructor requires a properties object containing the following definitions:"
msgstr ""
"Internet of Things Python 모듈 클라이언트는 디바이스, 애플리케이션 또는 생성자별 API 사용에 대해 빌드됩니다. 생성자는 다음 정의가 포함된 특성 오브젝트가 필요합니다."

#: ../libraries/python_cli_for_api.rst:22
msgid "org - Your organization ID."
msgstr ""
"org - 조직 ID. "

#: ../libraries/python_cli_for_api.rst:23
msgid "auth-method - This defines the authentication method be used, and should always be set to \"apikey\"."
msgstr ""
"auth-method - 이는 사용될 인증 메소드를 정의하고 \"apikey\"로 설정되어야 합니다."

#: ../libraries/python_cli_for_api.rst:24
msgid "auth-key - The authentication key should be your API key."
msgstr ""
"auth-key - 인증 키는 API 키여야 합니다."

#: ../libraries/python_cli_for_api.rst:25
msgid "auth-token - The authentication token is your API key token."
msgstr ""
"auth-token - 인증 토큰은 API 키 토큰입니다."

#: ../libraries/python_cli_for_api.rst:27
msgid "These definitions are used to interact with the Internet of Things Foundation module."
msgstr ""
"이러한 정의는 Internet of Things Foundation 모듈과 상호작용하는 데 사용됩니다."

#: ../libraries/python_cli_for_api.rst:29
msgid "After installing the client library, as described in the Python for the Internet of Things Foundation Introduction, the APIClient instance can be construced by running the following code snippet:"
msgstr ""
"클라이언트 라이브러리를 설치한 후 Internet of Things Foundation용 Python 소개에 설명된 대로 APIClient 인스턴스가 다음 코드 스니펫을 실행하여 생성될 수 있습니다."

#: ../libraries/python_cli_for_api.rst:43
msgid "Response and Exception"
msgstr ""
"응답 및 예외"

#: ../libraries/python_cli_for_api.rst:45
msgid "Each method in the APIClient responds with either a valid response (JSON or boolean) in the case of success or IoTFCReSTException in the case of failure. The IoTFCReSTException contains the following properties that application can parse to get more information about the failure."
msgstr ""
"APIClient의 각 메소드는 성공 시 유효한 응답(JSON 또는 부울)으로 응답하거나 실패 시 IoTFCReSTException으로 응답합니다. IoTFCReSTException에는 실패에 대한 자세한 정보를 가져오는 데 애플리케이션이 구문 분석할 수 있는 다음 특성이 포함됩니다."

#: ../libraries/python_cli_for_api.rst:47
msgid "httpcode - HTTP Status Code"
msgstr ""
"httpcode - HTTP 상태 코드"

#: ../libraries/python_cli_for_api.rst:48
msgid "message - Exception message containing the reason for the failure"
msgstr ""
"message - 실패에 대한 이유가 포함된 예외 메시지"

#: ../libraries/python_cli_for_api.rst:49
msgid "response - JsonElement containing the partial response if any otherwise null"
msgstr ""
"response - 달리 널인 경우 부분 응답이 포함된 JsonElement"

#: ../libraries/python_cli_for_api.rst:51
msgid "So in the case of failure, application needs to parse the response to see if the action is partially successful or not."
msgstr ""
"따라서 실패한 경우 애플리케이션은 응답을 구문 분석하여 조치가 부분적으로 성공인지 여부를 확인해야 합니다."

#: ../libraries/python_cli_for_api.rst:56
msgid "Organization details"
msgstr ""
"조직 세부사항"

#: ../libraries/python_cli_for_api.rst:58
msgid "Applications can use the *getOrganizationDetails()* method to retrieve the Organization details. Add the following code to a .py file, beneath the constructor code shown above."
msgstr ""
"애플리케이션은 *getOrganizationDetails()* 메소드를 사용하여 조직 세부사항을 검색할 수 있습니다. 위에 표시된 생성자 코드 아래에서 다음 코드를 .py 파일에 추가하십시오."

#: ../libraries/python_cli_for_api.rst:64
msgid "Refer to the Organization Configuration section of the `IBM IoT Foundation API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ for information about the request & response model and http status code."
msgstr ""
"요청 및 응답 모델과 http 상태 코드에 대한 정보는 `IBM IoT Foundation API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__의 조직 구성 절을 참조하십시오."

#: ../libraries/python_cli_for_api.rst:67
#: ../libraries/python_cli_for_api.rst:136
#: ../libraries/python_cli_for_api.rst:170
#: ../libraries/python_cli_for_api.rst:229
#: ../libraries/python_cli_for_api.rst:277
#: ../libraries/python_cli_for_api.rst:332
#: ../libraries/python_cli_for_api.rst:393
#: ../libraries/python_cli_for_api.rst:436
msgid "Sample"
msgstr ""
"샘플"

#: ../libraries/python_cli_for_api.rst:69
msgid "Your final code should follow this format:"
msgstr ""
"최종 코드는 이 형식을 따라야 합니다."

#: ../libraries/python_cli_for_api.rst:82
msgid "This code will run the constructor, and then retrieve organization details for the specified organization."
msgstr ""
"이 코드는 생성자를 실행한 다음 지정된 조직에 대해 조직 세부사항을 검색합니다."

#: ../libraries/python_cli_for_api.rst:87
msgid "Bulk device operations"
msgstr ""
"벌크 디바이스 오퍼레이션"

#: ../libraries/python_cli_for_api.rst:89
msgid "Applications can use bulk operations to get, add or remove devices in bulk from Internet of Things Foundation Connect."
msgstr ""
"애플리케이션이 벌크 오퍼레이션을 사용하여 Internet of Things Foundation 연결에서 대량으로 디바이스를 가져오고 추가하거나 제거할 수 있습니다."

#: ../libraries/python_cli_for_api.rst:91
msgid "Refer to the Bulk Operations section of the `IBM IoT Foundation API https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Bulk_Operations/>`__ for information about the list of query parameters, the request & response model and http status code."
msgstr ""
"조회 매개변수, 요청 및 응답 모델과 http 상태 코드의 목록에 대한 정보는 `IBM IoT Foundation API https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Bulk_Operations/>`__의 벌크 오퍼레이션 섹션을 참조하십시오."

#: ../libraries/python_cli_for_api.rst:94
msgid "Retrieve device information"
msgstr ""
"디바이스 정보 검색"

#: ../libraries/python_cli_for_api.rst:96
msgid "Bulk device information can be retrieved using the *getAllDevices()* method. This method retrieves information on all registered devices in the organization, each request can contain a maximum of 512KB."
msgstr ""
"벌크 디바이스 정보는 *getAllDevices()* 메소드를 통해 검색할 수 있습니다. 이 메소드는 조직에서 모든 등록된 디바이스의 정보를 검색하며, 각 요청에는 최대 512KB가 포함될 수 있습니다."

#: ../libraries/python_cli_for_api.rst:104
msgid "Response and Bookmarks"
msgstr ""
"응답 및 책갈피"

#: ../libraries/python_cli_for_api.rst:106
msgid "The response contains parameters required by the application to retrieve the dictionary *results* from the response to get the array of devices returned. Other parameters in the response are required to make further calls, for example, the *_bookmark* element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"응답에는 리턴된 디바이스의 어레이를 가져오기 위해 응답에서 사전 *results*를 검색하는 데 애플리케이션에 필요한 매개변수가 포함됩니다. 응답의 기타 매개변수는 추가 호출을 작성하는 데 필요합니다. 예를 들어, *_bookmark* 요소를 사용하여 페이지별로 결과를 볼 수 있습니다. 책갈피를 지정하지 않고 첫 번째 요청을 발행한 다음 응답에 리턴된 책갈피를 가져와서 그 다음 페이지에 대해 요청 시 제공하십시오. 책갈피의 부재로 표시된 결과 세트의 끝까지 반복하십시오. 각 요청은 기타 매개변수에 대해 정확히 동일한 값을 사용해야 합니다. 그렇지 않으면 결과가 정의되지 않습니다."

#: ../libraries/python_cli_for_api.rst:108
msgid "In order to pass the *_bookmark* or any other condition, the overloaded method must be used. The overloaded method takes the parameters in the form of org.apache.http.message.BasicNameValuePair as shown below,"
msgstr ""
"*_bookmark* 또는 임의의 기타 조건을 전달하려면 과부하된 메소드를 사용해야 합니다. 과부하된 메소드는 아래에 표시된 대로 org.apache.http.message.BasicNameValuePair의 양식으로 매개변수를 가져옵니다."

#: ../libraries/python_cli_for_api.rst:124
msgid "Add Devices in bulk"
msgstr ""
"대량으로 디바이스 추가"

#: ../libraries/python_cli_for_api.rst:126
msgid "The *addMultipleDevices()* method can be used to add one or more devices to your Internet of Things Foundation organization. The maximum size of a request is set to 512KB. In each request, you must first define the devices to be added using the *listOfDevices* variable, as shown in the following code snippet:"
msgstr ""
"*addMultipleDevices()* 메소드는 하나 이상의 디바이스를 Internet of Things Foundation 조직에 추가하는 데 사용할 수 있습니다. 요청의 최대 크기는 512KB로 설정됩니다. 각 요청에서는 다음 코드 스니펫에 표시된 대로 *listOfDevices* 변수를 통해 추가될 디바이스를 먼저 정의해야 합니다."

#: ../libraries/python_cli_for_api.rst:133
#: ../libraries/python_cli_for_api.rst:166
msgid "This above code snippet should be inserted after the constructor code in a .py file."
msgstr ""
"이러한 위의 코드 스니펫은 .py 파일에서 생성자 코드 다음에 삽입되어야 합니다."

#: ../libraries/python_cli_for_api.rst:138
msgid "The following sample shows an example of the format your final code, and is an example of using the *addMultipleDevices()* method to add two devices."
msgstr ""
"다음 샘플은 최종 코드 형식의 예제를 보여주고 두 개의 디바이스를 추가하기 위한 *addMultipleDevices()* 메소드 사용의 예제입니다."

#: ../libraries/python_cli_for_api.rst:152
msgid "The response will contain the generated authentication tokens for each added device. These authentication tokens must be recorded when processing the response, as lost authentication tokens cannot be retrieved."
msgstr ""
"응답에는 각 추가된 디바이스의 생성된 인증 토큰이 포함됩니다. 이러한 인증 토큰은 유실된 인증 토큰을 검색할 수 없으므로 응답 처리 시 기록되어야 합니다."

#: ../libraries/python_cli_for_api.rst:156
msgid "Delete Devices in bulk"
msgstr ""
"대량으로 디바이스 삭제"

#: ../libraries/python_cli_for_api.rst:158
msgid "The *deleteMultipleDevices()* method can be used to delete multiple devices from an Internet of Things Foundation organization, each request can contain a maximum of 512KB. In each request, you must first define the devices to be deleted using the *listOfDevices* variable, as shown in the following code snippet:"
msgstr ""
"*deleteMultipleDevices()* 메소드는 Internet of Things Foundation 조직에서 여러 디바이스를 삭제하는 데 사용할 수 있으며, 각 요청에는 최대 512KB가 포함될 수 있습니다. 각 요청에서는 다음 코드 스니펫에 표시된 대로 *listOfDevices* 변수를 통해 삭제될 디바이스를 먼저 정의해야 합니다."

#: ../libraries/python_cli_for_api.rst:172
msgid "The following sample shows an example of the format your final code, and is an example of using the *deleteMultipleDevices()* method to delete two devices."
msgstr ""
"다음 샘플은 최종 코드 형식의 예제를 보여주고 두 개의 디바이스를 삭제하기 위한 *deleteMultipleDevices()* 메소드 사용의 예제입니다."

#: ../libraries/python_cli_for_api.rst:189
msgid "Device Type Operations"
msgstr ""
"디바이스 유형 오퍼레이션"

#: ../libraries/python_cli_for_api.rst:191
msgid "Device types can be used as templates for adding device information to devices as they are added to your organization. Applications can use the Internet of Things Foundation API to list, create, delete, view, or update device types in your organization."
msgstr ""
"디바이스 유형은 해당 조직에 추가되므로 디바이스에 디바이스 정보를 추가하는 데 템플리트로 사용될 수 있습니다. 애플리케이션은 Internet of Things Foundation API를 사용하여 해당 조직에서 디바이스 유형을 나열하고 작성하며 삭제하고 보거나 업데이트할 수 있습니다."

#: ../libraries/python_cli_for_api.rst:193
msgid "Refer to the Device Types section of the `IBM IoT Foundation API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ documentation for information about the list of query parameters, the request & response model, and http status codes."
msgstr ""
"조회 매개변수, 요청 및 응답 모델과 http 상태 코드의 목록에 대한 정보는 `IBM IoT Foundation API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ 문서의 디바이스 유형 섹션을 참조하십시오."

#: ../libraries/python_cli_for_api.rst:196
msgid "Get all Device Types"
msgstr ""
"모든 디바이스 유형 가져오기"

#: ../libraries/python_cli_for_api.rst:198
msgid "The *getAllDeviceTypes()* method can be used to retrieve all device types in your Internet of Things Foundation organization. For example,"
msgstr ""
"*getAllDeviceTypes()* 메소드는 Internet of Things Foundation 조직에서 모든 디바이스 유형을 검색하는 데 사용할 수 있습니다. 예를 들어, 다음과 같습니다."

#: ../libraries/python_cli_for_api.rst:205
#: ../libraries/python_cli_for_api.rst:305
msgid "The response contains parameters and application needs to retrieve the dictionary *results* from the response to get the array of devices returned. Other parameters in the response are required to make further call, for example, the *_bookmark* element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"응답에는 리턴된 디바이스의 어레이를 가져오기 위해 응답에서 사전 *results*를 검색하는 데 애플리케이션에 필요한 매개변수가 포함됩니다. 응답의 기타 매개변수는 추가 호출을 작성하는 데 필요합니다. 예를 들어, *_bookmark* 요소를 사용하여 페이지별로 결과를 볼 수 있습니다. 책갈피를 지정하지 않고 첫 번째 요청을 발행한 다음 응답에 리턴된 책갈피를 가져와서 그 다음 페이지에 대해 요청 시 제공하십시오. 책갈피의 부재로 표시된 결과 세트의 끝까지 반복하십시오. 각 요청은 기타 매개변수에 대해 정확히 동일한 값을 사용해야 합니다. 그렇지 않으면 결과가 정의되지 않습니다."

#: ../libraries/python_cli_for_api.rst:207
msgid "In order to pass the *_bookmark* or any other condition, the overloaded method must be used. The overloaded method takes the parameters in the form of a dictionary as shown below,"
msgstr ""
"*_bookmark* 또는 임의의 기타 조건을 전달하려면 과부하된 메소드를 사용해야 합니다. 과부하된 메소드는 아래에 표시된 대로 사전의 양식으로 매개변수를 가져옵니다."

#: ../libraries/python_cli_for_api.rst:216
msgid "Add a Device Type"
msgstr ""
"디바이스 유형 추가"

#: ../libraries/python_cli_for_api.rst:218
msgid "The *addDeviceType()* method can be used to register a device type to Internet of Things Foundation Connect. In each request, you must first define the device information, and device metadata elements which you want to be applied to all devices of this type. The device information element is comprised of several variables, including, serial number, manufacturer, model, class, description, firmware and hardware versions, and descriptive location. The metadata element is comprised of custom variables and values which can be defined by the user."
msgstr ""
"*addDeviceType()* 메소드는 Internet of Things Foundation 연결에 디바이스 유형을 등록하는 데 사용할 수 있습니다. 각 요청에서는 먼저 디바이스 정보와 이 유형의 모든 디바이스에 적용되도록 하려는 디바이스 메타데이터 요소를 정의해야 합니다. 디바이스 정보 요소는 일련 번호, 제조업체, 모델, 클래스, 설명, 펌웨어 및 하드웨어 버전과 설명 위치를 포함하여 몇몇 변수로 구성됩니다. 메타데이터 요소는 사용자가 정의할 수 있는 값 및 사용자 정의 변수로 구성됩니다."

#: ../libraries/python_cli_for_api.rst:220
msgid "After defining the *deviceInfo* and *metadata* elements, use the following code snippet to register a new device type."
msgstr ""
"*deviceInfo* 및 *metadata* 요소를 정의한 후 다음 코드 스니펫을 사용하여 새 디바이스 유형을 등록하십시오."

#: ../libraries/python_cli_for_api.rst:231
msgid "The following sample will define the API connection settings, define the DeviceInfo and Metadata elements, and then register a device type."
msgstr ""
"다음 샘플은 API 연결 설정을 정의하고 DeviceInfo 및 메타데이터 요소를 정의한 다음 디바이스 유형을 등록합니다."

#: ../libraries/python_cli_for_api.rst:245
msgid "Delete a Device Type"
msgstr ""
"디바이스 유형 삭제"

#: ../libraries/python_cli_for_api.rst:247
msgid "The *deleteDeviceType()* method can be used to delete a device type from your Internet of Things Foundation organization. The following code snippet can be added to a .py file to delete a device type \"myDeviceType5\"."
msgstr ""
"*deleteDeviceType()* 메소드는 Internet of Things Foundation 조직에서 디바이스 유형을 삭제하는 데 사용할 수 있습니다. 다음 코드 스니펫을 .py 파일에 추가하여 디바이스 유형 \"myDeviceType5\"를 삭제할 수 있습니다."

#: ../libraries/python_cli_for_api.rst:255
msgid "Get a Device Type"
msgstr ""
"디바이스 유형 가져오기"

#: ../libraries/python_cli_for_api.rst:257
msgid "The *getDeviceType()* method retrieves information on a given device type. The *deviceTypeID* of the device type you wish to retrieve information on must be used as a parameter, as shown in the following code snippet for the device type \"myDeviceType5\". This method will return all available information for the device type, including all variables in the deviceInfo and metadata element."
msgstr ""
"*getDeviceType()* 메소드는 제공된 디바이스 유형의 정보를 검색합니다. 정보를 검색하려는 디바이스 유형의 *deviceTypeID*는 디바이스 유형 \"myDeviceType5\"에 대해 다음 코드 스니펫에서 표시된 대로 매개변수로 사용되어야 합니다. 이 메소드는 deviceInfo 및 메타데이터 요소의 모든 변수를 포함하여 디바이스 유형에 대해 모든 사용 가능한 정보를 리턴합니다."

#: ../libraries/python_cli_for_api.rst:265
msgid "Update a Device Type"
msgstr ""
"디바이스 유형 업데이트"

#: ../libraries/python_cli_for_api.rst:267
msgid "The *updateDeviceType()* method can be used to modify the properties of a device type. When using this method, several parameters must be defined. Firstly, the *deviceTypeID* of the device type to be updated must be specified, then the *description*, *deviceInfo*, and *metadata* elements, as shown in the code snippet below."
msgstr ""
"*updateDeviceType()* 메소드는 디바이스 유형의 특성을 수정하는 데 사용할 수 있습니다. 이 메소드를 사용할 때 몇몇 매개변수를 정의해야 합니다. 아래 코드 스니펫에 표시된 대로, 업데이트될 디바이스 유형의 *deviceTypeID*가 먼저 지정된 다음 *description*, *deviceInfo* 및 *metadata* 요소가 지정되어야 합니다."

#: ../libraries/python_cli_for_api.rst:274
msgid "The properties to be modified should be defined within the, *description*, *deviceInfo*, and *metadata* elements. The variables contained in *deviceInfo* and *metadata* which are to be updated must be defined before the method is called. The code sample below is an example of the full method being called."
msgstr ""
"수정될 특성이 *description*, *deviceInfo* 및 *metadata* 요소 내에서 정의되어야 합니다. 업데이트될 *deviceInfo* 및 *metadata*에 포함된 변수는 메소드가 호출되기 전에 정의되어야 합니다. 아래의 코드 샘플은 호출 중인 전체 메소드의 예제입니다."

#: ../libraries/python_cli_for_api.rst:289
msgid "Device operations"
msgstr ""
"디바이스 오퍼레이션"

#: ../libraries/python_cli_for_api.rst:291
msgid "Device operations made available through the API include listing, adding, removing, viewing, updating, viewing location and viewing  device management information of devices in an Internet of Things Foundation organization."
msgstr ""
"API를 통해 사용 가능한 디바이스 오퍼레이션은 나열, 추가, 제거, 보기, 업데이트, 위치 보기 및 Internet of Things Foundation 조직에서 디바이스의 디바이스 관리 정보 보기를 포함합니다."

#: ../libraries/python_cli_for_api.rst:293
msgid "Refer to the Device section of the `IBM IoT Foundation API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ for information about the list of query parameters, the request & response model and http status code."
msgstr ""
"조회 매개변수, 요청 및 응답 모델과 http 상태 코드의 목록에 대한 정보는 `IBM IoT Foundation API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__의 디바이스 절을 참조하십시오."

#: ../libraries/python_cli_for_api.rst:296
msgid "Get Devices of a particular Device Type"
msgstr ""
"특정한 디바이스 유형의 디바이스 가져오기"

#: ../libraries/python_cli_for_api.rst:298
msgid "The *retrieveDevices()* method can be used to retrieve all the devices of a particular device type in an organization from Internet of Things Foundation. For example,"
msgstr ""
"*retrieveDevices()* 메소드는 Internet of Things Foundation에서 조직에 있는 특정한 디바이스 유형의 모든 디바이스를 검색하는 데 사용할 수 있습니다. 예를 들어, 다음과 같습니다."

#: ../libraries/python_cli_for_api.rst:307
#: ../libraries/python_cli_for_api.rst:579
msgid "In order to pass the *_bookmark* or any other condition, the overloaded method must be used. The overloaded method takes the parameters in the form of dictionary as shown below,"
msgstr ""
"*_bookmark* 또는 임의의 기타 조건을 전달하려면 과부하된 메소드를 사용해야 합니다. 과부하된 메소드는 아래에 표시된 대로 사전의 양식으로 매개변수를 가져옵니다."

#: ../libraries/python_cli_for_api.rst:313
msgid "The above snippet sorts the response based on device id and uses the bookmark to page through the results."
msgstr ""
"위의 스니펫은 디바이스에 기반하여 응답을 정렬하고 책갈피를 사용하여 페이지별로 결과를 봅니다."

#: ../libraries/python_cli_for_api.rst:316
msgid "Add a Device"
msgstr ""
"디바이스 추가"

#: ../libraries/python_cli_for_api.rst:318
msgid "The *registerDevice()* method is used to add a device to an Internet of Things Foundation organization. The *registerDevice()* method adds a single device to your Internet of Things Foundation organization. The parameters which can be set when adding a device are:"
msgstr ""
"*registerDevice()* 메소드는 Internet of Things Foundation 조직에 디바이스를 추가하는 데 사용됩니다. *registerDevice()* 메소드는 Internet of Things Foundation 조직에 단일 디바이스를 추가합니다. 디바이스 추가 시 설정할 수 있는 매개변수는 다음과 같습니다."

#: ../libraries/python_cli_for_api.rst:320
msgid "deviceTypeId: *Optional*. Assigns a device type to the device. Where there is a clash between variables defined by the device type and variables defined by under deviceInfo, the device specific variables will take precedence."
msgstr ""
"deviceTypeId: *Optional*. 디바이스 유형을 디바이스에 지정합니다. 디바이스 유형에서 정의된 변수 및 deviceInfo에서 정의된 변수 간에 충돌이 있는 경우 디바이스 특정 변수가 우선합니다."

#: ../libraries/python_cli_for_api.rst:321
msgid "deviceId: *Mandatory*."
msgstr ""
"deviceId: *Mandatory*."

#: ../libraries/python_cli_for_api.rst:322
msgid "authToken: *Optional*. If no authentication token is supplied, one will be generated and included in the response."
msgstr ""
"authToken: *Optional*. 인증 토큰이 제공되지 않은 경우 생성되어 응답에 포함됩니다."

#: ../libraries/python_cli_for_api.rst:323
msgid "deviceInfo: *Optional*. This parameter is optional, and can contain a number of variables, including: serialNumber, manufacturer, model, deviceClass, description, firmware and hardware versions, and descriptiveLocation."
msgstr ""
"deviceInfo: *Optional*. 이 매개변수는 선택사항이며 serialNumber, 제조업체, 모델, deviceClass, 설명, 펌웨어 및 하드웨어 버전과 descriptiveLocation을 포함하여 다수의 변수를 포함할 수 있습니다."

#: ../libraries/python_cli_for_api.rst:324
msgid "metadata: *Optional*. Metadata can optionally be added in the form of custom field:value string pairs. An example is given in the code sample below."
msgstr ""
"metadata: *Optional*. 메타데이터는 사용자 정의 필드:값 문자열 쌍의 양식으로 선택적으로 추가될 수 있습니다. 예제가 아래 코드 샘플에 제공됩니다."

#: ../libraries/python_cli_for_api.rst:325
msgid "location: *Optional*. This parameter contains the longitude, latitude, elevation, accuracy, and mesauredDateTime variables."
msgstr ""
"location: *Optional*. 이 매개변수는 경도, 위도, 고도, 정확성 및 mesauredDateTime 변수를 포함합니다."

#: ../libraries/python_cli_for_api.rst:327
msgid "For more information on the parameters presented here, and the response format and codes, please see the relevant section of `API documentation <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Devices/post_device_types_typeId_devices>`__."
msgstr ""
"여기에 표시된 매개변수 및 응답 형식과 코드에 대한 자세한 정보는 `API 문서 <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Devices/post_device_types_typeId_devices>`__의 관련 섹션을 참조하십시오."

#: ../libraries/python_cli_for_api.rst:329
msgid "When using the *registerDevice()* method, you must define the mandatory deviceID parameter, and any of the optional parameters you require for your device, then call the method using the parameters you've selected."
msgstr ""
"*registerDevice()* 메소드 사용 시 필수 deviceID 매개변수 및 디바이스에 대해 필요한 임의의 선택적 매개변수를 정의한 다음 선택한 매개변수를 사용하는 메소드를 호출해야 합니다."

#: ../libraries/python_cli_for_api.rst:334
msgid "The following code sample should be inserted after the constructor code in a .py file. This code demonstrates defining the deviceId, authToken, metadata, deviceInfo parameters, and location parameters and then using the method with those parameters and adding a device type."
msgstr ""
"다음 코드 샘플은 .py 파일에서 생성자 코드 다음에 삽입되어야 합니다. 이 코드는 deviceId, authToken,메타데이터, deviceInfo 매개변수 및 위치 매개변수 정의를 보여준 다음 해당 매개변수가 포함된 메소드 사용 및 디바이스 유형 추가를 보여줍니다."

#: ../libraries/python_cli_for_api.rst:348
msgid "Delete a Device"
msgstr ""
"디바이스 삭제"

#: ../libraries/python_cli_for_api.rst:350
msgid "The *deleteDevice()* method is used to remove a device from an Internet of Things Foundation organization. When deleting a device using this method, the parameters which must be specified in the method are the deviceTypeId, and the deviceId."
msgstr ""
"*deleteDevice()* 메소드는 Internet of Things Foundation 조직에서 디바이스를 제거하는 데 사용됩니다. 이 메소드를 통해 디바이스를 삭제하는 경우 메소드에 지정되어야 하는 매개변수는 deviceTypeId 및 deviceId입니다."

#: ../libraries/python_cli_for_api.rst:352
#: ../libraries/python_cli_for_api.rst:364
msgid "The following code snippet provides an example of the format required for this method."
msgstr ""
"다음 코드 스니펫은 이 메소드에 필요한 형식의 예제를 제공합니다."

#: ../libraries/python_cli_for_api.rst:360
msgid "Get a Device"
msgstr ""
"디바이스 가져오기"

#: ../libraries/python_cli_for_api.rst:362
msgid "The *getDevice()* method can be used to retrieve a device from an Internet of Things Foundation organization. When retrieving device details using this method, the parameters which must be specified in the method are the deviceTypeId, and the deviceId."
msgstr ""
"*getDevice()* 메소드는 Internet of Things Foundation 조직에서 디바이스를 검색하는 데 사용할 수 있습니다. 이 메소드를 통해 디바이스 세부사항을 검색하는 경우 메소드에 지정되어야 하는 매개변수는 deviceTypeId 및 deviceId입니다."

#: ../libraries/python_cli_for_api.rst:372
msgid "Get all Devices"
msgstr ""
"모든 디바이스 가져오기"

#: ../libraries/python_cli_for_api.rst:374
msgid "The *getAllDevices()* method can be used to retrieve all devices within an Internet of Things Foundation organization."
msgstr ""
"*getAllDevices()* 메소드는 Internet of Things Foundation 조직 내에서 모든 디바이스를 검색하는 데 사용할 수 있습니다."

#: ../libraries/python_cli_for_api.rst:382
msgid "Update a Device"
msgstr ""
"디바이스 업데이트"

#: ../libraries/python_cli_for_api.rst:384
msgid "The *updateDevice()* method is used to modify one or more properties of a device. Any property in the deviceInfo or metadata parameters can be updated. In order to update a device property, it must be defined above the method. The status parameter should contain \"alert\": True. The Alert property controls whether a device will display error codes in the Internet of Things Foundation user interface, and should be set by default to 'True'."
msgstr ""
"*updateDevice()* 메소드는 디바이스의 하나 이상의 특성을 수정하는 데 사용됩니다. deviceInfo 또는 메타데이터 매개변수의 특성을 업데이트할 수 있습니다. 디바이스 특성을 업데이트하려면 메소드 위에 정의되어야 합니다. 상태 매개변수는 \"경보\": True를 포함해야 합니다. 경보 특성은 디바이스가 Internet of Things Foundation 사용자 인터페이스에서 오류 코드를 표시하는지 여부를 제어하고 기본적으로 'True'로 설정되어야 합니다."

#: ../libraries/python_cli_for_api.rst:395
msgid "In this sample, the following code identifies a specific device, and updates several properties under the deviceInfo parameter."
msgstr ""
"이 샘플에서 다음 코드가 특정 디바이스를 식별하고 deviceInfo 매개변수에서 몇몇 특성을 업데이트합니다."

#: ../libraries/python_cli_for_api.rst:404
msgid "Get Location Information"
msgstr ""
"위치 정보 가져오기"

#: ../libraries/python_cli_for_api.rst:406
msgid "The *getDeviceLocation()* method can be used to retrieve the location information of a device. The parameters required for retrieving the location data are deviceTypeId and deviceId."
msgstr ""
"*getDeviceLocation()* 메소드는 디바이스의 위치 정보를 검색하는 데 사용할 수 있습니다. 위치 데이터를 검색하는 데 필요한 매개변수는 deviceTypeId 및 deviceId입니다."

#: ../libraries/python_cli_for_api.rst:412
msgid "The response to this method contains the longitude, latitude, elevation, accuracy, measuredTimeStamp, and updatedTimeStamp properties."
msgstr ""
"이 메소드에 대한 응답은 경도, 위도, 고도, 정확성, measuredTimeStamp 및 updatedTimeStamp 특성을 포함합니다."

#: ../libraries/python_cli_for_api.rst:416
msgid "Update Location Information"
msgstr ""
"위치 정보 업데이트"

#: ../libraries/python_cli_for_api.rst:418
msgid "The *updateDeviceLocation()* method is used to modify the location information for a device. Simlarly to updating device properties, the deviceLocation parameter must be defined with the changes you wish to apply. The code sample below demonstrates changing the location data for a given device."
msgstr ""
"*updateDeviceLocation()* 메소드는 디바이스의 위치 정보를 수정하는 데 사용됩니다. 디바이스 특성 업데이트와 유사하게 deviceLocation 매개변수는 적용하려는 변경사항과 함께 정의되어야 합니다. 아래의 코드 샘플이 제공된 디바이스에 대해 위치 데이터 변경을 보여줍니다."

#: ../libraries/python_cli_for_api.rst:425
msgid "If no date is supplied, the entry is added with the current date and time."
msgstr ""
"날짜가 제공되지 않는 경우 현재 날짜 및 시간이 포함된 항목이 추가됩니다."

#: ../libraries/python_cli_for_api.rst:429
msgid "Get Device Management Information"
msgstr ""
"디바이스 관리 정보 가져오기"

#: ../libraries/python_cli_for_api.rst:431
msgid "The *getDeviceManagementInformation()* method is used to get the device management information for a device. The response contains the last activity date-time, the device's dormant status (true/false), support for device and firmware actions, and firmware data. For a comprehensive list of response content, please see the relevant API documentation."
msgstr ""
"*getDeviceManagementInformation()* 메소드는 디바이스의 디바이스 관리 정보를 가져오는 데 사용됩니다. 응답에는 마지막 활동 날짜-시간, 디바이스의 유휴 상태(true/false), 디바이스 및 펌웨어 조치에 대한 지원 및 펌웨어 데이터가 포함됩니다. 응답 컨텐츠의 전체 목록은 관련 API 문서를 참조하십시오."

#: ../libraries/python_cli_for_api.rst:433
msgid "The following code sample will return the device management information for a device with the deviceId \"00aabbccde03\", with deviceTypeId \"iotsample-arduino\"."
msgstr ""
"다음 코드 샘플이 deviceId \"00aabbccde03\" 및 deviceTypeId \"iotsample-arduino\"와 함께 디바이스에 대해 디바이스 관리 정보를 리턴합니다."

#: ../libraries/python_cli_for_api.rst:446
msgid "Device diagnostic operations"
msgstr ""
"디바이스 진단 오퍼레이션"

#: ../libraries/python_cli_for_api.rst:448
msgid "Applications can use device diagnostic operations to clear logs, retrieve all or specific logs for a device, add log information, delete logs, clear error codes, get device error codes, and add an error codes."
msgstr ""
"애플리케이션은 디바이스 진단 오퍼레이션을 사용하여 로그를 지우고 디바이스에 대해 모든 또는 특정 로그를 검색하며 로그 정보를 추가하고 로그를 삭제하며 오류 코드를 지우고 디바이스 오류 코드를 가져오고 오류 코드를 추가할 수 있습니다."

#: ../libraries/python_cli_for_api.rst:450
msgid "For more detailed information on query and response models, response codes, and query paramters, please see the relevant API documentation."
msgstr ""
"조회 및 응답 모델, 응답 코드, 조회 매개변수에 대한 자세한 정보는 관련 API 문서를 참조하십시오."

#: ../libraries/python_cli_for_api.rst:453
msgid "Get Diagnostic logs"
msgstr ""
"진단 로그 가져오기"

#: ../libraries/python_cli_for_api.rst:455
msgid "The *getAllDiagnosticLogs()* method is used to retrieve all diagnostic logs for a specific device. The *getAllDiagnosticLogs()* method requires the deviceTypeId and deviceId parameters."
msgstr ""
"*getAllDiagnosticLogs()* 메소드는 특정 디바이스에 대해 모든 진단 로그를 검색하는 데 사용됩니다. *getAllDiagnosticLogs()* 메소드는 deviceTypeId 및 deviceId 매개변수를 요구합니다."

#: ../libraries/python_cli_for_api.rst:461
msgid "The response model for this method contains the logId, message, severity, data, and timestamp."
msgstr ""
"이 메소드의 응답 모델에는 logId, 메시지, 심각도, 데이터 및 시간소인이 포함됩니다."

#: ../libraries/python_cli_for_api.rst:464
msgid "Clear Diagnostic logs for a Device"
msgstr ""
"디바이스의 진단 로그 지우기"

#: ../libraries/python_cli_for_api.rst:466
msgid "The *clearAllDiagnosticLogs()* method is used to delete all diagnostic logs for a specific device. The required parameters are deviceTypeId and deviceId. Care should be taken when deleting logs, as logs cannot be recovered once deleted."
msgstr ""
"*clearAllDiagnosticLogs()* 메소드는 특정 디바이스에 대해 모든 진단 로그를 삭제하는 데 사용됩니다. 필수 매개변수는 deviceTypeId 및 deviceId입니다. 로그는 한 번 삭제되면 복구할 수 없으므로 로그 삭제 시 주의해야 합니다."

#: ../libraries/python_cli_for_api.rst:474
msgid "Add a Diagnostic log"
msgstr ""
"진단 로그 추가"

#: ../libraries/python_cli_for_api.rst:476
msgid "The *addDiagnosticLog()* method is used to add an entry in the diagnostic log of the device. The log may be pruned as the new entry is added. If no date is supplied, the entry is added with the current date and time. To use this method, first define a 'logs' parameter with the following variables:"
msgstr ""
"*addDiagnosticLog()* 메소드는 디바이스의 진단 로그에서 항목을 추가하는 데 사용됩니다. 로그는 새 항목이 추가되면서 프루닝될 수 있습니다. 날짜가 제공되지 않는 경우 현재 날짜 및 시간이 포함된 항목이 추가됩니다. 이 메소드를 사용하려면 먼저 'logs' 매개변수를 다음 변수와 함께 정의하십시오."

#: ../libraries/python_cli_for_api.rst:478
msgid "message: This variable is mandatory, and contains the new diagnostic message."
msgstr ""
"메시지: 이 변수는 필수이며 새 진단 메시지를 포함합니다."

#: ../libraries/python_cli_for_api.rst:479
msgid "severity: This variable is optional. If used it corresponds to the severity of the diagnostic log, and should be 0, 1, or 2, corresponding to the informational, warning, and error categories."
msgstr ""
"심각도: 이 변수는 선택사항입니다. 사용되는 경우 진단 로그의 심각도에 해당하고 정보용, 경고 및 오류 카테고리에 해당하는 0, 1 또는 2여야 합니다."

#: ../libraries/python_cli_for_api.rst:480
msgid "data: This variable is optional, and should contain diagnostic data."
msgstr ""
"데이터: 이 변수는 선택사항이고 진단 데이터를 포함해야 합니다."

#: ../libraries/python_cli_for_api.rst:481
#: ../libraries/python_cli_for_api.rst:539
msgid "timestamp: This variable is optional, and contains the date and time of the log entry in ISO8601 format. If this variable is not included, it is automatically added with the current date and time."
msgstr ""
"시간소인: 이 변수는 선택사항이고 ISO8601 형식에서 로그 항목의 날짜 및 시간을 포함합니다. 이 변수가 포함되지 않는 경우 현재 날짜 및 시간과 함께 자동으로 추가됩니다."

#: ../libraries/python_cli_for_api.rst:483
msgid "The other necessary paramteres required in the method are the deviceTypeId and deviceId for the specific device."
msgstr ""
"메소드에 필요한 기타 필수 매개변수는 특정 디바이스에 대해 deviceTypeId 및 deviceId입니다."

#: ../libraries/python_cli_for_api.rst:485
msgid "The code sample below contains an example of the method."
msgstr ""
"아래의 코드 샘플은 메소드의 예제를 포함합니다."

#: ../libraries/python_cli_for_api.rst:494
msgid "Retrieve a specific Diagnostic log"
msgstr ""
"특정 진단 로그 검색"

#: ../libraries/python_cli_for_api.rst:496
msgid "The *getDiagnosticLog()* method is used to retrieve a specific diagnostic log for a specified device based on the log id. The required parameters for this method are the deviceTypeId, deviceId, and logId."
msgstr ""
"*getDiagnosticLog()* 메소드는 로그 ID에 기반하여 지정된 디바이스에 대해 특정 진단 로그를 검색하는 데 사용됩니다. 이 메소드의 필수 매개변수는 deviceTypeId, deviceId 및 logId입니다."

#: ../libraries/python_cli_for_api.rst:504
msgid "Delete a Diagnostic log"
msgstr ""
"진단 로그 삭제"

#: ../libraries/python_cli_for_api.rst:506
msgid "The *deleteDiagnosticLog()* can be used to delete a specific diagnostic log. In order to specify a diagnostic log, the deviceTypeId, deviceId, and logId parameters should be supplied."
msgstr ""
"*deleteDiagnosticLog()*는 특정 진단 로그를 삭제하는 데 사용할 수 있습니다. 진단 로그를 지정하려면 deviceTypeId, deviceId 및 logId 매개변수가 제공되어야 합니다."

#: ../libraries/python_cli_for_api.rst:514
msgid "Retrieve Device Error Codes"
msgstr ""
"디바이스 오류 코드 검색"

#: ../libraries/python_cli_for_api.rst:516
msgid "The *getAllDiagnosticErrorCodes()* method is used to retrieve all diagnostic error codes associated with a specific device."
msgstr ""
"*getAllDiagnosticErrorCodes()* 메소드는 특정 디바이스와 연관된 모든 진단 오류 코드를 검색하는 데 사용됩니다."

#: ../libraries/python_cli_for_api.rst:524
msgid "Clear Diagnostic Error Codes"
msgstr ""
"진단 오류 코드 지우기"

#: ../libraries/python_cli_for_api.rst:526
msgid "The *clearAllErrorCodes()* method is used to clear the list of error codes associated with the device. The list is replaced with a single error code of zero."
msgstr ""
"*clearAllErrorCodes()* 메소드는 디바이스와 연관된 오류 코드의 목록을 지우는 데 사용됩니다. 이 목록은 0의 단일 오류 코드로 바뀝니다."

#: ../libraries/python_cli_for_api.rst:534
msgid "Add single Diagnostic ErrorCode"
msgstr ""
"단일 진단 ErrorCode 추가"

#: ../libraries/python_cli_for_api.rst:536
msgid "The *addErrorCode()* method is used to add an error code to the list of error codes associated with the device. The list may be pruned as the new entry is added. The parameters required in the method are deviceTypeId, deviceId, and errorCode. The errorCode parameter contains the following variables:"
msgstr ""
"*addErrorCode()* 메소드는 디바이스와 연관된 오류 코드의 목록에 오류 코드를 추가하는 데 사용됩니다. 목록은 새 항목이 추가되면서 프루닝될 수 있습니다. 메소드에 필요한 매개변수는 deviceTypeId, deviceId 및 errorCode입니다. errorCode 매개변수는 다음 변수를 포함합니다."

#: ../libraries/python_cli_for_api.rst:538
msgid "errorCode: This variable is mandatory and should be set as an integer. This sets the number of the error code to be created."
msgstr ""
"errorCode: 이 변수는 필수이며 정수로 설정되어야 합니다. 이는 작성될 오류 코드의 수를 설정합니다."

#: ../libraries/python_cli_for_api.rst:549
msgid "Connection problem determination"
msgstr ""
"연결 문제점 판별"

#: ../libraries/python_cli_for_api.rst:551
msgid "The *getDeviceConnectionLogs()* method is used to list connection log events for a device. This information can be used to help diagnose connectivity problems between the device and the Internet of Things Foundation service. The entries record successful connection, unsuccessful connection attempts, intentional disconnection and server-initiated disconnection events."
msgstr ""
"*getDeviceConnectionLogs()* 메소드는 디바이스에 대해 연결 로그 이벤트를 나열하는 데 사용됩니다. 이 정보를 사용하여 디바이스 및 Internet of Things Foundation 서비스 간의 연결 문제점을 진단하는데 도움을 받을 수 있습니다. 항목은 성공적인 연결, 실패한 연결 시도, 의도된 연결 끊기 및 서버 시작 연결 끊기 이벤트를 기록합니다."

#: ../libraries/python_cli_for_api.rst:557
msgid "The response includes a list of log entries, containing log messages and timestamps."
msgstr ""
"응답에는 로그 메시지 및 시간소인을 포함하여 로그 항목의 목록이 포함됩니다."

#: ../libraries/python_cli_for_api.rst:562
msgid "Historical Event Retrieval"
msgstr ""
"히스토리 이벤트 검색"

#: ../libraries/python_cli_for_api.rst:564
msgid "These operations can be used to view events from all devices, view events from a device type or to view events for a specific device."
msgstr ""
"이러한 오퍼레이션은 모든 디바이스에서 이벤트를 보고 디바이스 유형에서 이벤트를 보거나 특정 디바이스에 대해 이벤트를 보는 데 사용할 수 있습니다."

#: ../libraries/python_cli_for_api.rst:566
msgid "Refer to the Historical Event Retrieval section of the `IBM IoT Foundation Connect API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ for information about the list of query parameters, the request & response model and http status code."
msgstr ""
"조회 매개변수, 요청 및 응답 모델과 http 상태 코드의 목록에 대한 정보는 `IBM IoT Foundation 연결 API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__의 히스토리 이벤트 검색 절을 참조하십시오."

#: ../libraries/python_cli_for_api.rst:569
msgid "View events from all devices"
msgstr ""
"모든 디바이스에서 이벤트 보기"

#: ../libraries/python_cli_for_api.rst:571
msgid "Method getHistoricalEvents() can be used to view events across all devices registered to the organization."
msgstr ""
"메소드 getHistoricalEvents()는 조직에 등록된 모든 디바이스 간에 이벤트를 보는 데 사용할 수 있습니다."

#: ../libraries/python_cli_for_api.rst:577
msgid "The response will contain some parameters and the application needs to retrieve the JSON element *events* from the response to get the array of events returned. Other parameters in the response are required to make further call, for example, the *_bookmark* element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"응답에는 일부 매개변수가 포함되며 애플리케이션이 리턴된 이벤트의 어레이를 가져오기 위해 응답에서 JSON 요소 *events*를 검색해야 합니다. 응답의 기타 매개변수는 추가 호출을 작성하는 데 필요합니다. 예를 들어, *_bookmark* 요소를 사용하여 페이지별로 결과를 볼 수 있습니다. 책갈피를 지정하지 않고 첫 번째 요청을 발행한 다음 응답에 리턴된 책갈피를 가져와서 그 다음 페이지에 대해 요청 시 제공하십시오. 책갈피의 부재로 표시된 결과 세트의 끝까지 반복하십시오. 각 요청은 기타 매개변수에 대해 정확히 동일한 값을 사용해야 합니다. 그렇지 않으면 결과가 정의되지 않습니다."

#: ../libraries/python_cli_for_api.rst:588
msgid "The above snippet returns the events between the start and end time."
msgstr ""
"위의 스니펫은 시작 및 종료 시간 사이에 이벤트를 리턴합니다."

#: ../libraries/python_cli_for_api.rst:591
msgid "View events from a device type"
msgstr ""
"디바이스 유형에서 이벤트 보기"

#: ../libraries/python_cli_for_api.rst:593
msgid "The *getHistoricalEvents()* method is used to view events from all the devices of a particular device type."
msgstr ""
"*getHistoricalEvents()* 메소드는 특정한 디바이스 유형의 모든 디바이스에서 이벤트를 보는 데 사용됩니다."

#: ../libraries/python_cli_for_api.rst:599
msgid "The response will contain some parameters and the application needs to retrieve the JSON element *events* from the response to get the array of events returned. As mentioned in the *view events from all devices* section, the overloaded method can be used to control the output."
msgstr ""
"응답에는 일부 매개변수가 포함되며 애플리케이션이 리턴된 이벤트의 어레이를 가져오기 위해 응답에서 JSON 요소 *events*를 검색해야 합니다. 모든 devices* 절에서 *view 이벤트에 언급된 대로 과부하된 메소드를 사용하여 출력을 제어할 수 있습니다."

#: ../libraries/python_cli_for_api.rst:603
msgid "View events from a device"
msgstr ""
"디바이스에서 이벤트 보기"

#: ../libraries/python_cli_for_api.rst:605
msgid "The *getHistoricalEvents()* method is used to view events from a specific device. DeviceTypeId and deviceId parameters are required in order to use this method."
msgstr ""
"*getHistoricalEvents()* 메소드는 특정 디바이스에서 이벤트를 보는 데 사용됩니다. 이 메소드를 사용하려면 DeviceTypeId 및 deviceId 매개변수가 필요합니다."

#: ../libraries/python_cli_for_api.rst:611
msgid "The response will contain more parameters and application needs to retrieve the JSON element *events* from the response to get the array of events returned."
msgstr ""
"응답에는 추가 매개변수가 포함되며 애플리케이션이 리턴된 이벤트의 어레이를 가져오기 위해 응답에서 JSON 요소 *events*를 검색해야 합니다."

#: ../libraries/python_cli_for_api.rst:617
msgid "Examples"
msgstr ""
"예제"

#: ../libraries/python_cli_for_api.rst:618
msgid "`bulkOperations.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/bulkOperations.py>`__ - Sample that showcases how to get, add or remove devices in bulk from Internet of Things Foundation."
msgstr ""
"`bulkOperations.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/bulkOperations.py>`__ - Internet of Things Foundation에서 대량으로 디바이스를 가져오고 추가하거나 제거하는 방법을 보여주는 샘플"

#: ../libraries/python_cli_for_api.rst:619
msgid "`deviceDiagnostics.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/deviceDiagnostics.py>`__ - A sample that showcases various Device Diagnostic operations like clear logs, retrieve logs, add log information, delete logs, get specific log, clear error codes, get device error codes and add an error code to Internet of Things Foundation."
msgstr ""
"`deviceDiagnostics.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/deviceDiagnostics.py>`__ - 여러 디바이스 진단 오퍼레이션(로그 지우기, 로그 검색, 로그 정보 추가, 로그 삭제, 특정 로그 가져오기, 오류 코드 지우기, 디바이스 오류 코드 가져오기 및 Internet of Things Foundation에 오류 코드 추가)을 보여주는 샘플"

#: ../libraries/python_cli_for_api.rst:620
msgid "`deviceTypes.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/deviceTypes.py>`__ - Sample that showcases various Device Type API operations like list all, create, delete, view and update device types in Internet of Things Foundation."
msgstr ""
"`deviceTypes.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/deviceTypes.py>`__ - 여러 디바이스 유형 API 오퍼레이션(모두 나열, Internet of Things Foundation에서 디바이스 유형 작성, 삭제, 보기 및 업데이트)을 보여주는 샘플"

#: ../libraries/python_cli_for_api.rst:621
msgid "`devices.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/devices.py>`__ - A sample that showcases various Device operations like list, add, remove, view, update, view location and view management information of a device in Internet of Things Foundation."
msgstr ""
"`devices.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/devices.py>`__ - 여러 디바이스 오퍼레이션(나열, 추가, 제거, 보기, 업데이트, 위치 보기 및 Internet of Things Foundation에서 디바이스의 관리 정보 보기)을 보여주는 샘플"

#: ../libraries/python_cli_for_api.rst:622
msgid "`historian.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/historian.py>`__ - A sample that showcases how to retrieve historical events from Internet of Things Foundation."
msgstr ""
"`historian.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/historian.py>`__ - Internet of Things Foundation에서 히스토리 이벤트를 검색하는 방법을 보여주는 샘플"

#: ../libraries/python_cli_for_api.rst:623
msgid "`logConnection.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/logConnection.py>`__ - A sample that showcases device connectivity log operations that can be performed on Internet of Things Foundation."
msgstr ""
"`logConnection.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/logConnection.py>`__ - Internet of Things Foundation에서 수행될 수 있는 디바이스 연결 로그 오퍼레이션을 보여주는 샘플"

#: ../libraries/python_cli_for_api.rst:624
msgid "`organization.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/organization.py>`__ - A sample that showcases organization operations that can be performed on Internet of Things Foundation."
msgstr ""
"`organization.py <https://github.com/ibm-messaging/iot-python/blob/master/samples/apiExamples/organization.py>`__ - Internet of Things Foundation에서 수행될 수 있는 조직 오퍼레이션을 보여주는 샘플"

